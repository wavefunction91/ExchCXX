/**
 * ExchCXX 
 *
 * Copyright (c) 2020-2024, The Regents of the University of California,
 * through Lawrence Berkeley National Laboratory (subject to receipt of
 * any required approvals from the U.S. Dept. of Energy). 
 *
 * Portions Copyright (c) Microsoft Corporation.
 *
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 
 * (1) Redistributions of source code must retain the above copyright notice,
 * this list of conditions and the following disclaimer.
 * 
 * (2) Redistributions in binary form must reproduce the above copyright
 * notice, this list of conditions and the following disclaimer in the
 * documentation and/or other materials provided with the distribution.
 * 
 * (3) Neither the name of the University of California, Lawrence Berkeley
 * National Laboratory, U.S. Dept. of Energy nor the names of its contributors
 * may be used to endorse or promote products derived from this software
 * without specific prior written permission.
 * 
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 * 
 * You are under no obligation whatsoever to provide any bug fixes, patches,
 * or upgrades to the features, functionality or performance of the source
 * code ("Enhancements") to anyone; however, if you choose to make your
 * Enhancements available either publicly, or directly to Lawrence Berkeley
 * National Laboratory, without imposing a separate written license agreement
 * for such Enhancements, then you hereby grant the following license: a
 * non-exclusive, royalty-free perpetual license to install, use, modify,
 * prepare derivative works, incorporate into other computer software,
 * distribute, and sublicense such enhancements or derivative works thereof,
 * in binary and source code form.
 */

#pragma once
#include <cmath>

#include <exchcxx/impl/builtin/fwd.hpp>
#include <exchcxx/impl/builtin/constants.hpp>
#include <exchcxx/impl/builtin/kernel_type.hpp>
#include <exchcxx/impl/builtin/util.hpp>

#include <exchcxx/impl/builtin/kernels/screening_interface.hpp>



namespace ExchCXX {

template <>
struct kernel_traits< BuiltinLYP > :
  public gga_screening_interface< BuiltinLYP > {

  static constexpr bool is_lda  = false;
  static constexpr bool is_gga  = true;
  static constexpr bool is_mgga = false;
  static constexpr bool needs_laplacian = false;
  static constexpr bool is_kedf = false;
  static constexpr bool is_epc  = false;

  static constexpr double dens_tol  = 1e-32;
  static constexpr double zeta_tol  = 1e-15;
  static constexpr double sigma_tol  = 2.1544346900318956e-43;
  static constexpr double tau_tol = is_kedf ? 0.0 : 1e-20;


  static constexpr double a = 0.04918;
  static constexpr double b = 0.132;
  static constexpr double c = 0.2533;
  static constexpr double d = 0.349;

  BUILTIN_KERNEL_EVAL_RETURN
    eval_exc_unpolar_impl( double rho, double sigma, double& eps ) {

    constexpr double t20 = constants::m_cbrt_3;
    constexpr double t23 = constants::m_cbrt_pi_sq;
    constexpr double t48 = constants::m_cbrt_2;
    constexpr double t21 = t20 * t20;
    constexpr double t24 = t23 * t23;
    constexpr double t49 = t48 * t48;


    const double t1 = safe_math::cbrt( rho );
    const double t2 = 0.1e1 / t1;
    const double t4 = d * t2 + 0.1e1;
    const double t5 = 0.1e1 / t4;
    const double t7 = safe_math::exp( -c * t2 );
    const double t8 = b * t7;
    const double t9 = rho * rho;
    const double t10 = t1 * t1;
    const double t12 = 0.1e1 / t10 / t9;
    const double t13 = sigma * t12;
    const double t15 = d * t5 + c;
    const double t16 = t15 * t2;
    const double t18 = -0.1e1 / 0.72e2 - 0.7e1 / 0.72e2 * t16;
    const double t26 = 0.1e1 <= zeta_tol;
    const double t27 = zeta_tol * zeta_tol;
    const double t28 = safe_math::cbrt( zeta_tol );
    const double t29 = t28 * t28;
    const double t31 = piecewise_functor_3( t26, t29 * t27, 1.0 );
    const double t35 = 0.5e1 / 0.2e1 - t16 / 0.18e2;
    const double t36 = t35 * sigma;
    const double t37 = t12 * t31;
    const double t40 = t16 - 0.11e2;
    const double t41 = t40 * sigma;
    const double t44 = piecewise_functor_3( t26, t29 * t27 * zeta_tol, 1.0 );
    const double t45 = t12 * t44;
    const double t50 = sigma * t49;
    const double t53 = piecewise_functor_3( t26, t27, 1.0 );
    const double t54 = t53 * sigma;
    const double t56 = t49 * t12 * t31;
    const double t62 = -t13 * t18 - 0.3e1 / 0.1e2 * t21 * t24 * t31 + t36 * t37 / 0.8e1 + t41 * t45 / 0.144e3 - t48 * ( 0.4e1 / 0.3e1 * t50 * t37 - t54 * t56 / 0.2e1 ) / 0.8e1;


    eps = a * ( t8 * t5 * t62 - t5 );

  }

  BUILTIN_KERNEL_EVAL_RETURN
    eval_exc_vxc_unpolar_impl( double rho, double sigma, double& eps, double& vrho, double& vsigma ) {

    constexpr double t20 = constants::m_cbrt_3;
    constexpr double t23 = constants::m_cbrt_pi_sq;
    constexpr double t48 = constants::m_cbrt_2;
    constexpr double t21 = t20 * t20;
    constexpr double t24 = t23 * t23;
    constexpr double t49 = t48 * t48;
    constexpr double t74 = b * c;
    constexpr double t91 = d * d;


    const double t1 = safe_math::cbrt( rho );
    const double t2 = 0.1e1 / t1;
    const double t4 = d * t2 + 0.1e1;
    const double t5 = 0.1e1 / t4;
    const double t7 = safe_math::exp( -c * t2 );
    const double t8 = b * t7;
    const double t9 = rho * rho;
    const double t10 = t1 * t1;
    const double t12 = 0.1e1 / t10 / t9;
    const double t13 = sigma * t12;
    const double t15 = d * t5 + c;
    const double t16 = t15 * t2;
    const double t18 = -0.1e1 / 0.72e2 - 0.7e1 / 0.72e2 * t16;
    const double t26 = 0.1e1 <= zeta_tol;
    const double t27 = zeta_tol * zeta_tol;
    const double t28 = safe_math::cbrt( zeta_tol );
    const double t29 = t28 * t28;
    const double t31 = piecewise_functor_3( t26, t29 * t27, 1.0 );
    const double t35 = 0.5e1 / 0.2e1 - t16 / 0.18e2;
    const double t36 = t35 * sigma;
    const double t37 = t12 * t31;
    const double t40 = t16 - 0.11e2;
    const double t41 = t40 * sigma;
    const double t44 = piecewise_functor_3( t26, t29 * t27 * zeta_tol, 1.0 );
    const double t45 = t12 * t44;
    const double t50 = sigma * t49;
    const double t53 = piecewise_functor_3( t26, t27, 1.0 );
    const double t54 = t53 * sigma;
    const double t56 = t49 * t12 * t31;
    const double t62 = -t13 * t18 - 0.3e1 / 0.1e2 * t21 * t24 * t31 + t36 * t37 / 0.8e1 + t41 * t45 / 0.144e3 - t48 * ( 0.4e1 / 0.3e1 * t50 * t37 - t54 * t56 / 0.2e1 ) / 0.8e1;
    const double t66 = rho * a;
    const double t67 = t4 * t4;
    const double t68 = 0.1e1 / t67;
    const double t69 = t68 * d;
    const double t71 = 0.1e1 / t1 / rho;
    const double t75 = t74 * t71;
    const double t76 = t7 * t5;
    const double t77 = t76 * t62;
    const double t80 = t8 * t68;
    const double t81 = t62 * d;
    const double t85 = t9 * rho;
    const double t87 = 0.1e1 / t10 / t85;
    const double t88 = sigma * t87;
    const double t92 = t91 * t68;
    const double t94 = 0.1e1 / t10 / rho;
    const double t97 = t15 * t71 - t92 * t94;
    const double t98 = 0.7e1 / 0.216e3 * t97;
    const double t100 = t97 / 0.54e2;
    const double t101 = t100 * sigma;
    const double t104 = t87 * t31;
    const double t108 = -t97 / 0.3e1;
    const double t109 = t108 * sigma;
    const double t112 = t87 * t44;
    const double t118 = t49 * t87 * t31;
    const double t124 = 0.8e1 / 0.3e1 * t88 * t18 - t13 * t98 + t101 * t37 / 0.8e1 - t36 * t104 / 0.3e1 + t109 * t45 / 0.144e3 - t41 * t112 / 0.54e2 - t48 * ( -0.32e2 / 0.9e1 * t50 * t104 + 0.4e1 / 0.3e1 * t54 * t118 ) / 0.8e1;
    const double t127 = -t69 * t71 / 0.3e1 + t75 * t77 / 0.3e1 + t80 * t81 * t71 / 0.3e1 + t8 * t5 * t124;
    const double t129 = t66 * b;
    const double t138 = t53 * t49;
    const double t144 = -t12 * t18 + t35 * t12 * t31 / 0.8e1 + t40 * t12 * t44 / 0.144e3 - t48 * ( 0.4e1 / 0.3e1 * t56 - t138 * t37 / 0.2e1 ) / 0.8e1;
    const double t145 = t76 * t144;


    eps = a * ( t8 * t5 * t62 - t5 );
    vrho = t66 * t127 + eps;
    vsigma = t129 * t145;

  }

  BUILTIN_KERNEL_EVAL_RETURN
    eval_fxc_unpolar_impl( double rho, double sigma, double& v2rho2, double& v2rhosigma, double& v2sigma2 ) {

    constexpr double t20 = constants::m_cbrt_3;
    constexpr double t23 = constants::m_cbrt_pi_sq;
    constexpr double t48 = constants::m_cbrt_2;
    constexpr double t21 = t20 * t20;
    constexpr double t24 = t23 * t23;
    constexpr double t49 = t48 * t48;
    constexpr double t74 = b * c;
    constexpr double t91 = d * d;
    constexpr double t160 = c * c;
    constexpr double t161 = b * t160;
    constexpr double t193 = t91 * d;
    constexpr double t242 = a * b;


    const double t1 = safe_math::cbrt( rho );
    const double t2 = 0.1e1 / t1;
    const double t4 = d * t2 + 0.1e1;
    const double t5 = 0.1e1 / t4;
    const double t7 = safe_math::exp( -c * t2 );
    const double t8 = b * t7;
    const double t9 = rho * rho;
    const double t10 = t1 * t1;
    const double t12 = 0.1e1 / t10 / t9;
    const double t13 = sigma * t12;
    const double t15 = d * t5 + c;
    const double t16 = t15 * t2;
    const double t18 = -0.1e1 / 0.72e2 - 0.7e1 / 0.72e2 * t16;
    const double t26 = 0.1e1 <= zeta_tol;
    const double t27 = zeta_tol * zeta_tol;
    const double t28 = safe_math::cbrt( zeta_tol );
    const double t29 = t28 * t28;
    const double t31 = piecewise_functor_3( t26, t29 * t27, 1.0 );
    const double t35 = 0.5e1 / 0.2e1 - t16 / 0.18e2;
    const double t36 = t35 * sigma;
    const double t37 = t12 * t31;
    const double t40 = t16 - 0.11e2;
    const double t41 = t40 * sigma;
    const double t44 = piecewise_functor_3( t26, t29 * t27 * zeta_tol, 1.0 );
    const double t45 = t12 * t44;
    const double t50 = sigma * t49;
    const double t53 = piecewise_functor_3( t26, t27, 1.0 );
    const double t54 = t53 * sigma;
    const double t56 = t49 * t12 * t31;
    const double t62 = -t13 * t18 - 0.3e1 / 0.1e2 * t21 * t24 * t31 + t36 * t37 / 0.8e1 + t41 * t45 / 0.144e3 - t48 * ( 0.4e1 / 0.3e1 * t50 * t37 - t54 * t56 / 0.2e1 ) / 0.8e1;
    const double t66 = rho * a;
    const double t67 = t4 * t4;
    const double t68 = 0.1e1 / t67;
    const double t69 = t68 * d;
    const double t71 = 0.1e1 / t1 / rho;
    const double t75 = t74 * t71;
    const double t76 = t7 * t5;
    const double t77 = t76 * t62;
    const double t80 = t8 * t68;
    const double t81 = t62 * d;
    const double t85 = t9 * rho;
    const double t87 = 0.1e1 / t10 / t85;
    const double t88 = sigma * t87;
    const double t92 = t91 * t68;
    const double t94 = 0.1e1 / t10 / rho;
    const double t97 = t15 * t71 - t92 * t94;
    const double t98 = 0.7e1 / 0.216e3 * t97;
    const double t100 = t97 / 0.54e2;
    const double t101 = t100 * sigma;
    const double t104 = t87 * t31;
    const double t108 = -t97 / 0.3e1;
    const double t109 = t108 * sigma;
    const double t112 = t87 * t44;
    const double t118 = t49 * t87 * t31;
    const double t124 = 0.8e1 / 0.3e1 * t88 * t18 - t13 * t98 + t101 * t37 / 0.8e1 - t36 * t104 / 0.3e1 + t109 * t45 / 0.144e3 - t41 * t112 / 0.54e2 - t48 * ( -0.32e2 / 0.9e1 * t50 * t104 + 0.4e1 / 0.3e1 * t54 * t118 ) / 0.8e1;
    const double t127 = -t69 * t71 / 0.3e1 + t75 * t77 / 0.3e1 + t80 * t81 * t71 / 0.3e1 + t8 * t5 * t124;
    const double t129 = t66 * b;
    const double t138 = t53 * t49;
    const double t144 = -t12 * t18 + t35 * t12 * t31 / 0.8e1 + t40 * t12 * t44 / 0.144e3 - t48 * ( 0.4e1 / 0.3e1 * t56 - t138 * t37 / 0.2e1 ) / 0.8e1;
    const double t145 = t76 * t144;
    const double t149 = 0.1e1 / t67 / t4;
    const double t150 = t149 * t91;
    const double t154 = 0.1e1 / t1 / t9;
    const double t157 = t74 * t154;
    const double t162 = t161 * t12;
    const double t165 = t74 * t12;
    const double t166 = t7 * t68;
    const double t167 = t166 * t81;
    const double t170 = t76 * t124;
    const double t173 = t8 * t149;
    const double t174 = t62 * t91;
    const double t178 = t124 * d;
    const double t185 = t9 * t9;
    const double t187 = 0.1e1 / t10 / t185;
    const double t188 = sigma * t187;
    const double t194 = t193 * t149;
    const double t195 = 0.1e1 / t85;
    const double t196 = t194 * t195;
    const double t198 = t92 * t12;
    const double t200 = t15 * t154;
    const double t202 = -0.7e1 / 0.324e3 * t196 + 0.7e1 / 0.108e3 * t198 - 0.7e1 / 0.162e3 * t200;
    const double t207 = -t196 / 0.81e2 + t198 / 0.27e2 - 0.2e1 / 0.81e2 * t200;
    const double t208 = t207 * sigma;
    const double t213 = t187 * t31;
    const double t219 = 0.2e1 / 0.9e1 * t196 - 0.2e1 / 0.3e1 * t198 + 0.4e1 / 0.9e1 * t200;
    const double t220 = t219 * sigma;
    const double t225 = t187 * t44;
    const double t231 = t49 * t187 * t31;
    const double t237 = -0.88e2 / 0.9e1 * t188 * t18 + 0.16e2 / 0.3e1 * t88 * t98 - t13 * t202 + t208 * t37 / 0.8e1 - 0.2e1 / 0.3e1 * t101 * t104 + 0.11e2 / 0.9e1 * t36 * t213 + t220 * t45 / 0.144e3 - t109 * t112 / 0.27e2 + 0.11e2 / 0.162e3 * t41 * t225 - t48 * ( 0.352e3 / 0.27e2 * t50 * t213 - 0.44e2 / 0.9e1 * t54 * t231 ) / 0.8e1;
    const double t240 = -0.2e1 / 0.9e1 * t150 * t12 + 0.4e1 / 0.9e1 * t69 * t154 - 0.4e1 / 0.9e1 * t157 * t77 + t162 * t77 / 0.9e1 + 0.2e1 / 0.9e1 * t165 * t167 + 0.2e1 / 0.3e1 * t75 * t170 + 0.2e1 / 0.9e1 * t173 * t174 * t12 + 0.2e1 / 0.3e1 * t80 * t178 * t71 - 0.4e1 / 0.9e1 * t80 * t81 * t154 + t8 * t5 * t237;
    const double t245 = t2 * a * b;
    const double t246 = c * t7;
    const double t247 = t5 * t144;
    const double t252 = t166 * t144 * d;
    const double t276 = 0.8e1 / 0.3e1 * t87 * t18 - t12 * t98 + t100 * t12 * t31 / 0.8e1 - t35 * t87 * t31 / 0.3e1 + t108 * t12 * t44 / 0.144e3 - t40 * t87 * t44 / 0.54e2 - t48 * ( -0.32e2 / 0.9e1 * t118 + 0.4e1 / 0.3e1 * t138 * t104 ) / 0.8e1;
    const double t277 = t76 * t276;


    v2rho2 = 0.2e1 * a * t127 + t66 * t240;
    v2rhosigma = t242 * t145 + t245 * t246 * t247 / 0.3e1 + t245 * t252 / 0.3e1 + t129 * t277;
    v2sigma2 = 0.e0;

  }

  BUILTIN_KERNEL_EVAL_RETURN
    eval_vxc_fxc_unpolar_impl( double rho, double sigma, double& vrho, double& vsigma, double& v2rho2, double& v2rhosigma, double& v2sigma2 ) {

    constexpr double t20 = constants::m_cbrt_3;
    constexpr double t23 = constants::m_cbrt_pi_sq;
    constexpr double t48 = constants::m_cbrt_2;
    constexpr double t21 = t20 * t20;
    constexpr double t24 = t23 * t23;
    constexpr double t49 = t48 * t48;
    constexpr double t74 = b * c;
    constexpr double t91 = d * d;
    constexpr double t160 = c * c;
    constexpr double t161 = b * t160;
    constexpr double t193 = t91 * d;
    constexpr double t242 = a * b;


    const double t1 = safe_math::cbrt( rho );
    const double t2 = 0.1e1 / t1;
    const double t4 = d * t2 + 0.1e1;
    const double t5 = 0.1e1 / t4;
    const double t7 = safe_math::exp( -c * t2 );
    const double t8 = b * t7;
    const double t9 = rho * rho;
    const double t10 = t1 * t1;
    const double t12 = 0.1e1 / t10 / t9;
    const double t13 = sigma * t12;
    const double t15 = d * t5 + c;
    const double t16 = t15 * t2;
    const double t18 = -0.1e1 / 0.72e2 - 0.7e1 / 0.72e2 * t16;
    const double t26 = 0.1e1 <= zeta_tol;
    const double t27 = zeta_tol * zeta_tol;
    const double t28 = safe_math::cbrt( zeta_tol );
    const double t29 = t28 * t28;
    const double t31 = piecewise_functor_3( t26, t29 * t27, 1.0 );
    const double t35 = 0.5e1 / 0.2e1 - t16 / 0.18e2;
    const double t36 = t35 * sigma;
    const double t37 = t12 * t31;
    const double t40 = t16 - 0.11e2;
    const double t41 = t40 * sigma;
    const double t44 = piecewise_functor_3( t26, t29 * t27 * zeta_tol, 1.0 );
    const double t45 = t12 * t44;
    const double t50 = sigma * t49;
    const double t53 = piecewise_functor_3( t26, t27, 1.0 );
    const double t54 = t53 * sigma;
    const double t56 = t49 * t12 * t31;
    const double t62 = -t13 * t18 - 0.3e1 / 0.1e2 * t21 * t24 * t31 + t36 * t37 / 0.8e1 + t41 * t45 / 0.144e3 - t48 * ( 0.4e1 / 0.3e1 * t50 * t37 - t54 * t56 / 0.2e1 ) / 0.8e1;
    const double tzk0 = a * ( t8 * t5 * t62 - t5 );
    const double t66 = rho * a;
    const double t67 = t4 * t4;
    const double t68 = 0.1e1 / t67;
    const double t69 = t68 * d;
    const double t71 = 0.1e1 / t1 / rho;
    const double t75 = t74 * t71;
    const double t76 = t7 * t5;
    const double t77 = t76 * t62;
    const double t80 = t8 * t68;
    const double t81 = t62 * d;
    const double t85 = t9 * rho;
    const double t87 = 0.1e1 / t10 / t85;
    const double t88 = sigma * t87;
    const double t92 = t91 * t68;
    const double t94 = 0.1e1 / t10 / rho;
    const double t97 = t15 * t71 - t92 * t94;
    const double t98 = 0.7e1 / 0.216e3 * t97;
    const double t100 = t97 / 0.54e2;
    const double t101 = t100 * sigma;
    const double t104 = t87 * t31;
    const double t108 = -t97 / 0.3e1;
    const double t109 = t108 * sigma;
    const double t112 = t87 * t44;
    const double t118 = t49 * t87 * t31;
    const double t124 = 0.8e1 / 0.3e1 * t88 * t18 - t13 * t98 + t101 * t37 / 0.8e1 - t36 * t104 / 0.3e1 + t109 * t45 / 0.144e3 - t41 * t112 / 0.54e2 - t48 * ( -0.32e2 / 0.9e1 * t50 * t104 + 0.4e1 / 0.3e1 * t54 * t118 ) / 0.8e1;
    const double t127 = -t69 * t71 / 0.3e1 + t75 * t77 / 0.3e1 + t80 * t81 * t71 / 0.3e1 + t8 * t5 * t124;
    const double t129 = t66 * b;
    const double t138 = t53 * t49;
    const double t144 = -t12 * t18 + t35 * t12 * t31 / 0.8e1 + t40 * t12 * t44 / 0.144e3 - t48 * ( 0.4e1 / 0.3e1 * t56 - t138 * t37 / 0.2e1 ) / 0.8e1;
    const double t145 = t76 * t144;
    const double t149 = 0.1e1 / t67 / t4;
    const double t150 = t149 * t91;
    const double t154 = 0.1e1 / t1 / t9;
    const double t157 = t74 * t154;
    const double t162 = t161 * t12;
    const double t165 = t74 * t12;
    const double t166 = t7 * t68;
    const double t167 = t166 * t81;
    const double t170 = t76 * t124;
    const double t173 = t8 * t149;
    const double t174 = t62 * t91;
    const double t178 = t124 * d;
    const double t185 = t9 * t9;
    const double t187 = 0.1e1 / t10 / t185;
    const double t188 = sigma * t187;
    const double t194 = t193 * t149;
    const double t195 = 0.1e1 / t85;
    const double t196 = t194 * t195;
    const double t198 = t92 * t12;
    const double t200 = t15 * t154;
    const double t202 = -0.7e1 / 0.324e3 * t196 + 0.7e1 / 0.108e3 * t198 - 0.7e1 / 0.162e3 * t200;
    const double t207 = -t196 / 0.81e2 + t198 / 0.27e2 - 0.2e1 / 0.81e2 * t200;
    const double t208 = t207 * sigma;
    const double t213 = t187 * t31;
    const double t219 = 0.2e1 / 0.9e1 * t196 - 0.2e1 / 0.3e1 * t198 + 0.4e1 / 0.9e1 * t200;
    const double t220 = t219 * sigma;
    const double t225 = t187 * t44;
    const double t231 = t49 * t187 * t31;
    const double t237 = -0.88e2 / 0.9e1 * t188 * t18 + 0.16e2 / 0.3e1 * t88 * t98 - t13 * t202 + t208 * t37 / 0.8e1 - 0.2e1 / 0.3e1 * t101 * t104 + 0.11e2 / 0.9e1 * t36 * t213 + t220 * t45 / 0.144e3 - t109 * t112 / 0.27e2 + 0.11e2 / 0.162e3 * t41 * t225 - t48 * ( 0.352e3 / 0.27e2 * t50 * t213 - 0.44e2 / 0.9e1 * t54 * t231 ) / 0.8e1;
    const double t240 = -0.2e1 / 0.9e1 * t150 * t12 + 0.4e1 / 0.9e1 * t69 * t154 - 0.4e1 / 0.9e1 * t157 * t77 + t162 * t77 / 0.9e1 + 0.2e1 / 0.9e1 * t165 * t167 + 0.2e1 / 0.3e1 * t75 * t170 + 0.2e1 / 0.9e1 * t173 * t174 * t12 + 0.2e1 / 0.3e1 * t80 * t178 * t71 - 0.4e1 / 0.9e1 * t80 * t81 * t154 + t8 * t5 * t237;
    const double t245 = t2 * a * b;
    const double t246 = c * t7;
    const double t247 = t5 * t144;
    const double t252 = t166 * t144 * d;
    const double t276 = 0.8e1 / 0.3e1 * t87 * t18 - t12 * t98 + t100 * t12 * t31 / 0.8e1 - t35 * t87 * t31 / 0.3e1 + t108 * t12 * t44 / 0.144e3 - t40 * t87 * t44 / 0.54e2 - t48 * ( -0.32e2 / 0.9e1 * t118 + 0.4e1 / 0.3e1 * t138 * t104 ) / 0.8e1;
    const double t277 = t76 * t276;


    vrho = t66 * t127 + tzk0;
    vsigma = t129 * t145;
    v2rho2 = 0.2e1 * a * t127 + t66 * t240;
    v2rhosigma = t242 * t145 + t245 * t246 * t247 / 0.3e1 + t245 * t252 / 0.3e1 + t129 * t277;
    v2sigma2 = 0.e0;

  }

  BUILTIN_KERNEL_EVAL_RETURN
    eval_exc_polar_impl( double rho_a, double rho_b, double sigma_aa, double sigma_ab, double sigma_bb, double& eps ) {

    constexpr double t32 = constants::m_cbrt_3;
    constexpr double t35 = constants::m_cbrt_pi_sq;
    constexpr double t62 = constants::m_cbrt_2;
    constexpr double t33 = t32 * t32;
    constexpr double t36 = t35 * t35;
    constexpr double t37 = t33 * t36;


    const double t1 = rho_a - rho_b;
    const double t2 = t1 * t1;
    const double t3 = rho_a + rho_b;
    const double t4 = t3 * t3;
    const double t5 = 0.1e1 / t4;
    const double t7 = -t2 * t5 + 0.1e1;
    const double t8 = safe_math::cbrt( t3 );
    const double t9 = 0.1e1 / t8;
    const double t11 = d * t9 + 0.1e1;
    const double t12 = 0.1e1 / t11;
    const double t15 = safe_math::exp( -c * t9 );
    const double t16 = b * t15;
    const double t18 = sigma_aa + 0.2e1 * sigma_ab + sigma_bb;
    const double t19 = t8 * t8;
    const double t21 = 0.1e1 / t19 / t4;
    const double t22 = t18 * t21;
    const double t24 = d * t12 + c;
    const double t25 = t24 * t9;
    const double t27 = 0.47e2 - 0.7e1 * t25;
    const double t30 = t7 * t27 / 0.72e2 - 0.2e1 / 0.3e1;
    const double t38 = 0.1e1 / t3;
    const double t39 = t1 * t38;
    const double t40 = 0.1e1 + t39;
    const double t41 = t40 <= zeta_tol;
    const double t42 = zeta_tol * zeta_tol;
    const double t43 = safe_math::cbrt( zeta_tol );
    const double t44 = t43 * t43;
    const double t45 = t44 * t42;
    const double t46 = t40 * t40;
    const double t47 = safe_math::cbrt( t40 );
    const double t48 = t47 * t47;
    const double t49 = t48 * t46;
    const double t50 = piecewise_functor_3( t41, t45, t49 );
    const double t51 = 0.1e1 - t39;
    const double t52 = t51 <= zeta_tol;
    const double t53 = t51 * t51;
    const double t54 = safe_math::cbrt( t51 );
    const double t55 = t54 * t54;
    const double t56 = t55 * t53;
    const double t57 = piecewise_functor_3( t52, t45, t56 );
    const double t58 = t50 + t57;
    const double t63 = t62 * t7;
    const double t65 = 0.5e1 / 0.2e1 - t25 / 0.18e2;
    const double t66 = rho_a * rho_a;
    const double t67 = safe_math::cbrt( rho_a );
    const double t68 = t67 * t67;
    const double t70 = 0.1e1 / t68 / t66;
    const double t71 = sigma_aa * t70;
    const double t72 = t71 * t50;
    const double t73 = rho_b * rho_b;
    const double t74 = safe_math::cbrt( rho_b );
    const double t75 = t74 * t74;
    const double t77 = 0.1e1 / t75 / t73;
    const double t78 = sigma_bb * t77;
    const double t79 = t78 * t57;
    const double t80 = t72 + t79;
    const double t81 = t65 * t80;
    const double t84 = t25 - 0.11e2;
    const double t86 = t44 * t42 * zeta_tol;
    const double t89 = piecewise_functor_3( t41, t86, t48 * t46 * t40 );
    const double t93 = piecewise_functor_3( t52, t86, t55 * t53 * t51 );
    const double t95 = t71 * t89 + t78 * t93;
    const double t96 = t84 * t95;
    const double t101 = piecewise_functor_3( t41, t42, t46 );
    const double t102 = t101 * sigma_bb;
    const double t103 = t77 * t57;
    const double t106 = piecewise_functor_3( t52, t42, t53 );
    const double t107 = t106 * sigma_aa;
    const double t108 = t70 * t50;
    const double t114 = -t22 * t30 - 0.3e1 / 0.2e2 * t37 * t7 * t58 + t63 * t81 / 0.32e2 + t63 * t96 / 0.576e3 - t62 * ( 0.2e1 / 0.3e1 * t72 + 0.2e1 / 0.3e1 * t79 - t102 * t103 / 0.4e1 - t107 * t108 / 0.4e1 ) / 0.8e1;


    eps = a * ( t16 * t12 * t114 - t7 * t12 );

  }

  BUILTIN_KERNEL_EVAL_RETURN
    eval_exc_vxc_polar_impl( double rho_a, double rho_b, double sigma_aa, double sigma_ab, double sigma_bb, double& eps, double& vrho_a, double& vrho_b, double& vsigma_aa, double& vsigma_ab, double& vsigma_bb ) {

    constexpr double t32 = constants::m_cbrt_3;
    constexpr double t35 = constants::m_cbrt_pi_sq;
    constexpr double t62 = constants::m_cbrt_2;
    constexpr double t33 = t32 * t32;
    constexpr double t36 = t35 * t35;
    constexpr double t37 = t33 * t36;
    constexpr double t134 = b * c;
    constexpr double t151 = d * d;


    const double t1 = rho_a - rho_b;
    const double t2 = t1 * t1;
    const double t3 = rho_a + rho_b;
    const double t4 = t3 * t3;
    const double t5 = 0.1e1 / t4;
    const double t7 = -t2 * t5 + 0.1e1;
    const double t8 = safe_math::cbrt( t3 );
    const double t9 = 0.1e1 / t8;
    const double t11 = d * t9 + 0.1e1;
    const double t12 = 0.1e1 / t11;
    const double t15 = safe_math::exp( -c * t9 );
    const double t16 = b * t15;
    const double t18 = sigma_aa + 0.2e1 * sigma_ab + sigma_bb;
    const double t19 = t8 * t8;
    const double t21 = 0.1e1 / t19 / t4;
    const double t22 = t18 * t21;
    const double t24 = d * t12 + c;
    const double t25 = t24 * t9;
    const double t27 = 0.47e2 - 0.7e1 * t25;
    const double t30 = t7 * t27 / 0.72e2 - 0.2e1 / 0.3e1;
    const double t38 = 0.1e1 / t3;
    const double t39 = t1 * t38;
    const double t40 = 0.1e1 + t39;
    const double t41 = t40 <= zeta_tol;
    const double t42 = zeta_tol * zeta_tol;
    const double t43 = safe_math::cbrt( zeta_tol );
    const double t44 = t43 * t43;
    const double t45 = t44 * t42;
    const double t46 = t40 * t40;
    const double t47 = safe_math::cbrt( t40 );
    const double t48 = t47 * t47;
    const double t49 = t48 * t46;
    const double t50 = piecewise_functor_3( t41, t45, t49 );
    const double t51 = 0.1e1 - t39;
    const double t52 = t51 <= zeta_tol;
    const double t53 = t51 * t51;
    const double t54 = safe_math::cbrt( t51 );
    const double t55 = t54 * t54;
    const double t56 = t55 * t53;
    const double t57 = piecewise_functor_3( t52, t45, t56 );
    const double t58 = t50 + t57;
    const double t63 = t62 * t7;
    const double t65 = 0.5e1 / 0.2e1 - t25 / 0.18e2;
    const double t66 = rho_a * rho_a;
    const double t67 = safe_math::cbrt( rho_a );
    const double t68 = t67 * t67;
    const double t70 = 0.1e1 / t68 / t66;
    const double t71 = sigma_aa * t70;
    const double t72 = t71 * t50;
    const double t73 = rho_b * rho_b;
    const double t74 = safe_math::cbrt( rho_b );
    const double t75 = t74 * t74;
    const double t77 = 0.1e1 / t75 / t73;
    const double t78 = sigma_bb * t77;
    const double t79 = t78 * t57;
    const double t80 = t72 + t79;
    const double t81 = t65 * t80;
    const double t84 = t25 - 0.11e2;
    const double t86 = t44 * t42 * zeta_tol;
    const double t89 = piecewise_functor_3( t41, t86, t48 * t46 * t40 );
    const double t93 = piecewise_functor_3( t52, t86, t55 * t53 * t51 );
    const double t95 = t71 * t89 + t78 * t93;
    const double t96 = t84 * t95;
    const double t101 = piecewise_functor_3( t41, t42, t46 );
    const double t102 = t101 * sigma_bb;
    const double t103 = t77 * t57;
    const double t106 = piecewise_functor_3( t52, t42, t53 );
    const double t107 = t106 * sigma_aa;
    const double t108 = t70 * t50;
    const double t114 = -t22 * t30 - 0.3e1 / 0.2e2 * t37 * t7 * t58 + t63 * t81 / 0.32e2 + t63 * t96 / 0.576e3 - t62 * ( 0.2e1 / 0.3e1 * t72 + 0.2e1 / 0.3e1 * t79 - t102 * t103 / 0.4e1 - t107 * t108 / 0.4e1 ) / 0.8e1;
    const double t118 = t3 * a;
    const double t119 = t1 * t5;
    const double t120 = t4 * t3;
    const double t121 = 0.1e1 / t120;
    const double t122 = t2 * t121;
    const double t124 = -0.2e1 * t119 + 0.2e1 * t122;
    const double t126 = t11 * t11;
    const double t127 = 0.1e1 / t126;
    const double t128 = t7 * t127;
    const double t130 = 0.1e1 / t8 / t3;
    const double t131 = d * t130;
    const double t133 = t128 * t131 / 0.3e1;
    const double t135 = t134 * t130;
    const double t136 = t15 * t12;
    const double t137 = t136 * t114;
    const double t139 = t135 * t137 / 0.3e1;
    const double t140 = t16 * t127;
    const double t141 = t114 * d;
    const double t144 = t140 * t141 * t130 / 0.3e1;
    const double t146 = 0.1e1 / t19 / t120;
    const double t147 = t18 * t146;
    const double t149 = 0.8e1 / 0.3e1 * t147 * t30;
    const double t152 = t151 * t127;
    const double t154 = 0.1e1 / t19 / t3;
    const double t157 = t24 * t130 - t152 * t154;
    const double t158 = 0.7e1 / 0.3e1 * t157;
    const double t159 = t7 * t158;
    const double t161 = t124 * t27 / 0.72e2 + t159 / 0.72e2;
    const double t166 = t48 * t40;
    const double t167 = t38 - t119;
    const double t168 = t166 * t167;
    const double t170 = piecewise_functor_3( t41, 0.0, 0.8e1 / 0.3e1 * t168 );
    const double t171 = t55 * t51;
    const double t172 = -t167;
    const double t173 = t171 * t172;
    const double t175 = piecewise_functor_3( t52, 0.0, 0.8e1 / 0.3e1 * t173 );
    const double t176 = t170 + t175;
    const double t180 = t62 * t124;
    const double t183 = t157 / 0.54e2;
    const double t184 = t183 * t80;
    const double t186 = t63 * t184 / 0.32e2;
    const double t189 = 0.1e1 / t68 / t66 / rho_a;
    const double t190 = sigma_aa * t189;
    const double t191 = t190 * t50;
    const double t193 = t71 * t170;
    const double t194 = t78 * t175;
    const double t195 = -0.8e1 / 0.3e1 * t191 + t193 + t194;
    const double t196 = t65 * t195;
    const double t202 = -t157 / 0.3e1;
    const double t203 = t202 * t95;
    const double t205 = t63 * t203 / 0.576e3;
    const double t210 = piecewise_functor_3( t41, 0.0, 0.11e2 / 0.3e1 * t49 * t167 );
    const double t214 = piecewise_functor_3( t52, 0.0, 0.11e2 / 0.3e1 * t56 * t172 );
    const double t216 = -0.8e1 / 0.3e1 * t190 * t89 + t71 * t210 + t78 * t214;
    const double t217 = t84 * t216;
    const double t225 = piecewise_functor_3( t41, 0.0, 0.2e1 * t40 * t167 );
    const double t226 = t225 * sigma_bb;
    const double t229 = t77 * t175;
    const double t234 = piecewise_functor_3( t52, 0.0, 0.2e1 * t51 * t172 );
    const double t235 = t234 * sigma_aa;
    const double t238 = t189 * t50;
    const double t241 = t70 * t170;
    const double t247 = t149 - t22 * t161 - 0.3e1 / 0.2e2 * t37 * t124 * t58 - 0.3e1 / 0.2e2 * t37 * t7 * t176 + t180 * t81 / 0.32e2 + t186 + t63 * t196 / 0.32e2 + t180 * t96 / 0.576e3 + t205 + t63 * t217 / 0.576e3 - t62 * ( -0.16e2 / 0.9e1 * t191 + 0.2e1 / 0.3e1 * t193 + 0.2e1 / 0.3e1 * t194 - t226 * t103 / 0.4e1 - t102 * t229 / 0.4e1 - t235 * t108 / 0.4e1 + 0.2e1 / 0.3e1 * t107 * t238 - t107 * t241 / 0.4e1 ) / 0.8e1;
    const double t250 = t16 * t12 * t247 - t124 * t12 - t133 + t139 + t144;
    const double t253 = 0.2e1 * t119 + 0.2e1 * t122;
    const double t257 = t253 * t27 / 0.72e2 + t159 / 0.72e2;
    const double t262 = -t38 - t119;
    const double t263 = t166 * t262;
    const double t265 = piecewise_functor_3( t41, 0.0, 0.8e1 / 0.3e1 * t263 );
    const double t266 = -t262;
    const double t267 = t171 * t266;
    const double t269 = piecewise_functor_3( t52, 0.0, 0.8e1 / 0.3e1 * t267 );
    const double t270 = t265 + t269;
    const double t274 = t62 * t253;
    const double t277 = t71 * t265;
    const double t280 = 0.1e1 / t75 / t73 / rho_b;
    const double t281 = sigma_bb * t280;
    const double t282 = t281 * t57;
    const double t284 = t78 * t269;
    const double t285 = t277 - 0.8e1 / 0.3e1 * t282 + t284;
    const double t286 = t65 * t285;
    const double t293 = piecewise_functor_3( t41, 0.0, 0.11e2 / 0.3e1 * t49 * t262 );
    const double t299 = piecewise_functor_3( t52, 0.0, 0.11e2 / 0.3e1 * t56 * t266 );
    const double t301 = t71 * t293 - 0.8e1 / 0.3e1 * t281 * t93 + t78 * t299;
    const double t302 = t84 * t301;
    const double t310 = piecewise_functor_3( t41, 0.0, 0.2e1 * t40 * t262 );
    const double t311 = t310 * sigma_bb;
    const double t314 = t280 * t57;
    const double t317 = t77 * t269;
    const double t322 = piecewise_functor_3( t52, 0.0, 0.2e1 * t51 * t266 );
    const double t323 = t322 * sigma_aa;
    const double t326 = t70 * t265;
    const double t332 = t149 - t22 * t257 - 0.3e1 / 0.2e2 * t37 * t253 * t58 - 0.3e1 / 0.2e2 * t37 * t7 * t270 + t274 * t81 / 0.32e2 + t186 + t63 * t286 / 0.32e2 + t274 * t96 / 0.576e3 + t205 + t63 * t302 / 0.576e3 - t62 * ( 0.2e1 / 0.3e1 * t277 - 0.16e2 / 0.9e1 * t282 + 0.2e1 / 0.3e1 * t284 - t311 * t103 / 0.4e1 + 0.2e1 / 0.3e1 * t102 * t314 - t102 * t317 / 0.4e1 - t323 * t108 / 0.4e1 - t107 * t326 / 0.4e1 ) / 0.8e1;
    const double t335 = t16 * t12 * t332 - t253 * t12 - t133 + t139 + t144;
    const double t337 = t118 * b;
    const double t338 = t21 * t30;
    const double t339 = t65 * t70;
    const double t340 = t339 * t50;
    const double t343 = t84 * t70;
    const double t344 = t343 * t89;
    const double t348 = t106 * t70;
    const double t354 = -t338 + t63 * t340 / 0.32e2 + t63 * t344 / 0.576e3 - t62 * ( 0.2e1 / 0.3e1 * t108 - t348 * t50 / 0.4e1 ) / 0.8e1;
    const double t355 = t136 * t354;
    const double t356 = t154 * a;
    const double t357 = t356 * b;
    const double t358 = t136 * t30;
    const double t361 = t65 * t77;
    const double t362 = t361 * t57;
    const double t365 = t84 * t77;
    const double t366 = t365 * t93;
    const double t370 = t101 * t77;
    const double t376 = -t338 + t63 * t362 / 0.32e2 + t63 * t366 / 0.576e3 - t62 * ( 0.2e1 / 0.3e1 * t103 - t370 * t57 / 0.4e1 ) / 0.8e1;
    const double t377 = t136 * t376;


    eps = a * ( t16 * t12 * t114 - t7 * t12 );
    vrho_a = t118 * t250 + eps;
    vrho_b = t118 * t335 + eps;
    vsigma_aa = t337 * t355;
    vsigma_ab = -0.2e1 * t357 * t358;
    vsigma_bb = t337 * t377;

  }

  BUILTIN_KERNEL_EVAL_RETURN
    eval_fxc_polar_impl( double rho_a, double rho_b, double sigma_aa, double sigma_ab, double sigma_bb, double& v2rho2_aa, double& v2rho2_ab, double& v2rho2_bb, double& v2rhosigma_a_aa, double& v2rhosigma_a_ab, double& v2rhosigma_a_bb, double& v2rhosigma_b_aa, double& v2rhosigma_b_ab, double& v2rhosigma_b_bb, double& v2sigma2_aa_aa, double& v2sigma2_aa_ab, double& v2sigma2_aa_bb, double& v2sigma2_ab_ab, double& v2sigma2_ab_bb, double& v2sigma2_bb_bb ) {

    constexpr double t32 = constants::m_cbrt_3;
    constexpr double t35 = constants::m_cbrt_pi_sq;
    constexpr double t62 = constants::m_cbrt_2;
    constexpr double t33 = t32 * t32;
    constexpr double t36 = t35 * t35;
    constexpr double t37 = t33 * t36;
    constexpr double t134 = b * c;
    constexpr double t151 = d * d;
    constexpr double t406 = c * c;
    constexpr double t407 = b * t406;
    constexpr double t470 = t151 * d;
    constexpr double t899 = a * b;


    const double t1 = rho_a - rho_b;
    const double t2 = t1 * t1;
    const double t3 = rho_a + rho_b;
    const double t4 = t3 * t3;
    const double t5 = 0.1e1 / t4;
    const double t7 = -t2 * t5 + 0.1e1;
    const double t8 = safe_math::cbrt( t3 );
    const double t9 = 0.1e1 / t8;
    const double t11 = d * t9 + 0.1e1;
    const double t12 = 0.1e1 / t11;
    const double t15 = safe_math::exp( -c * t9 );
    const double t16 = b * t15;
    const double t18 = sigma_aa + 0.2e1 * sigma_ab + sigma_bb;
    const double t19 = t8 * t8;
    const double t21 = 0.1e1 / t19 / t4;
    const double t22 = t18 * t21;
    const double t24 = d * t12 + c;
    const double t25 = t24 * t9;
    const double t27 = 0.47e2 - 0.7e1 * t25;
    const double t30 = t7 * t27 / 0.72e2 - 0.2e1 / 0.3e1;
    const double t38 = 0.1e1 / t3;
    const double t39 = t1 * t38;
    const double t40 = 0.1e1 + t39;
    const double t41 = t40 <= zeta_tol;
    const double t42 = zeta_tol * zeta_tol;
    const double t43 = safe_math::cbrt( zeta_tol );
    const double t44 = t43 * t43;
    const double t45 = t44 * t42;
    const double t46 = t40 * t40;
    const double t47 = safe_math::cbrt( t40 );
    const double t48 = t47 * t47;
    const double t49 = t48 * t46;
    const double t50 = piecewise_functor_3( t41, t45, t49 );
    const double t51 = 0.1e1 - t39;
    const double t52 = t51 <= zeta_tol;
    const double t53 = t51 * t51;
    const double t54 = safe_math::cbrt( t51 );
    const double t55 = t54 * t54;
    const double t56 = t55 * t53;
    const double t57 = piecewise_functor_3( t52, t45, t56 );
    const double t58 = t50 + t57;
    const double t63 = t62 * t7;
    const double t65 = 0.5e1 / 0.2e1 - t25 / 0.18e2;
    const double t66 = rho_a * rho_a;
    const double t67 = safe_math::cbrt( rho_a );
    const double t68 = t67 * t67;
    const double t70 = 0.1e1 / t68 / t66;
    const double t71 = sigma_aa * t70;
    const double t72 = t71 * t50;
    const double t73 = rho_b * rho_b;
    const double t74 = safe_math::cbrt( rho_b );
    const double t75 = t74 * t74;
    const double t77 = 0.1e1 / t75 / t73;
    const double t78 = sigma_bb * t77;
    const double t79 = t78 * t57;
    const double t80 = t72 + t79;
    const double t81 = t65 * t80;
    const double t84 = t25 - 0.11e2;
    const double t86 = t44 * t42 * zeta_tol;
    const double t89 = piecewise_functor_3( t41, t86, t48 * t46 * t40 );
    const double t93 = piecewise_functor_3( t52, t86, t55 * t53 * t51 );
    const double t95 = t71 * t89 + t78 * t93;
    const double t96 = t84 * t95;
    const double t101 = piecewise_functor_3( t41, t42, t46 );
    const double t102 = t101 * sigma_bb;
    const double t103 = t77 * t57;
    const double t106 = piecewise_functor_3( t52, t42, t53 );
    const double t107 = t106 * sigma_aa;
    const double t108 = t70 * t50;
    const double t114 = -t22 * t30 - 0.3e1 / 0.2e2 * t37 * t7 * t58 + t63 * t81 / 0.32e2 + t63 * t96 / 0.576e3 - t62 * ( 0.2e1 / 0.3e1 * t72 + 0.2e1 / 0.3e1 * t79 - t102 * t103 / 0.4e1 - t107 * t108 / 0.4e1 ) / 0.8e1;
    const double t118 = t3 * a;
    const double t119 = t1 * t5;
    const double t120 = t4 * t3;
    const double t121 = 0.1e1 / t120;
    const double t122 = t2 * t121;
    const double t124 = -0.2e1 * t119 + 0.2e1 * t122;
    const double t126 = t11 * t11;
    const double t127 = 0.1e1 / t126;
    const double t128 = t7 * t127;
    const double t130 = 0.1e1 / t8 / t3;
    const double t131 = d * t130;
    const double t133 = t128 * t131 / 0.3e1;
    const double t135 = t134 * t130;
    const double t136 = t15 * t12;
    const double t137 = t136 * t114;
    const double t139 = t135 * t137 / 0.3e1;
    const double t140 = t16 * t127;
    const double t141 = t114 * d;
    const double t144 = t140 * t141 * t130 / 0.3e1;
    const double t146 = 0.1e1 / t19 / t120;
    const double t147 = t18 * t146;
    const double t149 = 0.8e1 / 0.3e1 * t147 * t30;
    const double t152 = t151 * t127;
    const double t154 = 0.1e1 / t19 / t3;
    const double t157 = t24 * t130 - t152 * t154;
    const double t158 = 0.7e1 / 0.3e1 * t157;
    const double t159 = t7 * t158;
    const double t161 = t124 * t27 / 0.72e2 + t159 / 0.72e2;
    const double t166 = t48 * t40;
    const double t167 = t38 - t119;
    const double t168 = t166 * t167;
    const double t170 = piecewise_functor_3( t41, 0.0, 0.8e1 / 0.3e1 * t168 );
    const double t171 = t55 * t51;
    const double t172 = -t167;
    const double t173 = t171 * t172;
    const double t175 = piecewise_functor_3( t52, 0.0, 0.8e1 / 0.3e1 * t173 );
    const double t176 = t170 + t175;
    const double t180 = t62 * t124;
    const double t183 = t157 / 0.54e2;
    const double t184 = t183 * t80;
    const double t186 = t63 * t184 / 0.32e2;
    const double t189 = 0.1e1 / t68 / t66 / rho_a;
    const double t190 = sigma_aa * t189;
    const double t191 = t190 * t50;
    const double t193 = t71 * t170;
    const double t194 = t78 * t175;
    const double t195 = -0.8e1 / 0.3e1 * t191 + t193 + t194;
    const double t196 = t65 * t195;
    const double t202 = -t157 / 0.3e1;
    const double t203 = t202 * t95;
    const double t205 = t63 * t203 / 0.576e3;
    const double t210 = piecewise_functor_3( t41, 0.0, 0.11e2 / 0.3e1 * t49 * t167 );
    const double t214 = piecewise_functor_3( t52, 0.0, 0.11e2 / 0.3e1 * t56 * t172 );
    const double t216 = -0.8e1 / 0.3e1 * t190 * t89 + t71 * t210 + t78 * t214;
    const double t217 = t84 * t216;
    const double t225 = piecewise_functor_3( t41, 0.0, 0.2e1 * t40 * t167 );
    const double t226 = t225 * sigma_bb;
    const double t229 = t77 * t175;
    const double t234 = piecewise_functor_3( t52, 0.0, 0.2e1 * t51 * t172 );
    const double t235 = t234 * sigma_aa;
    const double t238 = t189 * t50;
    const double t241 = t70 * t170;
    const double t247 = t149 - t22 * t161 - 0.3e1 / 0.2e2 * t37 * t124 * t58 - 0.3e1 / 0.2e2 * t37 * t7 * t176 + t180 * t81 / 0.32e2 + t186 + t63 * t196 / 0.32e2 + t180 * t96 / 0.576e3 + t205 + t63 * t217 / 0.576e3 - t62 * ( -0.16e2 / 0.9e1 * t191 + 0.2e1 / 0.3e1 * t193 + 0.2e1 / 0.3e1 * t194 - t226 * t103 / 0.4e1 - t102 * t229 / 0.4e1 - t235 * t108 / 0.4e1 + 0.2e1 / 0.3e1 * t107 * t238 - t107 * t241 / 0.4e1 ) / 0.8e1;
    const double t250 = t16 * t12 * t247 - t124 * t12 - t133 + t139 + t144;
    const double t253 = 0.2e1 * t119 + 0.2e1 * t122;
    const double t257 = t253 * t27 / 0.72e2 + t159 / 0.72e2;
    const double t262 = -t38 - t119;
    const double t263 = t166 * t262;
    const double t265 = piecewise_functor_3( t41, 0.0, 0.8e1 / 0.3e1 * t263 );
    const double t266 = -t262;
    const double t267 = t171 * t266;
    const double t269 = piecewise_functor_3( t52, 0.0, 0.8e1 / 0.3e1 * t267 );
    const double t270 = t265 + t269;
    const double t274 = t62 * t253;
    const double t277 = t71 * t265;
    const double t280 = 0.1e1 / t75 / t73 / rho_b;
    const double t281 = sigma_bb * t280;
    const double t282 = t281 * t57;
    const double t284 = t78 * t269;
    const double t285 = t277 - 0.8e1 / 0.3e1 * t282 + t284;
    const double t286 = t65 * t285;
    const double t293 = piecewise_functor_3( t41, 0.0, 0.11e2 / 0.3e1 * t49 * t262 );
    const double t299 = piecewise_functor_3( t52, 0.0, 0.11e2 / 0.3e1 * t56 * t266 );
    const double t301 = t71 * t293 - 0.8e1 / 0.3e1 * t281 * t93 + t78 * t299;
    const double t302 = t84 * t301;
    const double t310 = piecewise_functor_3( t41, 0.0, 0.2e1 * t40 * t262 );
    const double t311 = t310 * sigma_bb;
    const double t314 = t280 * t57;
    const double t317 = t77 * t269;
    const double t322 = piecewise_functor_3( t52, 0.0, 0.2e1 * t51 * t266 );
    const double t323 = t322 * sigma_aa;
    const double t326 = t70 * t265;
    const double t332 = t149 - t22 * t257 - 0.3e1 / 0.2e2 * t37 * t253 * t58 - 0.3e1 / 0.2e2 * t37 * t7 * t270 + t274 * t81 / 0.32e2 + t186 + t63 * t286 / 0.32e2 + t274 * t96 / 0.576e3 + t205 + t63 * t302 / 0.576e3 - t62 * ( 0.2e1 / 0.3e1 * t277 - 0.16e2 / 0.9e1 * t282 + 0.2e1 / 0.3e1 * t284 - t311 * t103 / 0.4e1 + 0.2e1 / 0.3e1 * t102 * t314 - t102 * t317 / 0.4e1 - t323 * t108 / 0.4e1 - t107 * t326 / 0.4e1 ) / 0.8e1;
    const double t335 = t16 * t12 * t332 - t253 * t12 - t133 + t139 + t144;
    const double t337 = t118 * b;
    const double t338 = t21 * t30;
    const double t339 = t65 * t70;
    const double t340 = t339 * t50;
    const double t343 = t84 * t70;
    const double t344 = t343 * t89;
    const double t348 = t106 * t70;
    const double t354 = -t338 + t63 * t340 / 0.32e2 + t63 * t344 / 0.576e3 - t62 * ( 0.2e1 / 0.3e1 * t108 - t348 * t50 / 0.4e1 ) / 0.8e1;
    const double t355 = t136 * t354;
    const double t356 = t154 * a;
    const double t357 = t356 * b;
    const double t358 = t136 * t30;
    const double t361 = t65 * t77;
    const double t362 = t361 * t57;
    const double t365 = t84 * t77;
    const double t366 = t365 * t93;
    const double t370 = t101 * t77;
    const double t376 = -t338 + t63 * t362 / 0.32e2 + t63 * t366 / 0.576e3 - t62 * ( 0.2e1 / 0.3e1 * t103 - t370 * t57 / 0.4e1 ) / 0.8e1;
    const double t377 = t136 * t376;
    const double t378 = a * t250;
    const double t380 = 0.2e1 * t5;
    const double t381 = t1 * t121;
    const double t382 = 0.8e1 * t381;
    const double t383 = t4 * t4;
    const double t384 = 0.1e1 / t383;
    const double t386 = 0.6e1 * t2 * t384;
    const double t387 = -t380 + t382 - t386;
    const double t389 = t124 * t127;
    const double t390 = t389 * t131;
    const double t393 = 0.1e1 / t126 / t11;
    const double t394 = t7 * t393;
    const double t395 = t151 * t21;
    const double t397 = 0.2e1 / 0.9e1 * t394 * t395;
    const double t399 = 0.1e1 / t8 / t4;
    const double t400 = d * t399;
    const double t402 = 0.4e1 / 0.9e1 * t128 * t400;
    const double t403 = t134 * t399;
    const double t405 = 0.4e1 / 0.9e1 * t403 * t137;
    const double t408 = t407 * t21;
    const double t410 = t408 * t137 / 0.9e1;
    const double t411 = t134 * t21;
    const double t412 = t15 * t127;
    const double t413 = t412 * t141;
    const double t415 = 0.2e1 / 0.9e1 * t411 * t413;
    const double t416 = t136 * t247;
    const double t417 = t135 * t416;
    const double t419 = t16 * t393;
    const double t420 = t114 * t151;
    const double t423 = 0.2e1 / 0.9e1 * t419 * t420 * t21;
    const double t424 = t247 * d;
    const double t426 = t140 * t424 * t130;
    const double t430 = 0.4e1 / 0.9e1 * t140 * t141 * t399;
    const double t432 = 0.1e1 / t19 / t383;
    const double t433 = t18 * t432;
    const double t435 = 0.88e2 / 0.9e1 * t433 * t30;
    const double t442 = t167 * t167;
    const double t443 = t48 * t442;
    const double t446 = -0.2e1 * t5 + 0.2e1 * t381;
    const double t450 = piecewise_functor_3( t41, 0.0, 0.4e2 / 0.9e1 * t443 + 0.8e1 / 0.3e1 * t166 * t446 );
    const double t451 = t172 * t172;
    const double t452 = t55 * t451;
    const double t454 = -t446;
    const double t458 = piecewise_functor_3( t52, 0.0, 0.4e2 / 0.9e1 * t452 + 0.8e1 / 0.3e1 * t171 * t454 );
    const double t459 = t450 + t458;
    const double t463 = t62 * t387;
    const double t466 = t180 * t184;
    const double t471 = t470 * t393;
    const double t472 = t471 * t121;
    const double t474 = t152 * t21;
    const double t476 = t24 * t399;
    const double t478 = -t472 / 0.81e2 + t474 / 0.27e2 - 0.2e1 / 0.81e2 * t476;
    const double t479 = t478 * t80;
    const double t481 = t63 * t479 / 0.32e2;
    const double t482 = t183 * t195;
    const double t483 = t63 * t482;
    const double t485 = t66 * t66;
    const double t487 = 0.1e1 / t68 / t485;
    const double t488 = sigma_aa * t487;
    const double t489 = t488 * t50;
    const double t491 = t190 * t170;
    const double t493 = t71 * t450;
    const double t494 = t78 * t458;
    const double t495 = 0.88e2 / 0.9e1 * t489 - 0.16e2 / 0.3e1 * t491 + t493 + t494;
    const double t496 = t65 * t495;
    const double t501 = t180 * t203;
    const double t508 = 0.2e1 / 0.9e1 * t472 - 0.2e1 / 0.3e1 * t474 + 0.4e1 / 0.9e1 * t476;
    const double t509 = t508 * t95;
    const double t511 = t63 * t509 / 0.576e3;
    const double t512 = t202 * t216;
    const double t513 = t63 * t512;
    const double t524 = piecewise_functor_3( t41, 0.0, 0.88e2 / 0.9e1 * t166 * t442 + 0.11e2 / 0.3e1 * t49 * t446 );
    const double t531 = piecewise_functor_3( t52, 0.0, 0.88e2 / 0.9e1 * t171 * t451 + 0.11e2 / 0.3e1 * t56 * t454 );
    const double t533 = 0.88e2 / 0.9e1 * t488 * t89 - 0.16e2 / 0.3e1 * t190 * t210 + t71 * t524 + t78 * t531;
    const double t534 = t84 * t533;
    const double t537 = t147 * t161;
    const double t541 = t124 * t158;
    const double t546 = -0.14e2 / 0.9e1 * t472 + 0.14e2 / 0.3e1 * t474 - 0.28e2 / 0.9e1 * t476;
    const double t547 = t7 * t546;
    const double t548 = t547 / 0.72e2;
    const double t549 = t387 * t27 / 0.72e2 + t541 / 0.36e2 + t548;
    const double t558 = piecewise_functor_3( t41, 0.0, 0.2e1 * t40 * t446 + 0.2e1 * t442 );
    const double t559 = t558 * sigma_bb;
    const double t564 = t77 * t458;
    const double t570 = piecewise_functor_3( t52, 0.0, 0.2e1 * t51 * t454 + 0.2e1 * t451 );
    const double t571 = t570 * sigma_aa;
    const double t578 = t487 * t50;
    const double t581 = t189 * t170;
    const double t584 = t70 * t450;
    const double t587 = 0.176e3 / 0.27e2 * t489 - 0.32e2 / 0.9e1 * t491 + 0.2e1 / 0.3e1 * t493 + 0.2e1 / 0.3e1 * t494 - t559 * t103 / 0.4e1 - t226 * t229 / 0.2e1 - t102 * t564 / 0.4e1 - t571 * t108 / 0.4e1 + 0.4e1 / 0.3e1 * t235 * t238 - t235 * t241 / 0.2e1 - 0.22e2 / 0.9e1 * t107 * t578 + 0.4e1 / 0.3e1 * t107 * t581 - t107 * t584 / 0.4e1;
    const double t590 = -t435 - 0.3e1 / 0.2e2 * t37 * t387 * t58 - 0.3e1 / 0.1e2 * t37 * t124 * t176 - 0.3e1 / 0.2e2 * t37 * t7 * t459 + t463 * t81 / 0.32e2 + t466 / 0.16e2 + t180 * t196 / 0.16e2 + t481 + t483 / 0.16e2 + t63 * t496 / 0.32e2 + t463 * t96 / 0.576e3 + t501 / 0.288e3 + t180 * t217 / 0.288e3 + t511 + t513 / 0.288e3 + t63 * t534 / 0.576e3 + 0.16e2 / 0.3e1 * t537 - t22 * t549 - t62 * t587 / 0.8e1;
    const double t593 = -t387 * t12 - 0.2e1 / 0.3e1 * t390 - t397 + t402 - t405 + t410 + t415 + 0.2e1 / 0.3e1 * t417 + t423 + 0.2e1 / 0.3e1 * t426 - t430 + t16 * t12 * t590;
    const double t595 = a * t335;
    const double t596 = t380 - t386;
    const double t598 = t253 * t127;
    const double t599 = t598 * t131;
    const double t604 = t136 * t332;
    const double t605 = t135 * t604;
    const double t607 = t332 * d;
    const double t609 = t140 * t607 * t130;
    const double t611 = t190 * t265;
    const double t613 = t48 * t262;
    const double t616 = t166 * t1;
    const double t620 = piecewise_functor_3( t41, 0.0, 0.4e2 / 0.9e1 * t613 * t167 + 0.16e2 / 0.3e1 * t616 * t121 );
    const double t621 = t71 * t620;
    const double t623 = t281 * t175;
    const double t625 = t55 * t266;
    const double t628 = t171 * t1;
    const double t632 = piecewise_functor_3( t52, 0.0, 0.4e2 / 0.9e1 * t625 * t172 - 0.16e2 / 0.3e1 * t628 * t121 );
    const double t633 = t78 * t632;
    const double t637 = t40 * t1;
    const double t641 = piecewise_functor_3( t41, 0.0, 0.4e1 * t637 * t121 + 0.2e1 * t167 * t262 );
    const double t642 = t641 * sigma_bb;
    const double t649 = t280 * t175;
    const double t654 = t77 * t632;
    const double t659 = t51 * t1;
    const double t663 = piecewise_functor_3( t52, 0.0, -0.4e1 * t659 * t121 + 0.2e1 * t172 * t266 );
    const double t664 = t663 * sigma_aa;
    const double t673 = t189 * t265;
    const double t676 = t70 * t620;
    const double t679 = -0.16e2 / 0.9e1 * t611 + 0.2e1 / 0.3e1 * t621 - 0.16e2 / 0.9e1 * t623 + 0.2e1 / 0.3e1 * t633 - t642 * t103 / 0.4e1 - t311 * t229 / 0.4e1 + 0.2e1 / 0.3e1 * t226 * t314 + 0.2e1 / 0.3e1 * t102 * t649 - t226 * t317 / 0.4e1 - t102 * t654 / 0.4e1 - t664 * t108 / 0.4e1 + 0.2e1 / 0.3e1 * t323 * t238 - t323 * t241 / 0.4e1 - t235 * t326 / 0.4e1 + 0.2e1 / 0.3e1 * t107 * t673 - t107 * t676 / 0.4e1;
    const double t683 = t253 * t158;
    const double t685 = t596 * t27 / 0.72e2 + t541 / 0.72e2 + t547 / 0.72e2 + t683 / 0.72e2;
    const double t687 = t147 * t257;
    const double t690 = t620 + t632;
    const double t694 = t62 * t596;
    const double t697 = t274 * t184;
    const double t703 = t183 * t285;
    const double t704 = t63 * t703;
    const double t708 = -0.8e1 / 0.3e1 * t611 + t621 - 0.8e1 / 0.3e1 * t623 + t633;
    const double t709 = t65 * t708;
    const double t714 = -t62 * t679 / 0.8e1 - t22 * t685 + 0.8e1 / 0.3e1 * t687 + 0.8e1 / 0.3e1 * t537 - t435 - 0.3e1 / 0.2e2 * t37 * t7 * t690 + t694 * t81 / 0.32e2 + t697 / 0.32e2 + t274 * t196 / 0.32e2 + t180 * t286 / 0.32e2 + t704 / 0.32e2 + t63 * t709 / 0.32e2 + t694 * t96 / 0.576e3;
    const double t715 = t274 * t203;
    const double t721 = t202 * t301;
    const double t722 = t63 * t721;
    const double t728 = t49 * t1;
    const double t732 = piecewise_functor_3( t41, 0.0, 0.88e2 / 0.9e1 * t263 * t167 + 0.22e2 / 0.3e1 * t728 * t121 );
    const double t738 = t56 * t1;
    const double t742 = piecewise_functor_3( t52, 0.0, 0.88e2 / 0.9e1 * t267 * t172 - 0.22e2 / 0.3e1 * t738 * t121 );
    const double t744 = -0.8e1 / 0.3e1 * t190 * t293 + t71 * t732 - 0.8e1 / 0.3e1 * t281 * t214 + t78 * t742;
    const double t745 = t84 * t744;
    const double t761 = t715 / 0.576e3 + t274 * t217 / 0.576e3 + t180 * t302 / 0.576e3 + t722 / 0.576e3 + t63 * t745 / 0.576e3 - 0.3e1 / 0.2e2 * t37 * t596 * t58 - 0.3e1 / 0.2e2 * t37 * t253 * t176 - 0.3e1 / 0.2e2 * t37 * t124 * t270 + t511 + t513 / 0.576e3 + t466 / 0.32e2 + t481 + t483 / 0.32e2 + t501 / 0.576e3;
    const double t762 = t714 + t761;
    const double t765 = -t596 * t12 - t599 / 0.3e1 - t390 / 0.3e1 - t397 + t402 - t405 + t410 + t415 + t417 / 0.3e1 + t423 + t426 / 0.3e1 - t430 + t605 / 0.3e1 + t609 / 0.3e1 + t16 * t12 * t762;
    const double t768 = -t380 - t382 - t386;
    const double t784 = t262 * t262;
    const double t785 = t48 * t784;
    const double t788 = 0.2e1 * t5 + 0.2e1 * t381;
    const double t789 = t166 * t788;
    const double t792 = piecewise_functor_3( t41, 0.0, 0.4e2 / 0.9e1 * t785 + 0.8e1 / 0.3e1 * t789 );
    const double t793 = t266 * t266;
    const double t794 = t55 * t793;
    const double t796 = -t788;
    const double t797 = t171 * t796;
    const double t800 = piecewise_functor_3( t52, 0.0, 0.4e2 / 0.9e1 * t794 + 0.8e1 / 0.3e1 * t797 );
    const double t801 = t792 + t800;
    const double t805 = t62 * t768;
    const double t810 = t71 * t792;
    const double t811 = t73 * t73;
    const double t813 = 0.1e1 / t75 / t811;
    const double t814 = sigma_bb * t813;
    const double t815 = t814 * t57;
    const double t817 = t281 * t269;
    const double t819 = t78 * t800;
    const double t820 = t810 + 0.88e2 / 0.9e1 * t815 - 0.16e2 / 0.3e1 * t817 + t819;
    const double t821 = t65 * t820;
    const double t833 = piecewise_functor_3( t41, 0.0, 0.88e2 / 0.9e1 * t166 * t784 + 0.11e2 / 0.3e1 * t49 * t788 );
    const double t844 = piecewise_functor_3( t52, 0.0, 0.88e2 / 0.9e1 * t171 * t793 + 0.11e2 / 0.3e1 * t56 * t796 );
    const double t846 = t71 * t833 + 0.88e2 / 0.9e1 * t814 * t93 - 0.16e2 / 0.3e1 * t281 * t299 + t78 * t844;
    const double t847 = t84 * t846;
    const double t853 = t768 * t27 / 0.72e2 + t683 / 0.36e2 + t548;
    const double t862 = piecewise_functor_3( t41, 0.0, 0.2e1 * t40 * t788 + 0.2e1 * t784 );
    const double t863 = t862 * sigma_bb;
    const double t870 = t813 * t57;
    const double t873 = t280 * t269;
    const double t876 = t77 * t800;
    const double t882 = piecewise_functor_3( t52, 0.0, 0.2e1 * t51 * t796 + 0.2e1 * t793 );
    const double t883 = t882 * sigma_aa;
    const double t888 = t70 * t792;
    const double t891 = 0.2e1 / 0.3e1 * t810 + 0.176e3 / 0.27e2 * t815 - 0.32e2 / 0.9e1 * t817 + 0.2e1 / 0.3e1 * t819 - t863 * t103 / 0.4e1 + 0.4e1 / 0.3e1 * t311 * t314 - t311 * t317 / 0.2e1 - 0.22e2 / 0.9e1 * t102 * t870 + 0.4e1 / 0.3e1 * t102 * t873 - t102 * t876 / 0.4e1 - t883 * t108 / 0.4e1 - t323 * t326 / 0.2e1 - t107 * t888 / 0.4e1;
    const double t894 = -t435 + t481 + t511 + 0.16e2 / 0.3e1 * t687 + t697 / 0.16e2 + t704 / 0.16e2 + t715 / 0.288e3 + t722 / 0.288e3 - 0.3e1 / 0.2e2 * t37 * t768 * t58 - 0.3e1 / 0.1e2 * t37 * t253 * t270 - 0.3e1 / 0.2e2 * t37 * t7 * t801 + t805 * t81 / 0.32e2 + t274 * t286 / 0.16e2 + t63 * t821 / 0.32e2 + t805 * t96 / 0.576e3 + t274 * t302 / 0.288e3 + t63 * t847 / 0.576e3 - t22 * t853 - t62 * t891 / 0.8e1;
    const double t897 = -t768 * t12 - 0.2e1 / 0.3e1 * t599 - t397 + t402 - t405 + t410 + t415 + 0.2e1 / 0.3e1 * t605 + t423 + 0.2e1 / 0.3e1 * t609 - t430 + t16 * t12 * t894;
    const double t900 = t899 * t355;
    const double t902 = t9 * a * b;
    const double t903 = c * t15;
    const double t904 = t12 * t354;
    const double t907 = t902 * t903 * t904 / 0.3e1;
    const double t909 = t412 * t354 * d;
    const double t911 = t902 * t909 / 0.3e1;
    const double t913 = 0.8e1 / 0.3e1 * t146 * t30;
    const double t914 = t21 * t161;
    const double t917 = t183 * t70;
    const double t918 = t917 * t50;
    const double t920 = t63 * t918 / 0.32e2;
    const double t921 = t65 * t189;
    const double t922 = t921 * t50;
    const double t925 = t339 * t170;
    const double t930 = t202 * t70;
    const double t931 = t930 * t89;
    const double t933 = t63 * t931 / 0.576e3;
    const double t934 = t84 * t189;
    const double t935 = t934 * t89;
    const double t938 = t343 * t210;
    const double t943 = t234 * t70;
    const double t946 = t106 * t189;
    const double t954 = t913 - t914 + t180 * t340 / 0.32e2 + t920 - t63 * t922 / 0.12e2 + t63 * t925 / 0.32e2 + t180 * t344 / 0.576e3 + t933 - t63 * t935 / 0.216e3 + t63 * t938 / 0.576e3 - t62 * ( -0.16e2 / 0.9e1 * t238 + 0.2e1 / 0.3e1 * t241 - t943 * t50 / 0.4e1 + 0.2e1 / 0.3e1 * t946 * t50 - t348 * t170 / 0.4e1 ) / 0.8e1;
    const double t955 = t136 * t954;
    const double t958 = t21 * a * b;
    const double t960 = 0.1e2 / 0.3e1 * t958 * t358;
    const double t961 = t121 * a;
    const double t962 = t961 * b;
    const double t963 = t12 * t30;
    const double t964 = t903 * t963;
    const double t966 = 0.2e1 / 0.3e1 * t962 * t964;
    const double t968 = t412 * t30 * d;
    const double t970 = 0.2e1 / 0.3e1 * t962 * t968;
    const double t971 = t136 * t161;
    const double t974 = t899 * t377;
    const double t975 = t12 * t376;
    const double t978 = t902 * t903 * t975 / 0.3e1;
    const double t980 = t412 * t376 * d;
    const double t982 = t902 * t980 / 0.3e1;
    const double t985 = t183 * t77;
    const double t986 = t985 * t57;
    const double t988 = t63 * t986 / 0.32e2;
    const double t989 = t361 * t175;
    const double t994 = t202 * t77;
    const double t995 = t994 * t93;
    const double t997 = t63 * t995 / 0.576e3;
    const double t998 = t365 * t214;
    const double t1002 = t225 * t77;
    const double t1010 = t913 - t914 + t180 * t362 / 0.32e2 + t988 + t63 * t989 / 0.32e2 + t180 * t366 / 0.576e3 + t997 + t63 * t998 / 0.576e3 - t62 * ( 0.2e1 / 0.3e1 * t229 - t1002 * t57 / 0.4e1 - t370 * t175 / 0.4e1 ) / 0.8e1;
    const double t1011 = t136 * t1010;
    const double t1013 = t21 * t257;
    const double t1016 = t339 * t265;
    const double t1021 = t343 * t293;
    const double t1025 = t322 * t70;
    const double t1033 = t913 - t1013 + t274 * t340 / 0.32e2 + t920 + t63 * t1016 / 0.32e2 + t274 * t344 / 0.576e3 + t933 + t63 * t1021 / 0.576e3 - t62 * ( 0.2e1 / 0.3e1 * t326 - t1025 * t50 / 0.4e1 - t348 * t265 / 0.4e1 ) / 0.8e1;
    const double t1034 = t136 * t1033;
    const double t1036 = t136 * t257;
    const double t1041 = t65 * t280;
    const double t1042 = t1041 * t57;
    const double t1045 = t361 * t269;
    const double t1050 = t84 * t280;
    const double t1051 = t1050 * t93;
    const double t1054 = t365 * t299;
    const double t1059 = t310 * t77;
    const double t1062 = t101 * t280;
    const double t1070 = t913 - t1013 + t274 * t362 / 0.32e2 + t988 - t63 * t1042 / 0.12e2 + t63 * t1045 / 0.32e2 + t274 * t366 / 0.576e3 + t997 - t63 * t1051 / 0.216e3 + t63 * t1054 / 0.576e3 - t62 * ( -0.16e2 / 0.9e1 * t314 + 0.2e1 / 0.3e1 * t317 - t1059 * t57 / 0.4e1 + 0.2e1 / 0.3e1 * t1062 * t57 - t370 * t269 / 0.4e1 ) / 0.8e1;
    const double t1071 = t136 * t1070;


    v2rho2_aa = t118 * t593 + 0.2e1 * t378;
    v2rho2_ab = t118 * t765 + t378 + t595;
    v2rho2_bb = t118 * t897 + 0.2e1 * t595;
    v2rhosigma_a_aa = t337 * t955 + t900 + t907 + t911;
    v2rhosigma_a_ab = -0.2e1 * t357 * t971 + t960 - t966 - t970;
    v2rhosigma_a_bb = t337 * t1011 + t974 + t978 + t982;
    v2rhosigma_b_aa = t337 * t1034 + t900 + t907 + t911;
    v2rhosigma_b_ab = -0.2e1 * t357 * t1036 + t960 - t966 - t970;
    v2rhosigma_b_bb = t337 * t1071 + t974 + t978 + t982;
    v2sigma2_aa_aa = 0.e0;
    v2sigma2_aa_ab = 0.e0;
    v2sigma2_aa_bb = 0.e0;
    v2sigma2_ab_ab = 0.e0;
    v2sigma2_ab_bb = 0.e0;
    v2sigma2_bb_bb = 0.e0;

  }

  BUILTIN_KERNEL_EVAL_RETURN
    eval_vxc_fxc_polar_impl( double rho_a, double rho_b, double sigma_aa, double sigma_ab, double sigma_bb, double& vrho_a, double& vrho_b, double& vsigma_aa, double& vsigma_ab, double& vsigma_bb, double& v2rho2_aa, double& v2rho2_ab, double& v2rho2_bb, double& v2rhosigma_a_aa, double& v2rhosigma_a_ab, double& v2rhosigma_a_bb, double& v2rhosigma_b_aa, double& v2rhosigma_b_ab, double& v2rhosigma_b_bb, double& v2sigma2_aa_aa, double& v2sigma2_aa_ab, double& v2sigma2_aa_bb, double& v2sigma2_ab_ab, double& v2sigma2_ab_bb, double& v2sigma2_bb_bb ) {

    constexpr double t32 = constants::m_cbrt_3;
    constexpr double t35 = constants::m_cbrt_pi_sq;
    constexpr double t62 = constants::m_cbrt_2;
    constexpr double t33 = t32 * t32;
    constexpr double t36 = t35 * t35;
    constexpr double t37 = t33 * t36;
    constexpr double t134 = b * c;
    constexpr double t151 = d * d;
    constexpr double t406 = c * c;
    constexpr double t407 = b * t406;
    constexpr double t470 = t151 * d;
    constexpr double t899 = a * b;


    const double t1 = rho_a - rho_b;
    const double t2 = t1 * t1;
    const double t3 = rho_a + rho_b;
    const double t4 = t3 * t3;
    const double t5 = 0.1e1 / t4;
    const double t7 = -t2 * t5 + 0.1e1;
    const double t8 = safe_math::cbrt( t3 );
    const double t9 = 0.1e1 / t8;
    const double t11 = d * t9 + 0.1e1;
    const double t12 = 0.1e1 / t11;
    const double t15 = safe_math::exp( -c * t9 );
    const double t16 = b * t15;
    const double t18 = sigma_aa + 0.2e1 * sigma_ab + sigma_bb;
    const double t19 = t8 * t8;
    const double t21 = 0.1e1 / t19 / t4;
    const double t22 = t18 * t21;
    const double t24 = d * t12 + c;
    const double t25 = t24 * t9;
    const double t27 = 0.47e2 - 0.7e1 * t25;
    const double t30 = t7 * t27 / 0.72e2 - 0.2e1 / 0.3e1;
    const double t38 = 0.1e1 / t3;
    const double t39 = t1 * t38;
    const double t40 = 0.1e1 + t39;
    const double t41 = t40 <= zeta_tol;
    const double t42 = zeta_tol * zeta_tol;
    const double t43 = safe_math::cbrt( zeta_tol );
    const double t44 = t43 * t43;
    const double t45 = t44 * t42;
    const double t46 = t40 * t40;
    const double t47 = safe_math::cbrt( t40 );
    const double t48 = t47 * t47;
    const double t49 = t48 * t46;
    const double t50 = piecewise_functor_3( t41, t45, t49 );
    const double t51 = 0.1e1 - t39;
    const double t52 = t51 <= zeta_tol;
    const double t53 = t51 * t51;
    const double t54 = safe_math::cbrt( t51 );
    const double t55 = t54 * t54;
    const double t56 = t55 * t53;
    const double t57 = piecewise_functor_3( t52, t45, t56 );
    const double t58 = t50 + t57;
    const double t63 = t62 * t7;
    const double t65 = 0.5e1 / 0.2e1 - t25 / 0.18e2;
    const double t66 = rho_a * rho_a;
    const double t67 = safe_math::cbrt( rho_a );
    const double t68 = t67 * t67;
    const double t70 = 0.1e1 / t68 / t66;
    const double t71 = sigma_aa * t70;
    const double t72 = t71 * t50;
    const double t73 = rho_b * rho_b;
    const double t74 = safe_math::cbrt( rho_b );
    const double t75 = t74 * t74;
    const double t77 = 0.1e1 / t75 / t73;
    const double t78 = sigma_bb * t77;
    const double t79 = t78 * t57;
    const double t80 = t72 + t79;
    const double t81 = t65 * t80;
    const double t84 = t25 - 0.11e2;
    const double t86 = t44 * t42 * zeta_tol;
    const double t89 = piecewise_functor_3( t41, t86, t48 * t46 * t40 );
    const double t93 = piecewise_functor_3( t52, t86, t55 * t53 * t51 );
    const double t95 = t71 * t89 + t78 * t93;
    const double t96 = t84 * t95;
    const double t101 = piecewise_functor_3( t41, t42, t46 );
    const double t102 = t101 * sigma_bb;
    const double t103 = t77 * t57;
    const double t106 = piecewise_functor_3( t52, t42, t53 );
    const double t107 = t106 * sigma_aa;
    const double t108 = t70 * t50;
    const double t114 = -t22 * t30 - 0.3e1 / 0.2e2 * t37 * t7 * t58 + t63 * t81 / 0.32e2 + t63 * t96 / 0.576e3 - t62 * ( 0.2e1 / 0.3e1 * t72 + 0.2e1 / 0.3e1 * t79 - t102 * t103 / 0.4e1 - t107 * t108 / 0.4e1 ) / 0.8e1;
    const double tzk0 = a * ( t16 * t12 * t114 - t7 * t12 );
    const double t118 = t3 * a;
    const double t119 = t1 * t5;
    const double t120 = t4 * t3;
    const double t121 = 0.1e1 / t120;
    const double t122 = t2 * t121;
    const double t124 = -0.2e1 * t119 + 0.2e1 * t122;
    const double t126 = t11 * t11;
    const double t127 = 0.1e1 / t126;
    const double t128 = t7 * t127;
    const double t130 = 0.1e1 / t8 / t3;
    const double t131 = d * t130;
    const double t133 = t128 * t131 / 0.3e1;
    const double t135 = t134 * t130;
    const double t136 = t15 * t12;
    const double t137 = t136 * t114;
    const double t139 = t135 * t137 / 0.3e1;
    const double t140 = t16 * t127;
    const double t141 = t114 * d;
    const double t144 = t140 * t141 * t130 / 0.3e1;
    const double t146 = 0.1e1 / t19 / t120;
    const double t147 = t18 * t146;
    const double t149 = 0.8e1 / 0.3e1 * t147 * t30;
    const double t152 = t151 * t127;
    const double t154 = 0.1e1 / t19 / t3;
    const double t157 = t24 * t130 - t152 * t154;
    const double t158 = 0.7e1 / 0.3e1 * t157;
    const double t159 = t7 * t158;
    const double t161 = t124 * t27 / 0.72e2 + t159 / 0.72e2;
    const double t166 = t48 * t40;
    const double t167 = t38 - t119;
    const double t168 = t166 * t167;
    const double t170 = piecewise_functor_3( t41, 0.0, 0.8e1 / 0.3e1 * t168 );
    const double t171 = t55 * t51;
    const double t172 = -t167;
    const double t173 = t171 * t172;
    const double t175 = piecewise_functor_3( t52, 0.0, 0.8e1 / 0.3e1 * t173 );
    const double t176 = t170 + t175;
    const double t180 = t62 * t124;
    const double t183 = t157 / 0.54e2;
    const double t184 = t183 * t80;
    const double t186 = t63 * t184 / 0.32e2;
    const double t189 = 0.1e1 / t68 / t66 / rho_a;
    const double t190 = sigma_aa * t189;
    const double t191 = t190 * t50;
    const double t193 = t71 * t170;
    const double t194 = t78 * t175;
    const double t195 = -0.8e1 / 0.3e1 * t191 + t193 + t194;
    const double t196 = t65 * t195;
    const double t202 = -t157 / 0.3e1;
    const double t203 = t202 * t95;
    const double t205 = t63 * t203 / 0.576e3;
    const double t210 = piecewise_functor_3( t41, 0.0, 0.11e2 / 0.3e1 * t49 * t167 );
    const double t214 = piecewise_functor_3( t52, 0.0, 0.11e2 / 0.3e1 * t56 * t172 );
    const double t216 = -0.8e1 / 0.3e1 * t190 * t89 + t71 * t210 + t78 * t214;
    const double t217 = t84 * t216;
    const double t225 = piecewise_functor_3( t41, 0.0, 0.2e1 * t40 * t167 );
    const double t226 = t225 * sigma_bb;
    const double t229 = t77 * t175;
    const double t234 = piecewise_functor_3( t52, 0.0, 0.2e1 * t51 * t172 );
    const double t235 = t234 * sigma_aa;
    const double t238 = t189 * t50;
    const double t241 = t70 * t170;
    const double t247 = t149 - t22 * t161 - 0.3e1 / 0.2e2 * t37 * t124 * t58 - 0.3e1 / 0.2e2 * t37 * t7 * t176 + t180 * t81 / 0.32e2 + t186 + t63 * t196 / 0.32e2 + t180 * t96 / 0.576e3 + t205 + t63 * t217 / 0.576e3 - t62 * ( -0.16e2 / 0.9e1 * t191 + 0.2e1 / 0.3e1 * t193 + 0.2e1 / 0.3e1 * t194 - t226 * t103 / 0.4e1 - t102 * t229 / 0.4e1 - t235 * t108 / 0.4e1 + 0.2e1 / 0.3e1 * t107 * t238 - t107 * t241 / 0.4e1 ) / 0.8e1;
    const double t250 = t16 * t12 * t247 - t124 * t12 - t133 + t139 + t144;
    const double t253 = 0.2e1 * t119 + 0.2e1 * t122;
    const double t257 = t253 * t27 / 0.72e2 + t159 / 0.72e2;
    const double t262 = -t38 - t119;
    const double t263 = t166 * t262;
    const double t265 = piecewise_functor_3( t41, 0.0, 0.8e1 / 0.3e1 * t263 );
    const double t266 = -t262;
    const double t267 = t171 * t266;
    const double t269 = piecewise_functor_3( t52, 0.0, 0.8e1 / 0.3e1 * t267 );
    const double t270 = t265 + t269;
    const double t274 = t62 * t253;
    const double t277 = t71 * t265;
    const double t280 = 0.1e1 / t75 / t73 / rho_b;
    const double t281 = sigma_bb * t280;
    const double t282 = t281 * t57;
    const double t284 = t78 * t269;
    const double t285 = t277 - 0.8e1 / 0.3e1 * t282 + t284;
    const double t286 = t65 * t285;
    const double t293 = piecewise_functor_3( t41, 0.0, 0.11e2 / 0.3e1 * t49 * t262 );
    const double t299 = piecewise_functor_3( t52, 0.0, 0.11e2 / 0.3e1 * t56 * t266 );
    const double t301 = t71 * t293 - 0.8e1 / 0.3e1 * t281 * t93 + t78 * t299;
    const double t302 = t84 * t301;
    const double t310 = piecewise_functor_3( t41, 0.0, 0.2e1 * t40 * t262 );
    const double t311 = t310 * sigma_bb;
    const double t314 = t280 * t57;
    const double t317 = t77 * t269;
    const double t322 = piecewise_functor_3( t52, 0.0, 0.2e1 * t51 * t266 );
    const double t323 = t322 * sigma_aa;
    const double t326 = t70 * t265;
    const double t332 = t149 - t22 * t257 - 0.3e1 / 0.2e2 * t37 * t253 * t58 - 0.3e1 / 0.2e2 * t37 * t7 * t270 + t274 * t81 / 0.32e2 + t186 + t63 * t286 / 0.32e2 + t274 * t96 / 0.576e3 + t205 + t63 * t302 / 0.576e3 - t62 * ( 0.2e1 / 0.3e1 * t277 - 0.16e2 / 0.9e1 * t282 + 0.2e1 / 0.3e1 * t284 - t311 * t103 / 0.4e1 + 0.2e1 / 0.3e1 * t102 * t314 - t102 * t317 / 0.4e1 - t323 * t108 / 0.4e1 - t107 * t326 / 0.4e1 ) / 0.8e1;
    const double t335 = t16 * t12 * t332 - t253 * t12 - t133 + t139 + t144;
    const double t337 = t118 * b;
    const double t338 = t21 * t30;
    const double t339 = t65 * t70;
    const double t340 = t339 * t50;
    const double t343 = t84 * t70;
    const double t344 = t343 * t89;
    const double t348 = t106 * t70;
    const double t354 = -t338 + t63 * t340 / 0.32e2 + t63 * t344 / 0.576e3 - t62 * ( 0.2e1 / 0.3e1 * t108 - t348 * t50 / 0.4e1 ) / 0.8e1;
    const double t355 = t136 * t354;
    const double t356 = t154 * a;
    const double t357 = t356 * b;
    const double t358 = t136 * t30;
    const double t361 = t65 * t77;
    const double t362 = t361 * t57;
    const double t365 = t84 * t77;
    const double t366 = t365 * t93;
    const double t370 = t101 * t77;
    const double t376 = -t338 + t63 * t362 / 0.32e2 + t63 * t366 / 0.576e3 - t62 * ( 0.2e1 / 0.3e1 * t103 - t370 * t57 / 0.4e1 ) / 0.8e1;
    const double t377 = t136 * t376;
    const double t378 = a * t250;
    const double t380 = 0.2e1 * t5;
    const double t381 = t1 * t121;
    const double t382 = 0.8e1 * t381;
    const double t383 = t4 * t4;
    const double t384 = 0.1e1 / t383;
    const double t386 = 0.6e1 * t2 * t384;
    const double t387 = -t380 + t382 - t386;
    const double t389 = t124 * t127;
    const double t390 = t389 * t131;
    const double t393 = 0.1e1 / t126 / t11;
    const double t394 = t7 * t393;
    const double t395 = t151 * t21;
    const double t397 = 0.2e1 / 0.9e1 * t394 * t395;
    const double t399 = 0.1e1 / t8 / t4;
    const double t400 = d * t399;
    const double t402 = 0.4e1 / 0.9e1 * t128 * t400;
    const double t403 = t134 * t399;
    const double t405 = 0.4e1 / 0.9e1 * t403 * t137;
    const double t408 = t407 * t21;
    const double t410 = t408 * t137 / 0.9e1;
    const double t411 = t134 * t21;
    const double t412 = t15 * t127;
    const double t413 = t412 * t141;
    const double t415 = 0.2e1 / 0.9e1 * t411 * t413;
    const double t416 = t136 * t247;
    const double t417 = t135 * t416;
    const double t419 = t16 * t393;
    const double t420 = t114 * t151;
    const double t423 = 0.2e1 / 0.9e1 * t419 * t420 * t21;
    const double t424 = t247 * d;
    const double t426 = t140 * t424 * t130;
    const double t430 = 0.4e1 / 0.9e1 * t140 * t141 * t399;
    const double t432 = 0.1e1 / t19 / t383;
    const double t433 = t18 * t432;
    const double t435 = 0.88e2 / 0.9e1 * t433 * t30;
    const double t442 = t167 * t167;
    const double t443 = t48 * t442;
    const double t446 = -0.2e1 * t5 + 0.2e1 * t381;
    const double t450 = piecewise_functor_3( t41, 0.0, 0.4e2 / 0.9e1 * t443 + 0.8e1 / 0.3e1 * t166 * t446 );
    const double t451 = t172 * t172;
    const double t452 = t55 * t451;
    const double t454 = -t446;
    const double t458 = piecewise_functor_3( t52, 0.0, 0.4e2 / 0.9e1 * t452 + 0.8e1 / 0.3e1 * t171 * t454 );
    const double t459 = t450 + t458;
    const double t463 = t62 * t387;
    const double t466 = t180 * t184;
    const double t471 = t470 * t393;
    const double t472 = t471 * t121;
    const double t474 = t152 * t21;
    const double t476 = t24 * t399;
    const double t478 = -t472 / 0.81e2 + t474 / 0.27e2 - 0.2e1 / 0.81e2 * t476;
    const double t479 = t478 * t80;
    const double t481 = t63 * t479 / 0.32e2;
    const double t482 = t183 * t195;
    const double t483 = t63 * t482;
    const double t485 = t66 * t66;
    const double t487 = 0.1e1 / t68 / t485;
    const double t488 = sigma_aa * t487;
    const double t489 = t488 * t50;
    const double t491 = t190 * t170;
    const double t493 = t71 * t450;
    const double t494 = t78 * t458;
    const double t495 = 0.88e2 / 0.9e1 * t489 - 0.16e2 / 0.3e1 * t491 + t493 + t494;
    const double t496 = t65 * t495;
    const double t501 = t180 * t203;
    const double t508 = 0.2e1 / 0.9e1 * t472 - 0.2e1 / 0.3e1 * t474 + 0.4e1 / 0.9e1 * t476;
    const double t509 = t508 * t95;
    const double t511 = t63 * t509 / 0.576e3;
    const double t512 = t202 * t216;
    const double t513 = t63 * t512;
    const double t524 = piecewise_functor_3( t41, 0.0, 0.88e2 / 0.9e1 * t166 * t442 + 0.11e2 / 0.3e1 * t49 * t446 );
    const double t531 = piecewise_functor_3( t52, 0.0, 0.88e2 / 0.9e1 * t171 * t451 + 0.11e2 / 0.3e1 * t56 * t454 );
    const double t533 = 0.88e2 / 0.9e1 * t488 * t89 - 0.16e2 / 0.3e1 * t190 * t210 + t71 * t524 + t78 * t531;
    const double t534 = t84 * t533;
    const double t537 = t147 * t161;
    const double t541 = t124 * t158;
    const double t546 = -0.14e2 / 0.9e1 * t472 + 0.14e2 / 0.3e1 * t474 - 0.28e2 / 0.9e1 * t476;
    const double t547 = t7 * t546;
    const double t548 = t547 / 0.72e2;
    const double t549 = t387 * t27 / 0.72e2 + t541 / 0.36e2 + t548;
    const double t558 = piecewise_functor_3( t41, 0.0, 0.2e1 * t40 * t446 + 0.2e1 * t442 );
    const double t559 = t558 * sigma_bb;
    const double t564 = t77 * t458;
    const double t570 = piecewise_functor_3( t52, 0.0, 0.2e1 * t51 * t454 + 0.2e1 * t451 );
    const double t571 = t570 * sigma_aa;
    const double t578 = t487 * t50;
    const double t581 = t189 * t170;
    const double t584 = t70 * t450;
    const double t587 = 0.176e3 / 0.27e2 * t489 - 0.32e2 / 0.9e1 * t491 + 0.2e1 / 0.3e1 * t493 + 0.2e1 / 0.3e1 * t494 - t559 * t103 / 0.4e1 - t226 * t229 / 0.2e1 - t102 * t564 / 0.4e1 - t571 * t108 / 0.4e1 + 0.4e1 / 0.3e1 * t235 * t238 - t235 * t241 / 0.2e1 - 0.22e2 / 0.9e1 * t107 * t578 + 0.4e1 / 0.3e1 * t107 * t581 - t107 * t584 / 0.4e1;
    const double t590 = -t435 - 0.3e1 / 0.2e2 * t37 * t387 * t58 - 0.3e1 / 0.1e2 * t37 * t124 * t176 - 0.3e1 / 0.2e2 * t37 * t7 * t459 + t463 * t81 / 0.32e2 + t466 / 0.16e2 + t180 * t196 / 0.16e2 + t481 + t483 / 0.16e2 + t63 * t496 / 0.32e2 + t463 * t96 / 0.576e3 + t501 / 0.288e3 + t180 * t217 / 0.288e3 + t511 + t513 / 0.288e3 + t63 * t534 / 0.576e3 + 0.16e2 / 0.3e1 * t537 - t22 * t549 - t62 * t587 / 0.8e1;
    const double t593 = -t387 * t12 - 0.2e1 / 0.3e1 * t390 - t397 + t402 - t405 + t410 + t415 + 0.2e1 / 0.3e1 * t417 + t423 + 0.2e1 / 0.3e1 * t426 - t430 + t16 * t12 * t590;
    const double t595 = a * t335;
    const double t596 = t380 - t386;
    const double t598 = t253 * t127;
    const double t599 = t598 * t131;
    const double t604 = t136 * t332;
    const double t605 = t135 * t604;
    const double t607 = t332 * d;
    const double t609 = t140 * t607 * t130;
    const double t611 = t190 * t265;
    const double t613 = t48 * t262;
    const double t616 = t166 * t1;
    const double t620 = piecewise_functor_3( t41, 0.0, 0.4e2 / 0.9e1 * t613 * t167 + 0.16e2 / 0.3e1 * t616 * t121 );
    const double t621 = t71 * t620;
    const double t623 = t281 * t175;
    const double t625 = t55 * t266;
    const double t628 = t171 * t1;
    const double t632 = piecewise_functor_3( t52, 0.0, 0.4e2 / 0.9e1 * t625 * t172 - 0.16e2 / 0.3e1 * t628 * t121 );
    const double t633 = t78 * t632;
    const double t637 = t40 * t1;
    const double t641 = piecewise_functor_3( t41, 0.0, 0.4e1 * t637 * t121 + 0.2e1 * t167 * t262 );
    const double t642 = t641 * sigma_bb;
    const double t649 = t280 * t175;
    const double t654 = t77 * t632;
    const double t659 = t51 * t1;
    const double t663 = piecewise_functor_3( t52, 0.0, -0.4e1 * t659 * t121 + 0.2e1 * t172 * t266 );
    const double t664 = t663 * sigma_aa;
    const double t673 = t189 * t265;
    const double t676 = t70 * t620;
    const double t679 = -0.16e2 / 0.9e1 * t611 + 0.2e1 / 0.3e1 * t621 - 0.16e2 / 0.9e1 * t623 + 0.2e1 / 0.3e1 * t633 - t642 * t103 / 0.4e1 - t311 * t229 / 0.4e1 + 0.2e1 / 0.3e1 * t226 * t314 + 0.2e1 / 0.3e1 * t102 * t649 - t226 * t317 / 0.4e1 - t102 * t654 / 0.4e1 - t664 * t108 / 0.4e1 + 0.2e1 / 0.3e1 * t323 * t238 - t323 * t241 / 0.4e1 - t235 * t326 / 0.4e1 + 0.2e1 / 0.3e1 * t107 * t673 - t107 * t676 / 0.4e1;
    const double t683 = t253 * t158;
    const double t685 = t596 * t27 / 0.72e2 + t541 / 0.72e2 + t547 / 0.72e2 + t683 / 0.72e2;
    const double t687 = t147 * t257;
    const double t690 = t620 + t632;
    const double t694 = t62 * t596;
    const double t697 = t274 * t184;
    const double t703 = t183 * t285;
    const double t704 = t63 * t703;
    const double t708 = -0.8e1 / 0.3e1 * t611 + t621 - 0.8e1 / 0.3e1 * t623 + t633;
    const double t709 = t65 * t708;
    const double t714 = -t62 * t679 / 0.8e1 - t22 * t685 + 0.8e1 / 0.3e1 * t687 + 0.8e1 / 0.3e1 * t537 - t435 - 0.3e1 / 0.2e2 * t37 * t7 * t690 + t694 * t81 / 0.32e2 + t697 / 0.32e2 + t274 * t196 / 0.32e2 + t180 * t286 / 0.32e2 + t704 / 0.32e2 + t63 * t709 / 0.32e2 + t694 * t96 / 0.576e3;
    const double t715 = t274 * t203;
    const double t721 = t202 * t301;
    const double t722 = t63 * t721;
    const double t728 = t49 * t1;
    const double t732 = piecewise_functor_3( t41, 0.0, 0.88e2 / 0.9e1 * t263 * t167 + 0.22e2 / 0.3e1 * t728 * t121 );
    const double t738 = t56 * t1;
    const double t742 = piecewise_functor_3( t52, 0.0, 0.88e2 / 0.9e1 * t267 * t172 - 0.22e2 / 0.3e1 * t738 * t121 );
    const double t744 = -0.8e1 / 0.3e1 * t190 * t293 + t71 * t732 - 0.8e1 / 0.3e1 * t281 * t214 + t78 * t742;
    const double t745 = t84 * t744;
    const double t761 = t715 / 0.576e3 + t274 * t217 / 0.576e3 + t180 * t302 / 0.576e3 + t722 / 0.576e3 + t63 * t745 / 0.576e3 - 0.3e1 / 0.2e2 * t37 * t596 * t58 - 0.3e1 / 0.2e2 * t37 * t253 * t176 - 0.3e1 / 0.2e2 * t37 * t124 * t270 + t511 + t513 / 0.576e3 + t466 / 0.32e2 + t481 + t483 / 0.32e2 + t501 / 0.576e3;
    const double t762 = t714 + t761;
    const double t765 = -t596 * t12 - t599 / 0.3e1 - t390 / 0.3e1 - t397 + t402 - t405 + t410 + t415 + t417 / 0.3e1 + t423 + t426 / 0.3e1 - t430 + t605 / 0.3e1 + t609 / 0.3e1 + t16 * t12 * t762;
    const double t768 = -t380 - t382 - t386;
    const double t784 = t262 * t262;
    const double t785 = t48 * t784;
    const double t788 = 0.2e1 * t5 + 0.2e1 * t381;
    const double t789 = t166 * t788;
    const double t792 = piecewise_functor_3( t41, 0.0, 0.4e2 / 0.9e1 * t785 + 0.8e1 / 0.3e1 * t789 );
    const double t793 = t266 * t266;
    const double t794 = t55 * t793;
    const double t796 = -t788;
    const double t797 = t171 * t796;
    const double t800 = piecewise_functor_3( t52, 0.0, 0.4e2 / 0.9e1 * t794 + 0.8e1 / 0.3e1 * t797 );
    const double t801 = t792 + t800;
    const double t805 = t62 * t768;
    const double t810 = t71 * t792;
    const double t811 = t73 * t73;
    const double t813 = 0.1e1 / t75 / t811;
    const double t814 = sigma_bb * t813;
    const double t815 = t814 * t57;
    const double t817 = t281 * t269;
    const double t819 = t78 * t800;
    const double t820 = t810 + 0.88e2 / 0.9e1 * t815 - 0.16e2 / 0.3e1 * t817 + t819;
    const double t821 = t65 * t820;
    const double t833 = piecewise_functor_3( t41, 0.0, 0.88e2 / 0.9e1 * t166 * t784 + 0.11e2 / 0.3e1 * t49 * t788 );
    const double t844 = piecewise_functor_3( t52, 0.0, 0.88e2 / 0.9e1 * t171 * t793 + 0.11e2 / 0.3e1 * t56 * t796 );
    const double t846 = t71 * t833 + 0.88e2 / 0.9e1 * t814 * t93 - 0.16e2 / 0.3e1 * t281 * t299 + t78 * t844;
    const double t847 = t84 * t846;
    const double t853 = t768 * t27 / 0.72e2 + t683 / 0.36e2 + t548;
    const double t862 = piecewise_functor_3( t41, 0.0, 0.2e1 * t40 * t788 + 0.2e1 * t784 );
    const double t863 = t862 * sigma_bb;
    const double t870 = t813 * t57;
    const double t873 = t280 * t269;
    const double t876 = t77 * t800;
    const double t882 = piecewise_functor_3( t52, 0.0, 0.2e1 * t51 * t796 + 0.2e1 * t793 );
    const double t883 = t882 * sigma_aa;
    const double t888 = t70 * t792;
    const double t891 = 0.2e1 / 0.3e1 * t810 + 0.176e3 / 0.27e2 * t815 - 0.32e2 / 0.9e1 * t817 + 0.2e1 / 0.3e1 * t819 - t863 * t103 / 0.4e1 + 0.4e1 / 0.3e1 * t311 * t314 - t311 * t317 / 0.2e1 - 0.22e2 / 0.9e1 * t102 * t870 + 0.4e1 / 0.3e1 * t102 * t873 - t102 * t876 / 0.4e1 - t883 * t108 / 0.4e1 - t323 * t326 / 0.2e1 - t107 * t888 / 0.4e1;
    const double t894 = -t435 + t481 + t511 + 0.16e2 / 0.3e1 * t687 + t697 / 0.16e2 + t704 / 0.16e2 + t715 / 0.288e3 + t722 / 0.288e3 - 0.3e1 / 0.2e2 * t37 * t768 * t58 - 0.3e1 / 0.1e2 * t37 * t253 * t270 - 0.3e1 / 0.2e2 * t37 * t7 * t801 + t805 * t81 / 0.32e2 + t274 * t286 / 0.16e2 + t63 * t821 / 0.32e2 + t805 * t96 / 0.576e3 + t274 * t302 / 0.288e3 + t63 * t847 / 0.576e3 - t22 * t853 - t62 * t891 / 0.8e1;
    const double t897 = -t768 * t12 - 0.2e1 / 0.3e1 * t599 - t397 + t402 - t405 + t410 + t415 + 0.2e1 / 0.3e1 * t605 + t423 + 0.2e1 / 0.3e1 * t609 - t430 + t16 * t12 * t894;
    const double t900 = t899 * t355;
    const double t902 = t9 * a * b;
    const double t903 = c * t15;
    const double t904 = t12 * t354;
    const double t907 = t902 * t903 * t904 / 0.3e1;
    const double t909 = t412 * t354 * d;
    const double t911 = t902 * t909 / 0.3e1;
    const double t913 = 0.8e1 / 0.3e1 * t146 * t30;
    const double t914 = t21 * t161;
    const double t917 = t183 * t70;
    const double t918 = t917 * t50;
    const double t920 = t63 * t918 / 0.32e2;
    const double t921 = t65 * t189;
    const double t922 = t921 * t50;
    const double t925 = t339 * t170;
    const double t930 = t202 * t70;
    const double t931 = t930 * t89;
    const double t933 = t63 * t931 / 0.576e3;
    const double t934 = t84 * t189;
    const double t935 = t934 * t89;
    const double t938 = t343 * t210;
    const double t943 = t234 * t70;
    const double t946 = t106 * t189;
    const double t954 = t913 - t914 + t180 * t340 / 0.32e2 + t920 - t63 * t922 / 0.12e2 + t63 * t925 / 0.32e2 + t180 * t344 / 0.576e3 + t933 - t63 * t935 / 0.216e3 + t63 * t938 / 0.576e3 - t62 * ( -0.16e2 / 0.9e1 * t238 + 0.2e1 / 0.3e1 * t241 - t943 * t50 / 0.4e1 + 0.2e1 / 0.3e1 * t946 * t50 - t348 * t170 / 0.4e1 ) / 0.8e1;
    const double t955 = t136 * t954;
    const double t958 = t21 * a * b;
    const double t960 = 0.1e2 / 0.3e1 * t958 * t358;
    const double t961 = t121 * a;
    const double t962 = t961 * b;
    const double t963 = t12 * t30;
    const double t964 = t903 * t963;
    const double t966 = 0.2e1 / 0.3e1 * t962 * t964;
    const double t968 = t412 * t30 * d;
    const double t970 = 0.2e1 / 0.3e1 * t962 * t968;
    const double t971 = t136 * t161;
    const double t974 = t899 * t377;
    const double t975 = t12 * t376;
    const double t978 = t902 * t903 * t975 / 0.3e1;
    const double t980 = t412 * t376 * d;
    const double t982 = t902 * t980 / 0.3e1;
    const double t985 = t183 * t77;
    const double t986 = t985 * t57;
    const double t988 = t63 * t986 / 0.32e2;
    const double t989 = t361 * t175;
    const double t994 = t202 * t77;
    const double t995 = t994 * t93;
    const double t997 = t63 * t995 / 0.576e3;
    const double t998 = t365 * t214;
    const double t1002 = t225 * t77;
    const double t1010 = t913 - t914 + t180 * t362 / 0.32e2 + t988 + t63 * t989 / 0.32e2 + t180 * t366 / 0.576e3 + t997 + t63 * t998 / 0.576e3 - t62 * ( 0.2e1 / 0.3e1 * t229 - t1002 * t57 / 0.4e1 - t370 * t175 / 0.4e1 ) / 0.8e1;
    const double t1011 = t136 * t1010;
    const double t1013 = t21 * t257;
    const double t1016 = t339 * t265;
    const double t1021 = t343 * t293;
    const double t1025 = t322 * t70;
    const double t1033 = t913 - t1013 + t274 * t340 / 0.32e2 + t920 + t63 * t1016 / 0.32e2 + t274 * t344 / 0.576e3 + t933 + t63 * t1021 / 0.576e3 - t62 * ( 0.2e1 / 0.3e1 * t326 - t1025 * t50 / 0.4e1 - t348 * t265 / 0.4e1 ) / 0.8e1;
    const double t1034 = t136 * t1033;
    const double t1036 = t136 * t257;
    const double t1041 = t65 * t280;
    const double t1042 = t1041 * t57;
    const double t1045 = t361 * t269;
    const double t1050 = t84 * t280;
    const double t1051 = t1050 * t93;
    const double t1054 = t365 * t299;
    const double t1059 = t310 * t77;
    const double t1062 = t101 * t280;
    const double t1070 = t913 - t1013 + t274 * t362 / 0.32e2 + t988 - t63 * t1042 / 0.12e2 + t63 * t1045 / 0.32e2 + t274 * t366 / 0.576e3 + t997 - t63 * t1051 / 0.216e3 + t63 * t1054 / 0.576e3 - t62 * ( -0.16e2 / 0.9e1 * t314 + 0.2e1 / 0.3e1 * t317 - t1059 * t57 / 0.4e1 + 0.2e1 / 0.3e1 * t1062 * t57 - t370 * t269 / 0.4e1 ) / 0.8e1;
    const double t1071 = t136 * t1070;


    vrho_a = t118 * t250 + tzk0;
    vrho_b = t118 * t335 + tzk0;
    vsigma_aa = t337 * t355;
    vsigma_ab = -0.2e1 * t357 * t358;
    vsigma_bb = t337 * t377;
    v2rho2_aa = t118 * t593 + 0.2e1 * t378;
    v2rho2_ab = t118 * t765 + t378 + t595;
    v2rho2_bb = t118 * t897 + 0.2e1 * t595;
    v2rhosigma_a_aa = t337 * t955 + t900 + t907 + t911;
    v2rhosigma_a_ab = -0.2e1 * t357 * t971 + t960 - t966 - t970;
    v2rhosigma_a_bb = t337 * t1011 + t974 + t978 + t982;
    v2rhosigma_b_aa = t337 * t1034 + t900 + t907 + t911;
    v2rhosigma_b_ab = -0.2e1 * t357 * t1036 + t960 - t966 - t970;
    v2rhosigma_b_bb = t337 * t1071 + t974 + t978 + t982;
    v2sigma2_aa_aa = 0.e0;
    v2sigma2_aa_ab = 0.e0;
    v2sigma2_aa_bb = 0.e0;
    v2sigma2_ab_ab = 0.e0;
    v2sigma2_ab_bb = 0.e0;
    v2sigma2_bb_bb = 0.e0;

  }


};

struct BuiltinLYP : detail::BuiltinKernelImpl< BuiltinLYP > {

  BuiltinLYP( Spin p ) :
    detail::BuiltinKernelImpl< BuiltinLYP >(p) { }
  
  virtual ~BuiltinLYP() = default;

};



} // namespace ExchCXX
