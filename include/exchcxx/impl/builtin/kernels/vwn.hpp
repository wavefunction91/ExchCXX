/**
 * ExchCXX 
 *
 * Copyright (c) Microsoft Corporation.
 *
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 
 * (1) Redistributions of source code must retain the above copyright notice,
 * this list of conditions and the following disclaimer.
 * 
 * (2) Redistributions in binary form must reproduce the above copyright
 * notice, this list of conditions and the following disclaimer in the
 * documentation and/or other materials provided with the distribution.
 * 
 * (3) Neither the name of the University of California, Lawrence Berkeley
 * National Laboratory, U.S. Dept. of Energy nor the names of its contributors
 * may be used to endorse or promote products derived from this software
 * without specific prior written permission.
 * 
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 * 
 * You are under no obligation whatsoever to provide any bug fixes, patches,
 * or upgrades to the features, functionality or performance of the source
 * code ("Enhancements") to anyone; however, if you choose to make your
 * Enhancements available either publicly, or directly to Lawrence Berkeley
 * National Laboratory, without imposing a separate written license agreement
 * for such Enhancements, then you hereby grant the following license: a
 * non-exclusive, royalty-free perpetual license to install, use, modify,
 * prepare derivative works, incorporate into other computer software,
 * distribute, and sublicense such enhancements or derivative works thereof,
 * in binary and source code form.
 */


#pragma once
#include <cmath>

#include <exchcxx/impl/builtin/fwd.hpp>
#include <exchcxx/impl/builtin/constants.hpp>
#include <exchcxx/impl/builtin/kernel_type.hpp>
#include <exchcxx/impl/builtin/util.hpp>

#include <exchcxx/impl/builtin/kernels/screening_interface.hpp>



namespace ExchCXX {

template <>
struct kernel_traits< BuiltinVWN > :
  public lda_screening_interface< BuiltinVWN > {

  static constexpr bool is_lda  = true;
  static constexpr bool is_gga  = false;
  static constexpr bool is_mgga = false;
  static constexpr bool needs_laplacian = false;
  static constexpr bool is_kedf = false;
  static constexpr bool is_epc  = false;

  static constexpr double dens_tol  = 1e-15;
  static constexpr double zeta_tol  = 1e-15;
  static constexpr double sigma_tol  = 1.0000000000000027e-20;
  static constexpr double tau_tol = is_kedf ? 0.0 : 1e-20;




  BUILTIN_KERNEL_EVAL_RETURN
    eval_exc_unpolar_impl( double rho, double& eps ) {

    constexpr double t1 = constants::m_cbrt_3;
    constexpr double t3 = constants::m_cbrt_one_ov_pi;
    constexpr double t5 = constants::m_cbrt_4;
    constexpr double t32 = constants::m_pi_sq;
    constexpr double t4 = t1 * t3;
    constexpr double t6 = t5 * t5;
    constexpr double t33 = 0.1e1 / t32;


    const double t7 = safe_math::cbrt( rho );
    const double t8 = 0.1e1 / t7;
    const double t9 = t6 * t8;
    const double t10 = t4 * t9;
    const double t11 = t10 / 0.4e1;
    const double t12 = safe_math::sqrt( t10 );
    const double t14 = t11 + 0.186372e1 * t12 + 0.129352e2;
    const double t15 = 0.1e1 / t14;
    const double t19 = safe_math::log( t4 * t9 * t15 / 0.4e1 );
    const double t20 = 0.310907e-1 * t19;
    const double t21 = t12 + 0.372744e1;
    const double t24 = safe_math::atan( 0.61519908197590802322e1 / t21 );
    const double t25 = 0.38783294878113014393e-1 * t24;
    const double t26 = t12 / 0.2e1;
    const double t27 = t26 + 0.10498e0;
    const double t28 = t27 * t27;
    const double t30 = safe_math::log( t28 * t15 );
    const double t31 = 0.96902277115443742139e-3 * t30;
    const double t35 = t11 + 0.565535e0 * t12 + 0.130045e2;
    const double t36 = 0.1e1 / t35;
    const double t40 = safe_math::log( t4 * t9 * t36 / 0.4e1 );
    const double t41 = t12 + 0.113107e1;
    const double t44 = safe_math::atan( 0.71231089178181179908e1 / t41 );
    const double t46 = t26 + 0.47584e-2;
    const double t47 = t46 * t46;
    const double t49 = safe_math::log( t47 * t36 );
    const double t54 = safe_math::cbrt( zeta_tol );
    const double t56 = piecewise_functor_3( 0.1e1 <= zeta_tol, t54 * zeta_tol, 1.0 );
    const double t65 = 0.9e1 * t56 - 0.9e1;
    const double t67 = t33 * ( t40 + 0.317708004743941464e0 * t44 + 0.41403379428206274608e-3 * t49 ) * t65 / 0.24e2;


    eps = t20 + t25 + t31 - t67;

  }

  BUILTIN_KERNEL_EVAL_RETURN
    eval_exc_vxc_unpolar_impl( double rho, double& eps, double& vrho ) {

    constexpr double t1 = constants::m_cbrt_3;
    constexpr double t3 = constants::m_cbrt_one_ov_pi;
    constexpr double t5 = constants::m_cbrt_4;
    constexpr double t32 = constants::m_pi_sq;
    constexpr double t4 = t1 * t3;
    constexpr double t6 = t5 * t5;
    constexpr double t33 = 0.1e1 / t32;
    constexpr double t74 = t4 * t6;
    constexpr double t82 = t3 * t6;
    constexpr double t91 = t1 * t1;
    constexpr double t93 = 0.1e1 / t3;


    const double t7 = safe_math::cbrt( rho );
    const double t8 = 0.1e1 / t7;
    const double t9 = t6 * t8;
    const double t10 = t4 * t9;
    const double t11 = t10 / 0.4e1;
    const double t12 = safe_math::sqrt( t10 );
    const double t14 = t11 + 0.186372e1 * t12 + 0.129352e2;
    const double t15 = 0.1e1 / t14;
    const double t19 = safe_math::log( t4 * t9 * t15 / 0.4e1 );
    const double t20 = 0.310907e-1 * t19;
    const double t21 = t12 + 0.372744e1;
    const double t24 = safe_math::atan( 0.61519908197590802322e1 / t21 );
    const double t25 = 0.38783294878113014393e-1 * t24;
    const double t26 = t12 / 0.2e1;
    const double t27 = t26 + 0.10498e0;
    const double t28 = t27 * t27;
    const double t30 = safe_math::log( t28 * t15 );
    const double t31 = 0.96902277115443742139e-3 * t30;
    const double t35 = t11 + 0.565535e0 * t12 + 0.130045e2;
    const double t36 = 0.1e1 / t35;
    const double t40 = safe_math::log( t4 * t9 * t36 / 0.4e1 );
    const double t41 = t12 + 0.113107e1;
    const double t44 = safe_math::atan( 0.71231089178181179908e1 / t41 );
    const double t46 = t26 + 0.47584e-2;
    const double t47 = t46 * t46;
    const double t49 = safe_math::log( t47 * t36 );
    const double t54 = safe_math::cbrt( zeta_tol );
    const double t56 = piecewise_functor_3( 0.1e1 <= zeta_tol, t54 * zeta_tol, 1.0 );
    const double t65 = 0.9e1 * t56 - 0.9e1;
    const double t67 = t33 * ( t40 + 0.317708004743941464e0 * t44 + 0.41403379428206274608e-3 * t49 ) * t65 / 0.24e2;
    const double t69 = 0.1e1 / t7 / rho;
    const double t70 = t6 * t69;
    const double t75 = t14 * t14;
    const double t76 = 0.1e1 / t75;
    const double t77 = t8 * t76;
    const double t78 = t4 * t70;
    const double t79 = t78 / 0.12e2;
    const double t80 = 0.1e1 / t12;
    const double t81 = t80 * t1;
    const double t84 = t81 * t82 * t69;
    const double t86 = -t79 - 0.31062e0 * t84;
    const double t94 = ( -t4 * t70 * t15 / 0.12e2 - t74 * t77 * t86 / 0.4e1 ) * t91 * t93;
    const double t95 = t5 * t7;
    const double t96 = t95 * t14;
    const double t97 = t94 * t96;
    const double t99 = t21 * t21;
    const double t100 = 0.1e1 / t99;
    const double t102 = t100 * t80 * t1;
    const double t104 = 0.378469910464e2 * t100 + 0.1e1;
    const double t105 = 0.1e1 / t104;
    const double t108 = t102 * t82 * t69 * t105;
    const double t110 = t27 * t15;
    const double t111 = t110 * t80;
    const double t114 = t28 * t76;
    const double t116 = -t111 * t78 / 0.6e1 - t114 * t86;
    const double t117 = 0.1e1 / t28;
    const double t118 = t116 * t117;
    const double t119 = t118 * t14;
    const double t124 = t35 * t35;
    const double t125 = 0.1e1 / t124;
    const double t126 = t8 * t125;
    const double t128 = -t79 - 0.94255833333333333334e-1 * t84;
    const double t134 = ( -t4 * t70 * t36 / 0.12e2 - t74 * t126 * t128 / 0.4e1 ) * t91 * t93;
    const double t135 = t95 * t35;
    const double t138 = t41 * t41;
    const double t139 = 0.1e1 / t138;
    const double t141 = t139 * t80 * t1;
    const double t143 = 0.50738680655100000001e2 * t139 + 0.1e1;
    const double t144 = 0.1e1 / t143;
    const double t149 = t46 * t36;
    const double t150 = t149 * t80;
    const double t153 = t47 * t125;
    const double t155 = -t150 * t78 / 0.6e1 - t153 * t128;
    const double t156 = 0.1e1 / t47;
    const double t157 = t155 * t156;
    const double t162 = t33 * ( t134 * t135 / 0.3e1 + 0.37717812030896172975e0 * t141 * t82 * t69 * t144 + 0.41403379428206274608e-3 * t157 * t35 ) * t65;


    eps = t20 + t25 + t31 - t67;
    vrho = t20 + t25 + t31 - t67 + rho * ( 0.10363566666666666667e-1 * t97 + 0.39765745675026770179e-1 * t108 + 0.96902277115443742139e-3 * t119 - t162 / 0.24e2 );

  }

  BUILTIN_KERNEL_EVAL_RETURN
    eval_fxc_unpolar_impl( double rho, double& v2rho2 ) {

    constexpr double t1 = constants::m_cbrt_3;
    constexpr double t3 = constants::m_cbrt_one_ov_pi;
    constexpr double t5 = constants::m_cbrt_4;
    constexpr double t32 = constants::m_pi_sq;
    constexpr double t4 = t1 * t3;
    constexpr double t6 = t5 * t5;
    constexpr double t33 = 0.1e1 / t32;
    constexpr double t74 = t4 * t6;
    constexpr double t82 = t3 * t6;
    constexpr double t91 = t1 * t1;
    constexpr double t93 = 0.1e1 / t3;
    constexpr double t193 = t3 * t3;
    constexpr double t194 = t193 * t5;
    constexpr double t256 = t91 * t193;


    const double t7 = safe_math::cbrt( rho );
    const double t8 = 0.1e1 / t7;
    const double t9 = t6 * t8;
    const double t10 = t4 * t9;
    const double t11 = t10 / 0.4e1;
    const double t12 = safe_math::sqrt( t10 );
    const double t14 = t11 + 0.186372e1 * t12 + 0.129352e2;
    const double t15 = 0.1e1 / t14;
    const double t21 = t12 + 0.372744e1;
    const double t26 = t12 / 0.2e1;
    const double t27 = t26 + 0.10498e0;
    const double t28 = t27 * t27;
    const double t35 = t11 + 0.565535e0 * t12 + 0.130045e2;
    const double t36 = 0.1e1 / t35;
    const double t41 = t12 + 0.113107e1;
    const double t46 = t26 + 0.47584e-2;
    const double t47 = t46 * t46;
    const double t54 = safe_math::cbrt( zeta_tol );
    const double t56 = piecewise_functor_3( 0.1e1 <= zeta_tol, t54 * zeta_tol, 1.0 );
    const double t65 = 0.9e1 * t56 - 0.9e1;
    const double t69 = 0.1e1 / t7 / rho;
    const double t70 = t6 * t69;
    const double t75 = t14 * t14;
    const double t76 = 0.1e1 / t75;
    const double t77 = t8 * t76;
    const double t78 = t4 * t70;
    const double t79 = t78 / 0.12e2;
    const double t80 = 0.1e1 / t12;
    const double t81 = t80 * t1;
    const double t84 = t81 * t82 * t69;
    const double t86 = -t79 - 0.31062e0 * t84;
    const double t94 = ( -t4 * t70 * t15 / 0.12e2 - t74 * t77 * t86 / 0.4e1 ) * t91 * t93;
    const double t95 = t5 * t7;
    const double t96 = t95 * t14;
    const double t97 = t94 * t96;
    const double t99 = t21 * t21;
    const double t100 = 0.1e1 / t99;
    const double t102 = t100 * t80 * t1;
    const double t104 = 0.378469910464e2 * t100 + 0.1e1;
    const double t105 = 0.1e1 / t104;
    const double t108 = t102 * t82 * t69 * t105;
    const double t110 = t27 * t15;
    const double t111 = t110 * t80;
    const double t114 = t28 * t76;
    const double t116 = -t111 * t78 / 0.6e1 - t114 * t86;
    const double t117 = 0.1e1 / t28;
    const double t118 = t116 * t117;
    const double t119 = t118 * t14;
    const double t124 = t35 * t35;
    const double t125 = 0.1e1 / t124;
    const double t126 = t8 * t125;
    const double t128 = -t79 - 0.94255833333333333334e-1 * t84;
    const double t134 = ( -t4 * t70 * t36 / 0.12e2 - t74 * t126 * t128 / 0.4e1 ) * t91 * t93;
    const double t135 = t95 * t35;
    const double t138 = t41 * t41;
    const double t139 = 0.1e1 / t138;
    const double t141 = t139 * t80 * t1;
    const double t143 = 0.50738680655100000001e2 * t139 + 0.1e1;
    const double t144 = 0.1e1 / t143;
    const double t149 = t46 * t36;
    const double t150 = t149 * t80;
    const double t153 = t47 * t125;
    const double t155 = -t150 * t78 / 0.6e1 - t153 * t128;
    const double t156 = 0.1e1 / t47;
    const double t157 = t155 * t156;
    const double t162 = t33 * ( t134 * t135 / 0.3e1 + 0.37717812030896172975e0 * t141 * t82 * t69 * t144 + 0.41403379428206274608e-3 * t157 * t35 ) * t65;
    const double t170 = rho * rho;
    const double t172 = 0.1e1 / t7 / t170;
    const double t173 = t6 * t172;
    const double t175 = t4 * t173 * t15;
    const double t177 = t69 * t76;
    const double t182 = 0.1e1 / t75 / t14;
    const double t183 = t8 * t182;
    const double t184 = t86 * t86;
    const double t188 = t4 * t173;
    const double t189 = t188 / 0.9e1;
    const double t191 = 0.1e1 / t12 / t10;
    const double t192 = t191 * t91;
    const double t195 = t7 * t7;
    const double t197 = 0.1e1 / t195 / t170;
    const double t199 = t192 * t194 * t197;
    const double t202 = t81 * t82 * t172;
    const double t204 = t189 - 0.20708e0 * t199 + 0.41416e0 * t202;
    const double t210 = ( t175 / 0.9e1 + t74 * t177 * t86 / 0.6e1 + t74 * t183 * t184 / 0.2e1 - t74 * t77 * t204 / 0.4e1 ) * t91 * t93;
    const double t211 = t210 * t96;
    const double t214 = t5 / t195;
    const double t215 = t214 * t14;
    const double t216 = t94 * t215;
    const double t218 = t95 * t86;
    const double t219 = t94 * t218;
    const double t221 = t99 * t21;
    const double t222 = 0.1e1 / t221;
    const double t223 = t222 * t1;
    const double t224 = t223 * t3;
    const double t226 = t224 * t173 * t105;
    const double t229 = t100 * t191 * t91;
    const double t232 = t229 * t194 * t197 * t105;
    const double t236 = t102 * t82 * t172 * t105;
    const double t238 = t99 * t99;
    const double t240 = 0.1e1 / t238 / t21;
    const double t241 = t240 * t1;
    const double t242 = t241 * t3;
    const double t243 = t104 * t104;
    const double t244 = 0.1e1 / t243;
    const double t246 = t242 * t173 * t244;
    const double t249 = t27 * t76;
    const double t250 = t249 * t81;
    const double t251 = t69 * t86;
    const double t255 = t110 * t191;
    const double t257 = t5 * t197;
    const double t258 = t256 * t257;
    const double t263 = t28 * t182;
    const double t267 = t175 / 0.72e2 + t250 * t82 * t251 / 0.3e1 - t255 * t258 / 0.9e1 + 0.2e1 / 0.9e1 * t111 * t188 + 0.2e1 * t263 * t184 - t114 * t204;
    const double t268 = t267 * t117;
    const double t269 = t268 * t14;
    const double t272 = 0.1e1 / t28 / t27;
    const double t273 = t116 * t272;
    const double t274 = t14 * t80;
    const double t275 = t273 * t274;
    const double t276 = t275 * t78;
    const double t278 = t118 * t86;
    const double t281 = t4 * t173 * t36;
    const double t283 = t69 * t125;
    const double t288 = 0.1e1 / t124 / t35;
    const double t289 = t8 * t288;
    const double t290 = t128 * t128;
    const double t296 = t189 - 0.62837222222222222223e-1 * t199 + 0.12567444444444444445e0 * t202;
    const double t302 = ( t281 / 0.9e1 + t74 * t283 * t128 / 0.6e1 + t74 * t289 * t290 / 0.2e1 - t74 * t126 * t296 / 0.4e1 ) * t91 * t93;
    const double t305 = t214 * t35;
    const double t308 = t95 * t128;
    const double t311 = t138 * t41;
    const double t313 = 0.1e1 / t311 * t1;
    const double t314 = t313 * t3;
    const double t319 = t139 * t191 * t91;
    const double t328 = t138 * t138;
    const double t330 = 0.1e1 / t328 / t41;
    const double t331 = t330 * t1;
    const double t332 = t331 * t3;
    const double t333 = t143 * t143;
    const double t334 = 0.1e1 / t333;
    const double t339 = t46 * t125;
    const double t340 = t339 * t81;
    const double t341 = t69 * t128;
    const double t345 = t149 * t191;
    const double t350 = t47 * t288;
    const double t354 = t281 / 0.72e2 + t340 * t82 * t341 / 0.3e1 - t345 * t258 / 0.9e1 + 0.2e1 / 0.9e1 * t150 * t188 + 0.2e1 * t350 * t290 - t153 * t296;
    const double t355 = t354 * t156;
    const double t359 = 0.1e1 / t47 / t46;
    const double t360 = t155 * t359;
    const double t361 = t35 * t80;
    const double t362 = t360 * t361;
    const double t369 = t33 * ( t302 * t135 / 0.3e1 + t134 * t305 / 0.9e1 + t134 * t308 / 0.3e1 + 0.12572604010298724325e0 * t314 * t173 * t144 + 0.2514520802059744865e0 * t319 * t194 * t197 * t144 - 0.502904160411948973e0 * t141 * t82 * t172 * t144 - 0.63791733988157656508e1 * t332 * t173 * t334 + 0.41403379428206274608e-3 * t355 * t35 + 0.69005632380343791013e-4 * t362 * t78 + 0.41403379428206274608e-3 * t157 * t128 ) * t65;
    const double t371 = 0.10363566666666666667e-1 * t211 + 0.34545222222222222223e-2 * t216 + 0.10363566666666666667e-1 * t219 + 0.13255248558342256726e-1 * t226 + 0.26510497116684513453e-1 * t232 - 0.53020994233369026905e-1 * t236 - 0.50167127350538589834e0 * t246 + 0.96902277115443742139e-3 * t269 + 0.1615037951924062369e-3 * t276 + 0.96902277115443742139e-3 * t278 - t369 / 0.24e2;


    v2rho2 = 0.20727133333333333334e-1 * t97 + 0.79531491350053540358e-1 * t108 + 0.19380455423088748428e-2 * t119 - t162 / 0.12e2 + rho * t371;

  }

  BUILTIN_KERNEL_EVAL_RETURN
    eval_vxc_fxc_unpolar_impl( double rho, double& vrho, double& v2rho2 ) {

    constexpr double t1 = constants::m_cbrt_3;
    constexpr double t3 = constants::m_cbrt_one_ov_pi;
    constexpr double t5 = constants::m_cbrt_4;
    constexpr double t32 = constants::m_pi_sq;
    constexpr double t4 = t1 * t3;
    constexpr double t6 = t5 * t5;
    constexpr double t33 = 0.1e1 / t32;
    constexpr double t74 = t4 * t6;
    constexpr double t82 = t3 * t6;
    constexpr double t91 = t1 * t1;
    constexpr double t93 = 0.1e1 / t3;
    constexpr double t193 = t3 * t3;
    constexpr double t194 = t193 * t5;
    constexpr double t256 = t91 * t193;


    const double t7 = safe_math::cbrt( rho );
    const double t8 = 0.1e1 / t7;
    const double t9 = t6 * t8;
    const double t10 = t4 * t9;
    const double t11 = t10 / 0.4e1;
    const double t12 = safe_math::sqrt( t10 );
    const double t14 = t11 + 0.186372e1 * t12 + 0.129352e2;
    const double t15 = 0.1e1 / t14;
    const double t19 = safe_math::log( t4 * t9 * t15 / 0.4e1 );
    const double t20 = 0.310907e-1 * t19;
    const double t21 = t12 + 0.372744e1;
    const double t24 = safe_math::atan( 0.61519908197590802322e1 / t21 );
    const double t25 = 0.38783294878113014393e-1 * t24;
    const double t26 = t12 / 0.2e1;
    const double t27 = t26 + 0.10498e0;
    const double t28 = t27 * t27;
    const double t30 = safe_math::log( t28 * t15 );
    const double t31 = 0.96902277115443742139e-3 * t30;
    const double t35 = t11 + 0.565535e0 * t12 + 0.130045e2;
    const double t36 = 0.1e1 / t35;
    const double t40 = safe_math::log( t4 * t9 * t36 / 0.4e1 );
    const double t41 = t12 + 0.113107e1;
    const double t44 = safe_math::atan( 0.71231089178181179908e1 / t41 );
    const double t46 = t26 + 0.47584e-2;
    const double t47 = t46 * t46;
    const double t49 = safe_math::log( t47 * t36 );
    const double t54 = safe_math::cbrt( zeta_tol );
    const double t56 = piecewise_functor_3( 0.1e1 <= zeta_tol, t54 * zeta_tol, 1.0 );
    const double t65 = 0.9e1 * t56 - 0.9e1;
    const double t67 = t33 * ( t40 + 0.317708004743941464e0 * t44 + 0.41403379428206274608e-3 * t49 ) * t65 / 0.24e2;
    const double t69 = 0.1e1 / t7 / rho;
    const double t70 = t6 * t69;
    const double t75 = t14 * t14;
    const double t76 = 0.1e1 / t75;
    const double t77 = t8 * t76;
    const double t78 = t4 * t70;
    const double t79 = t78 / 0.12e2;
    const double t80 = 0.1e1 / t12;
    const double t81 = t80 * t1;
    const double t84 = t81 * t82 * t69;
    const double t86 = -t79 - 0.31062e0 * t84;
    const double t94 = ( -t4 * t70 * t15 / 0.12e2 - t74 * t77 * t86 / 0.4e1 ) * t91 * t93;
    const double t95 = t5 * t7;
    const double t96 = t95 * t14;
    const double t97 = t94 * t96;
    const double t99 = t21 * t21;
    const double t100 = 0.1e1 / t99;
    const double t102 = t100 * t80 * t1;
    const double t104 = 0.378469910464e2 * t100 + 0.1e1;
    const double t105 = 0.1e1 / t104;
    const double t108 = t102 * t82 * t69 * t105;
    const double t110 = t27 * t15;
    const double t111 = t110 * t80;
    const double t114 = t28 * t76;
    const double t116 = -t111 * t78 / 0.6e1 - t114 * t86;
    const double t117 = 0.1e1 / t28;
    const double t118 = t116 * t117;
    const double t119 = t118 * t14;
    const double t124 = t35 * t35;
    const double t125 = 0.1e1 / t124;
    const double t126 = t8 * t125;
    const double t128 = -t79 - 0.94255833333333333334e-1 * t84;
    const double t134 = ( -t4 * t70 * t36 / 0.12e2 - t74 * t126 * t128 / 0.4e1 ) * t91 * t93;
    const double t135 = t95 * t35;
    const double t138 = t41 * t41;
    const double t139 = 0.1e1 / t138;
    const double t141 = t139 * t80 * t1;
    const double t143 = 0.50738680655100000001e2 * t139 + 0.1e1;
    const double t144 = 0.1e1 / t143;
    const double t149 = t46 * t36;
    const double t150 = t149 * t80;
    const double t153 = t47 * t125;
    const double t155 = -t150 * t78 / 0.6e1 - t153 * t128;
    const double t156 = 0.1e1 / t47;
    const double t157 = t155 * t156;
    const double t162 = t33 * ( t134 * t135 / 0.3e1 + 0.37717812030896172975e0 * t141 * t82 * t69 * t144 + 0.41403379428206274608e-3 * t157 * t35 ) * t65;
    const double t170 = rho * rho;
    const double t172 = 0.1e1 / t7 / t170;
    const double t173 = t6 * t172;
    const double t175 = t4 * t173 * t15;
    const double t177 = t69 * t76;
    const double t182 = 0.1e1 / t75 / t14;
    const double t183 = t8 * t182;
    const double t184 = t86 * t86;
    const double t188 = t4 * t173;
    const double t189 = t188 / 0.9e1;
    const double t191 = 0.1e1 / t12 / t10;
    const double t192 = t191 * t91;
    const double t195 = t7 * t7;
    const double t197 = 0.1e1 / t195 / t170;
    const double t199 = t192 * t194 * t197;
    const double t202 = t81 * t82 * t172;
    const double t204 = t189 - 0.20708e0 * t199 + 0.41416e0 * t202;
    const double t210 = ( t175 / 0.9e1 + t74 * t177 * t86 / 0.6e1 + t74 * t183 * t184 / 0.2e1 - t74 * t77 * t204 / 0.4e1 ) * t91 * t93;
    const double t211 = t210 * t96;
    const double t214 = t5 / t195;
    const double t215 = t214 * t14;
    const double t216 = t94 * t215;
    const double t218 = t95 * t86;
    const double t219 = t94 * t218;
    const double t221 = t99 * t21;
    const double t222 = 0.1e1 / t221;
    const double t223 = t222 * t1;
    const double t224 = t223 * t3;
    const double t226 = t224 * t173 * t105;
    const double t229 = t100 * t191 * t91;
    const double t232 = t229 * t194 * t197 * t105;
    const double t236 = t102 * t82 * t172 * t105;
    const double t238 = t99 * t99;
    const double t240 = 0.1e1 / t238 / t21;
    const double t241 = t240 * t1;
    const double t242 = t241 * t3;
    const double t243 = t104 * t104;
    const double t244 = 0.1e1 / t243;
    const double t246 = t242 * t173 * t244;
    const double t249 = t27 * t76;
    const double t250 = t249 * t81;
    const double t251 = t69 * t86;
    const double t255 = t110 * t191;
    const double t257 = t5 * t197;
    const double t258 = t256 * t257;
    const double t263 = t28 * t182;
    const double t267 = t175 / 0.72e2 + t250 * t82 * t251 / 0.3e1 - t255 * t258 / 0.9e1 + 0.2e1 / 0.9e1 * t111 * t188 + 0.2e1 * t263 * t184 - t114 * t204;
    const double t268 = t267 * t117;
    const double t269 = t268 * t14;
    const double t272 = 0.1e1 / t28 / t27;
    const double t273 = t116 * t272;
    const double t274 = t14 * t80;
    const double t275 = t273 * t274;
    const double t276 = t275 * t78;
    const double t278 = t118 * t86;
    const double t281 = t4 * t173 * t36;
    const double t283 = t69 * t125;
    const double t288 = 0.1e1 / t124 / t35;
    const double t289 = t8 * t288;
    const double t290 = t128 * t128;
    const double t296 = t189 - 0.62837222222222222223e-1 * t199 + 0.12567444444444444445e0 * t202;
    const double t302 = ( t281 / 0.9e1 + t74 * t283 * t128 / 0.6e1 + t74 * t289 * t290 / 0.2e1 - t74 * t126 * t296 / 0.4e1 ) * t91 * t93;
    const double t305 = t214 * t35;
    const double t308 = t95 * t128;
    const double t311 = t138 * t41;
    const double t313 = 0.1e1 / t311 * t1;
    const double t314 = t313 * t3;
    const double t319 = t139 * t191 * t91;
    const double t328 = t138 * t138;
    const double t330 = 0.1e1 / t328 / t41;
    const double t331 = t330 * t1;
    const double t332 = t331 * t3;
    const double t333 = t143 * t143;
    const double t334 = 0.1e1 / t333;
    const double t339 = t46 * t125;
    const double t340 = t339 * t81;
    const double t341 = t69 * t128;
    const double t345 = t149 * t191;
    const double t350 = t47 * t288;
    const double t354 = t281 / 0.72e2 + t340 * t82 * t341 / 0.3e1 - t345 * t258 / 0.9e1 + 0.2e1 / 0.9e1 * t150 * t188 + 0.2e1 * t350 * t290 - t153 * t296;
    const double t355 = t354 * t156;
    const double t359 = 0.1e1 / t47 / t46;
    const double t360 = t155 * t359;
    const double t361 = t35 * t80;
    const double t362 = t360 * t361;
    const double t369 = t33 * ( t302 * t135 / 0.3e1 + t134 * t305 / 0.9e1 + t134 * t308 / 0.3e1 + 0.12572604010298724325e0 * t314 * t173 * t144 + 0.2514520802059744865e0 * t319 * t194 * t197 * t144 - 0.502904160411948973e0 * t141 * t82 * t172 * t144 - 0.63791733988157656508e1 * t332 * t173 * t334 + 0.41403379428206274608e-3 * t355 * t35 + 0.69005632380343791013e-4 * t362 * t78 + 0.41403379428206274608e-3 * t157 * t128 ) * t65;
    const double t371 = 0.10363566666666666667e-1 * t211 + 0.34545222222222222223e-2 * t216 + 0.10363566666666666667e-1 * t219 + 0.13255248558342256726e-1 * t226 + 0.26510497116684513453e-1 * t232 - 0.53020994233369026905e-1 * t236 - 0.50167127350538589834e0 * t246 + 0.96902277115443742139e-3 * t269 + 0.1615037951924062369e-3 * t276 + 0.96902277115443742139e-3 * t278 - t369 / 0.24e2;


    vrho = t20 + t25 + t31 - t67 + rho * ( 0.10363566666666666667e-1 * t97 + 0.39765745675026770179e-1 * t108 + 0.96902277115443742139e-3 * t119 - t162 / 0.24e2 );
    v2rho2 = 0.20727133333333333334e-1 * t97 + 0.79531491350053540358e-1 * t108 + 0.19380455423088748428e-2 * t119 - t162 / 0.12e2 + rho * t371;

  }

  BUILTIN_KERNEL_EVAL_RETURN
    eval_exc_polar_impl( double rho_a, double rho_b, double& eps ) {

    constexpr double t1 = constants::m_cbrt_3;
    constexpr double t3 = constants::m_cbrt_one_ov_pi;
    constexpr double t5 = constants::m_cbrt_4;
    constexpr double t33 = constants::m_pi_sq;
    constexpr double t71 = constants::m_cbrt_2;
    constexpr double t4 = t1 * t3;
    constexpr double t6 = t5 * t5;
    constexpr double t34 = 0.1e1 / t33;
    constexpr double t72 = t71 - 0.1e1;
    constexpr double t74 = 0.1e1 / t72 / 0.2e1;
    constexpr double t83 = 0.9e1 * t72;


    const double t7 = rho_a + rho_b;
    const double t8 = safe_math::cbrt( t7 );
    const double t9 = 0.1e1 / t8;
    const double t10 = t6 * t9;
    const double t11 = t4 * t10;
    const double t12 = t11 / 0.4e1;
    const double t13 = safe_math::sqrt( t11 );
    const double t15 = t12 + 0.186372e1 * t13 + 0.129352e2;
    const double t16 = 0.1e1 / t15;
    const double t20 = safe_math::log( t4 * t10 * t16 / 0.4e1 );
    const double t21 = 0.310907e-1 * t20;
    const double t22 = t13 + 0.372744e1;
    const double t25 = safe_math::atan( 0.61519908197590802322e1 / t22 );
    const double t26 = 0.38783294878113014393e-1 * t25;
    const double t27 = t13 / 0.2e1;
    const double t28 = t27 + 0.10498e0;
    const double t29 = t28 * t28;
    const double t31 = safe_math::log( t29 * t16 );
    const double t32 = 0.96902277115443742139e-3 * t31;
    const double t36 = t12 + 0.565535e0 * t13 + 0.130045e2;
    const double t37 = 0.1e1 / t36;
    const double t41 = safe_math::log( t4 * t10 * t37 / 0.4e1 );
    const double t42 = t13 + 0.113107e1;
    const double t45 = safe_math::atan( 0.71231089178181179908e1 / t42 );
    const double t47 = t27 + 0.47584e-2;
    const double t48 = t47 * t47;
    const double t50 = safe_math::log( t48 * t37 );
    const double t53 = t34 * ( t41 + 0.317708004743941464e0 * t45 + 0.41403379428206274608e-3 * t50 );
    const double t54 = rho_a - rho_b;
    const double t55 = 0.1e1 / t7;
    const double t56 = t54 * t55;
    const double t57 = 0.1e1 + t56;
    const double t58 = t57 <= zeta_tol;
    const double t59 = safe_math::cbrt( zeta_tol );
    const double t60 = t59 * zeta_tol;
    const double t61 = safe_math::cbrt( t57 );
    const double t63 = piecewise_functor_3( t58, t60, t61 * t57 );
    const double t64 = 0.1e1 - t56;
    const double t65 = t64 <= zeta_tol;
    const double t66 = safe_math::cbrt( t64 );
    const double t68 = piecewise_functor_3( t65, t60, t66 * t64 );
    const double t69 = t63 + t68 - 0.2e1;
    const double t70 = t53 * t69;
    const double t75 = t54 * t54;
    const double t76 = t75 * t75;
    const double t77 = t7 * t7;
    const double t78 = t77 * t77;
    const double t79 = 0.1e1 / t78;
    const double t84 = t74 * ( -t76 * t79 + 0.1e1 ) * t83;
    const double t86 = t70 * t84 / 0.24e2;
    const double t88 = t12 + 0.353021e1 * t13 + 0.180578e2;
    const double t89 = 0.1e1 / t88;
    const double t93 = safe_math::log( t4 * t10 * t89 / 0.4e1 );
    const double t95 = t13 + 0.706042e1;
    const double t98 = safe_math::atan( 0.473092690956011283e1 / t95 );
    const double t100 = t27 + 0.325e0;
    const double t101 = t100 * t100;
    const double t103 = safe_math::log( t101 * t89 );
    const double t105 = 0.1554535e-1 * t93 + 0.52491393169780936218e-1 * t98 + 0.22478670955426118383e-2 * t103 - t21 - t26 - t32;
    const double t106 = t105 * t69;
    const double t107 = t74 * t76;
    const double t108 = t107 * t79;
    const double t109 = t106 * t108;


    eps = t21 + t26 + t32 - t86 + t109;

  }

  BUILTIN_KERNEL_EVAL_RETURN
    eval_exc_vxc_polar_impl( double rho_a, double rho_b, double& eps, double& vrho_a, double& vrho_b ) {

    constexpr double t1 = constants::m_cbrt_3;
    constexpr double t3 = constants::m_cbrt_one_ov_pi;
    constexpr double t5 = constants::m_cbrt_4;
    constexpr double t33 = constants::m_pi_sq;
    constexpr double t71 = constants::m_cbrt_2;
    constexpr double t4 = t1 * t3;
    constexpr double t6 = t5 * t5;
    constexpr double t34 = 0.1e1 / t33;
    constexpr double t72 = t71 - 0.1e1;
    constexpr double t74 = 0.1e1 / t72 / 0.2e1;
    constexpr double t83 = 0.9e1 * t72;
    constexpr double t116 = t4 * t6;
    constexpr double t124 = t3 * t6;
    constexpr double t133 = t1 * t1;
    constexpr double t135 = 0.1e1 / t3;


    const double t7 = rho_a + rho_b;
    const double t8 = safe_math::cbrt( t7 );
    const double t9 = 0.1e1 / t8;
    const double t10 = t6 * t9;
    const double t11 = t4 * t10;
    const double t12 = t11 / 0.4e1;
    const double t13 = safe_math::sqrt( t11 );
    const double t15 = t12 + 0.186372e1 * t13 + 0.129352e2;
    const double t16 = 0.1e1 / t15;
    const double t20 = safe_math::log( t4 * t10 * t16 / 0.4e1 );
    const double t21 = 0.310907e-1 * t20;
    const double t22 = t13 + 0.372744e1;
    const double t25 = safe_math::atan( 0.61519908197590802322e1 / t22 );
    const double t26 = 0.38783294878113014393e-1 * t25;
    const double t27 = t13 / 0.2e1;
    const double t28 = t27 + 0.10498e0;
    const double t29 = t28 * t28;
    const double t31 = safe_math::log( t29 * t16 );
    const double t32 = 0.96902277115443742139e-3 * t31;
    const double t36 = t12 + 0.565535e0 * t13 + 0.130045e2;
    const double t37 = 0.1e1 / t36;
    const double t41 = safe_math::log( t4 * t10 * t37 / 0.4e1 );
    const double t42 = t13 + 0.113107e1;
    const double t45 = safe_math::atan( 0.71231089178181179908e1 / t42 );
    const double t47 = t27 + 0.47584e-2;
    const double t48 = t47 * t47;
    const double t50 = safe_math::log( t48 * t37 );
    const double t53 = t34 * ( t41 + 0.317708004743941464e0 * t45 + 0.41403379428206274608e-3 * t50 );
    const double t54 = rho_a - rho_b;
    const double t55 = 0.1e1 / t7;
    const double t56 = t54 * t55;
    const double t57 = 0.1e1 + t56;
    const double t58 = t57 <= zeta_tol;
    const double t59 = safe_math::cbrt( zeta_tol );
    const double t60 = t59 * zeta_tol;
    const double t61 = safe_math::cbrt( t57 );
    const double t63 = piecewise_functor_3( t58, t60, t61 * t57 );
    const double t64 = 0.1e1 - t56;
    const double t65 = t64 <= zeta_tol;
    const double t66 = safe_math::cbrt( t64 );
    const double t68 = piecewise_functor_3( t65, t60, t66 * t64 );
    const double t69 = t63 + t68 - 0.2e1;
    const double t70 = t53 * t69;
    const double t75 = t54 * t54;
    const double t76 = t75 * t75;
    const double t77 = t7 * t7;
    const double t78 = t77 * t77;
    const double t79 = 0.1e1 / t78;
    const double t84 = t74 * ( -t76 * t79 + 0.1e1 ) * t83;
    const double t86 = t70 * t84 / 0.24e2;
    const double t88 = t12 + 0.353021e1 * t13 + 0.180578e2;
    const double t89 = 0.1e1 / t88;
    const double t93 = safe_math::log( t4 * t10 * t89 / 0.4e1 );
    const double t95 = t13 + 0.706042e1;
    const double t98 = safe_math::atan( 0.473092690956011283e1 / t95 );
    const double t100 = t27 + 0.325e0;
    const double t101 = t100 * t100;
    const double t103 = safe_math::log( t101 * t89 );
    const double t105 = 0.1554535e-1 * t93 + 0.52491393169780936218e-1 * t98 + 0.22478670955426118383e-2 * t103 - t21 - t26 - t32;
    const double t106 = t105 * t69;
    const double t107 = t74 * t76;
    const double t108 = t107 * t79;
    const double t109 = t106 * t108;
    const double t111 = 0.1e1 / t8 / t7;
    const double t112 = t6 * t111;
    const double t117 = t15 * t15;
    const double t118 = 0.1e1 / t117;
    const double t119 = t9 * t118;
    const double t120 = t4 * t112;
    const double t121 = t120 / 0.12e2;
    const double t122 = 0.1e1 / t13;
    const double t123 = t122 * t1;
    const double t126 = t123 * t124 * t111;
    const double t128 = -t121 - 0.31062e0 * t126;
    const double t136 = ( -t4 * t112 * t16 / 0.12e2 - t116 * t119 * t128 / 0.4e1 ) * t133 * t135;
    const double t137 = t5 * t8;
    const double t138 = t137 * t15;
    const double t139 = t136 * t138;
    const double t140 = 0.10363566666666666667e-1 * t139;
    const double t141 = t22 * t22;
    const double t142 = 0.1e1 / t141;
    const double t144 = t142 * t122 * t1;
    const double t146 = 0.378469910464e2 * t142 + 0.1e1;
    const double t147 = 0.1e1 / t146;
    const double t150 = t144 * t124 * t111 * t147;
    const double t151 = 0.39765745675026770179e-1 * t150;
    const double t152 = t28 * t16;
    const double t153 = t152 * t122;
    const double t156 = t29 * t118;
    const double t158 = -t153 * t120 / 0.6e1 - t156 * t128;
    const double t159 = 0.1e1 / t29;
    const double t160 = t158 * t159;
    const double t161 = t160 * t15;
    const double t162 = 0.96902277115443742139e-3 * t161;
    const double t166 = t36 * t36;
    const double t167 = 0.1e1 / t166;
    const double t168 = t9 * t167;
    const double t170 = -t121 - 0.94255833333333333334e-1 * t126;
    const double t176 = ( -t4 * t112 * t37 / 0.12e2 - t116 * t168 * t170 / 0.4e1 ) * t133 * t135;
    const double t177 = t137 * t36;
    const double t180 = t42 * t42;
    const double t181 = 0.1e1 / t180;
    const double t183 = t181 * t122 * t1;
    const double t185 = 0.50738680655100000001e2 * t181 + 0.1e1;
    const double t186 = 0.1e1 / t185;
    const double t191 = t47 * t37;
    const double t192 = t191 * t122;
    const double t195 = t48 * t167;
    const double t197 = -t192 * t120 / 0.6e1 - t195 * t170;
    const double t198 = 0.1e1 / t48;
    const double t199 = t197 * t198;
    const double t203 = t34 * ( t176 * t177 / 0.3e1 + 0.37717812030896172975e0 * t183 * t124 * t111 * t186 + 0.41403379428206274608e-3 * t199 * t36 );
    const double t204 = t203 * t69;
    const double t205 = t204 * t84;
    const double t206 = t205 / 0.24e2;
    const double t207 = 0.1e1 / t77;
    const double t208 = t54 * t207;
    const double t209 = t55 - t208;
    const double t212 = piecewise_functor_3( t58, 0.0, 0.4e1 / 0.3e1 * t61 * t209 );
    const double t213 = -t209;
    const double t216 = piecewise_functor_3( t65, 0.0, 0.4e1 / 0.3e1 * t66 * t213 );
    const double t217 = t212 + t216;
    const double t218 = t53 * t217;
    const double t219 = t218 * t84;
    const double t220 = t219 / 0.24e2;
    const double t221 = t75 * t54;
    const double t222 = t221 * t79;
    const double t223 = t78 * t7;
    const double t224 = 0.1e1 / t223;
    const double t225 = t76 * t224;
    const double t229 = t74 * ( -0.4e1 * t222 + 0.4e1 * t225 ) * t83;
    const double t230 = t70 * t229;
    const double t231 = t230 / 0.24e2;
    const double t235 = t88 * t88;
    const double t236 = 0.1e1 / t235;
    const double t237 = t9 * t236;
    const double t239 = -t121 - 0.58836833333333333333e0 * t126;
    const double t245 = ( -t4 * t112 * t89 / 0.12e2 - t116 * t237 * t239 / 0.4e1 ) * t133 * t135;
    const double t246 = t137 * t88;
    const double t249 = t95 * t95;
    const double t250 = 0.1e1 / t249;
    const double t252 = t250 * t122 * t1;
    const double t254 = 0.223816694236e2 * t250 + 0.1e1;
    const double t255 = 0.1e1 / t254;
    const double t260 = t100 * t89;
    const double t261 = t260 * t122;
    const double t264 = t101 * t236;
    const double t266 = -t261 * t120 / 0.6e1 - t264 * t239;
    const double t267 = 0.1e1 / t101;
    const double t268 = t266 * t267;
    const double t271 = 0.51817833333333333333e-2 * t245 * t246 + 0.41388824077869423261e-1 * t252 * t124 * t111 * t255 + 0.22478670955426118383e-2 * t268 * t88 - t140 - t151 - t162;
    const double t272 = t271 * t69;
    const double t273 = t272 * t108;
    const double t274 = t105 * t217;
    const double t275 = t274 * t108;
    const double t276 = t74 * t221;
    const double t277 = t276 * t79;
    const double t278 = t106 * t277;
    const double t279 = 0.4e1 * t278;
    const double t280 = t107 * t224;
    const double t281 = t106 * t280;
    const double t282 = 0.4e1 * t281;
    const double t285 = -t55 - t208;
    const double t288 = piecewise_functor_3( t58, 0.0, 0.4e1 / 0.3e1 * t61 * t285 );
    const double t289 = -t285;
    const double t292 = piecewise_functor_3( t65, 0.0, 0.4e1 / 0.3e1 * t66 * t289 );
    const double t293 = t288 + t292;
    const double t294 = t53 * t293;
    const double t295 = t294 * t84;
    const double t296 = t295 / 0.24e2;
    const double t300 = t74 * ( 0.4e1 * t222 + 0.4e1 * t225 ) * t83;
    const double t301 = t70 * t300;
    const double t302 = t301 / 0.24e2;
    const double t303 = t105 * t293;
    const double t304 = t303 * t108;


    eps = t21 + t26 + t32 - t86 + t109;
    vrho_a = t21 + t26 + t32 - t86 + t109 + t7 * ( t140 + t151 + t162 - t206 - t220 - t231 + t273 + t275 + t279 - t282 );
    vrho_b = t21 + t26 + t32 - t86 + t109 + t7 * ( t140 + t151 + t162 - t206 - t296 - t302 + t273 + t304 - t279 - t282 );

  }

  BUILTIN_KERNEL_EVAL_RETURN
    eval_fxc_polar_impl( double rho_a, double rho_b, double& v2rho2_aa, double& v2rho2_ab, double& v2rho2_bb ) {

    constexpr double t1 = constants::m_cbrt_3;
    constexpr double t3 = constants::m_cbrt_one_ov_pi;
    constexpr double t5 = constants::m_cbrt_4;
    constexpr double t33 = constants::m_pi_sq;
    constexpr double t71 = constants::m_cbrt_2;
    constexpr double t4 = t1 * t3;
    constexpr double t6 = t5 * t5;
    constexpr double t34 = 0.1e1 / t33;
    constexpr double t72 = t71 - 0.1e1;
    constexpr double t74 = 0.1e1 / t72 / 0.2e1;
    constexpr double t83 = 0.9e1 * t72;
    constexpr double t116 = t4 * t6;
    constexpr double t124 = t3 * t6;
    constexpr double t133 = t1 * t1;
    constexpr double t135 = 0.1e1 / t3;
    constexpr double t339 = t3 * t3;
    constexpr double t340 = t339 * t5;
    constexpr double t402 = t133 * t339;


    const double t7 = rho_a + rho_b;
    const double t8 = safe_math::cbrt( t7 );
    const double t9 = 0.1e1 / t8;
    const double t10 = t6 * t9;
    const double t11 = t4 * t10;
    const double t12 = t11 / 0.4e1;
    const double t13 = safe_math::sqrt( t11 );
    const double t15 = t12 + 0.186372e1 * t13 + 0.129352e2;
    const double t16 = 0.1e1 / t15;
    const double t20 = safe_math::log( t4 * t10 * t16 / 0.4e1 );
    const double t21 = 0.310907e-1 * t20;
    const double t22 = t13 + 0.372744e1;
    const double t25 = safe_math::atan( 0.61519908197590802322e1 / t22 );
    const double t26 = 0.38783294878113014393e-1 * t25;
    const double t27 = t13 / 0.2e1;
    const double t28 = t27 + 0.10498e0;
    const double t29 = t28 * t28;
    const double t31 = safe_math::log( t29 * t16 );
    const double t32 = 0.96902277115443742139e-3 * t31;
    const double t36 = t12 + 0.565535e0 * t13 + 0.130045e2;
    const double t37 = 0.1e1 / t36;
    const double t41 = safe_math::log( t4 * t10 * t37 / 0.4e1 );
    const double t42 = t13 + 0.113107e1;
    const double t45 = safe_math::atan( 0.71231089178181179908e1 / t42 );
    const double t47 = t27 + 0.47584e-2;
    const double t48 = t47 * t47;
    const double t50 = safe_math::log( t48 * t37 );
    const double t53 = t34 * ( t41 + 0.317708004743941464e0 * t45 + 0.41403379428206274608e-3 * t50 );
    const double t54 = rho_a - rho_b;
    const double t55 = 0.1e1 / t7;
    const double t56 = t54 * t55;
    const double t57 = 0.1e1 + t56;
    const double t58 = t57 <= zeta_tol;
    const double t59 = safe_math::cbrt( zeta_tol );
    const double t60 = t59 * zeta_tol;
    const double t61 = safe_math::cbrt( t57 );
    const double t63 = piecewise_functor_3( t58, t60, t61 * t57 );
    const double t64 = 0.1e1 - t56;
    const double t65 = t64 <= zeta_tol;
    const double t66 = safe_math::cbrt( t64 );
    const double t68 = piecewise_functor_3( t65, t60, t66 * t64 );
    const double t69 = t63 + t68 - 0.2e1;
    const double t70 = t53 * t69;
    const double t75 = t54 * t54;
    const double t76 = t75 * t75;
    const double t77 = t7 * t7;
    const double t78 = t77 * t77;
    const double t79 = 0.1e1 / t78;
    const double t84 = t74 * ( -t76 * t79 + 0.1e1 ) * t83;
    const double t88 = t12 + 0.353021e1 * t13 + 0.180578e2;
    const double t89 = 0.1e1 / t88;
    const double t93 = safe_math::log( t4 * t10 * t89 / 0.4e1 );
    const double t95 = t13 + 0.706042e1;
    const double t98 = safe_math::atan( 0.473092690956011283e1 / t95 );
    const double t100 = t27 + 0.325e0;
    const double t101 = t100 * t100;
    const double t103 = safe_math::log( t101 * t89 );
    const double t105 = 0.1554535e-1 * t93 + 0.52491393169780936218e-1 * t98 + 0.22478670955426118383e-2 * t103 - t21 - t26 - t32;
    const double t106 = t105 * t69;
    const double t107 = t74 * t76;
    const double t108 = t107 * t79;
    const double t111 = 0.1e1 / t8 / t7;
    const double t112 = t6 * t111;
    const double t117 = t15 * t15;
    const double t118 = 0.1e1 / t117;
    const double t119 = t9 * t118;
    const double t120 = t4 * t112;
    const double t121 = t120 / 0.12e2;
    const double t122 = 0.1e1 / t13;
    const double t123 = t122 * t1;
    const double t126 = t123 * t124 * t111;
    const double t128 = -t121 - 0.31062e0 * t126;
    const double t136 = ( -t4 * t112 * t16 / 0.12e2 - t116 * t119 * t128 / 0.4e1 ) * t133 * t135;
    const double t137 = t5 * t8;
    const double t138 = t137 * t15;
    const double t139 = t136 * t138;
    const double t140 = 0.10363566666666666667e-1 * t139;
    const double t141 = t22 * t22;
    const double t142 = 0.1e1 / t141;
    const double t144 = t142 * t122 * t1;
    const double t146 = 0.378469910464e2 * t142 + 0.1e1;
    const double t147 = 0.1e1 / t146;
    const double t150 = t144 * t124 * t111 * t147;
    const double t151 = 0.39765745675026770179e-1 * t150;
    const double t152 = t28 * t16;
    const double t153 = t152 * t122;
    const double t156 = t29 * t118;
    const double t158 = -t153 * t120 / 0.6e1 - t156 * t128;
    const double t159 = 0.1e1 / t29;
    const double t160 = t158 * t159;
    const double t161 = t160 * t15;
    const double t162 = 0.96902277115443742139e-3 * t161;
    const double t166 = t36 * t36;
    const double t167 = 0.1e1 / t166;
    const double t168 = t9 * t167;
    const double t170 = -t121 - 0.94255833333333333334e-1 * t126;
    const double t176 = ( -t4 * t112 * t37 / 0.12e2 - t116 * t168 * t170 / 0.4e1 ) * t133 * t135;
    const double t177 = t137 * t36;
    const double t180 = t42 * t42;
    const double t181 = 0.1e1 / t180;
    const double t183 = t181 * t122 * t1;
    const double t185 = 0.50738680655100000001e2 * t181 + 0.1e1;
    const double t186 = 0.1e1 / t185;
    const double t191 = t47 * t37;
    const double t192 = t191 * t122;
    const double t195 = t48 * t167;
    const double t197 = -t192 * t120 / 0.6e1 - t195 * t170;
    const double t198 = 0.1e1 / t48;
    const double t199 = t197 * t198;
    const double t203 = t34 * ( t176 * t177 / 0.3e1 + 0.37717812030896172975e0 * t183 * t124 * t111 * t186 + 0.41403379428206274608e-3 * t199 * t36 );
    const double t204 = t203 * t69;
    const double t205 = t204 * t84;
    const double t207 = 0.1e1 / t77;
    const double t208 = t54 * t207;
    const double t209 = t55 - t208;
    const double t212 = piecewise_functor_3( t58, 0.0, 0.4e1 / 0.3e1 * t61 * t209 );
    const double t213 = -t209;
    const double t216 = piecewise_functor_3( t65, 0.0, 0.4e1 / 0.3e1 * t66 * t213 );
    const double t217 = t212 + t216;
    const double t218 = t53 * t217;
    const double t219 = t218 * t84;
    const double t220 = t219 / 0.24e2;
    const double t221 = t75 * t54;
    const double t222 = t221 * t79;
    const double t223 = t78 * t7;
    const double t224 = 0.1e1 / t223;
    const double t225 = t76 * t224;
    const double t229 = t74 * ( -0.4e1 * t222 + 0.4e1 * t225 ) * t83;
    const double t230 = t70 * t229;
    const double t231 = t230 / 0.24e2;
    const double t235 = t88 * t88;
    const double t236 = 0.1e1 / t235;
    const double t237 = t9 * t236;
    const double t239 = -t121 - 0.58836833333333333333e0 * t126;
    const double t245 = ( -t4 * t112 * t89 / 0.12e2 - t116 * t237 * t239 / 0.4e1 ) * t133 * t135;
    const double t246 = t137 * t88;
    const double t249 = t95 * t95;
    const double t250 = 0.1e1 / t249;
    const double t252 = t250 * t122 * t1;
    const double t254 = 0.223816694236e2 * t250 + 0.1e1;
    const double t255 = 0.1e1 / t254;
    const double t260 = t100 * t89;
    const double t261 = t260 * t122;
    const double t264 = t101 * t236;
    const double t266 = -t261 * t120 / 0.6e1 - t264 * t239;
    const double t267 = 0.1e1 / t101;
    const double t268 = t266 * t267;
    const double t271 = 0.51817833333333333333e-2 * t245 * t246 + 0.41388824077869423261e-1 * t252 * t124 * t111 * t255 + 0.22478670955426118383e-2 * t268 * t88 - t140 - t151 - t162;
    const double t272 = t271 * t69;
    const double t273 = t272 * t108;
    const double t274 = t105 * t217;
    const double t275 = t274 * t108;
    const double t276 = t74 * t221;
    const double t277 = t276 * t79;
    const double t278 = t106 * t277;
    const double t280 = t107 * t224;
    const double t281 = t106 * t280;
    const double t285 = -t55 - t208;
    const double t288 = piecewise_functor_3( t58, 0.0, 0.4e1 / 0.3e1 * t61 * t285 );
    const double t289 = -t285;
    const double t292 = piecewise_functor_3( t65, 0.0, 0.4e1 / 0.3e1 * t66 * t289 );
    const double t293 = t288 + t292;
    const double t294 = t53 * t293;
    const double t295 = t294 * t84;
    const double t296 = t295 / 0.24e2;
    const double t300 = t74 * ( 0.4e1 * t222 + 0.4e1 * t225 ) * t83;
    const double t301 = t70 * t300;
    const double t302 = t301 / 0.24e2;
    const double t303 = t105 * t293;
    const double t304 = t303 * t108;
    const double t307 = 0.20727133333333333334e-1 * t139;
    const double t308 = 0.79531491350053540358e-1 * t150;
    const double t309 = 0.19380455423088748428e-2 * t161;
    const double t310 = t205 / 0.12e2;
    const double t313 = 0.2e1 * t273;
    const double t315 = 0.8e1 * t278;
    const double t316 = 0.8e1 * t281;
    const double t318 = 0.1e1 / t8 / t77;
    const double t319 = t6 * t318;
    const double t321 = t4 * t319 * t89;
    const double t323 = t111 * t236;
    const double t328 = 0.1e1 / t235 / t88;
    const double t329 = t9 * t328;
    const double t330 = t239 * t239;
    const double t334 = t4 * t319;
    const double t335 = t334 / 0.9e1;
    const double t337 = 0.1e1 / t13 / t11;
    const double t338 = t337 * t133;
    const double t341 = t8 * t8;
    const double t343 = 0.1e1 / t341 / t77;
    const double t345 = t338 * t340 * t343;
    const double t348 = t123 * t124 * t318;
    const double t350 = t335 - 0.39224555555555555555e0 * t345 + 0.7844911111111111111e0 * t348;
    const double t356 = ( t321 / 0.9e1 + t116 * t323 * t239 / 0.6e1 + t116 * t329 * t330 / 0.2e1 - t116 * t237 * t350 / 0.4e1 ) * t133 * t135;
    const double t360 = t5 / t341;
    const double t361 = t360 * t88;
    const double t364 = t137 * t239;
    const double t367 = t249 * t95;
    const double t368 = 0.1e1 / t367;
    const double t369 = t368 * t1;
    const double t370 = t369 * t3;
    const double t375 = t250 * t337 * t133;
    const double t384 = t249 * t249;
    const double t386 = 0.1e1 / t384 / t95;
    const double t387 = t386 * t1;
    const double t388 = t387 * t3;
    const double t389 = t254 * t254;
    const double t390 = 0.1e1 / t389;
    const double t395 = t100 * t236;
    const double t396 = t395 * t123;
    const double t397 = t111 * t239;
    const double t401 = t260 * t337;
    const double t403 = t5 * t343;
    const double t404 = t402 * t403;
    const double t409 = t101 * t328;
    const double t413 = t321 / 0.72e2 + t396 * t124 * t397 / 0.3e1 - t401 * t404 / 0.9e1 + 0.2e1 / 0.9e1 * t261 * t334 + 0.2e1 * t409 * t330 - t264 * t350;
    const double t414 = t413 * t267;
    const double t418 = 0.1e1 / t101 / t100;
    const double t419 = t266 * t418;
    const double t420 = t88 * t122;
    const double t421 = t419 * t420;
    const double t427 = t4 * t319 * t16;
    const double t429 = t111 * t118;
    const double t434 = 0.1e1 / t117 / t15;
    const double t435 = t9 * t434;
    const double t436 = t128 * t128;
    const double t442 = t335 - 0.20708e0 * t345 + 0.41416e0 * t348;
    const double t448 = ( t427 / 0.9e1 + t116 * t429 * t128 / 0.6e1 + t116 * t435 * t436 / 0.2e1 - t116 * t119 * t442 / 0.4e1 ) * t133 * t135;
    const double t449 = t448 * t138;
    const double t450 = 0.10363566666666666667e-1 * t449;
    const double t451 = t360 * t15;
    const double t452 = t136 * t451;
    const double t453 = 0.34545222222222222223e-2 * t452;
    const double t454 = t137 * t128;
    const double t455 = t136 * t454;
    const double t456 = 0.10363566666666666667e-1 * t455;
    const double t457 = t141 * t22;
    const double t458 = 0.1e1 / t457;
    const double t459 = t458 * t1;
    const double t460 = t459 * t3;
    const double t462 = t460 * t319 * t147;
    const double t463 = 0.13255248558342256726e-1 * t462;
    const double t465 = t142 * t337 * t133;
    const double t468 = t465 * t340 * t343 * t147;
    const double t469 = 0.26510497116684513453e-1 * t468;
    const double t472 = t144 * t124 * t318 * t147;
    const double t473 = 0.53020994233369026905e-1 * t472;
    const double t474 = t141 * t141;
    const double t476 = 0.1e1 / t474 / t22;
    const double t477 = t476 * t1;
    const double t478 = t477 * t3;
    const double t479 = t146 * t146;
    const double t480 = 0.1e1 / t479;
    const double t482 = t478 * t319 * t480;
    const double t483 = 0.50167127350538589834e0 * t482;
    const double t485 = t28 * t118;
    const double t486 = t485 * t123;
    const double t487 = t111 * t128;
    const double t491 = t152 * t337;
    const double t496 = t29 * t434;
    const double t500 = t427 / 0.72e2 + t486 * t124 * t487 / 0.3e1 - t491 * t404 / 0.9e1 + 0.2e1 / 0.9e1 * t153 * t334 + 0.2e1 * t496 * t436 - t156 * t442;
    const double t501 = t500 * t159;
    const double t502 = t501 * t15;
    const double t503 = 0.96902277115443742139e-3 * t502;
    const double t505 = 0.1e1 / t29 / t28;
    const double t506 = t158 * t505;
    const double t507 = t15 * t122;
    const double t508 = t506 * t507;
    const double t509 = t508 * t120;
    const double t510 = 0.1615037951924062369e-3 * t509;
    const double t511 = t160 * t128;
    const double t512 = 0.96902277115443742139e-3 * t511;
    const double t513 = 0.51817833333333333333e-2 * t356 * t246 + 0.17272611111111111111e-2 * t245 * t361 + 0.51817833333333333333e-2 * t245 * t364 + 0.13796274692623141087e-1 * t370 * t319 * t255 + 0.27592549385246282174e-1 * t375 * t340 * t343 * t255 - 0.55185098770492564348e-1 * t252 * t124 * t318 * t255 - 0.30878365944746984535e0 * t388 * t319 * t390 + 0.22478670955426118383e-2 * t414 * t88 + 0.37464451592376863972e-3 * t421 * t120 + 0.22478670955426118383e-2 * t268 * t239 - t450 - t453 - t456 - t463 - t469 + t473 + t483 - t503 - t510 - t512;
    const double t514 = t513 * t69;
    const double t515 = t514 * t108;
    const double t516 = t61 * t61;
    const double t517 = 0.1e1 / t516;
    const double t518 = t209 * t209;
    const double t521 = t77 * t7;
    const double t522 = 0.1e1 / t521;
    const double t523 = t54 * t522;
    const double t525 = -0.2e1 * t207 + 0.2e1 * t523;
    const double t529 = piecewise_functor_3( t58, 0.0, 0.4e1 / 0.9e1 * t517 * t518 + 0.4e1 / 0.3e1 * t61 * t525 );
    const double t530 = t66 * t66;
    const double t531 = 0.1e1 / t530;
    const double t532 = t213 * t213;
    const double t535 = -t525;
    const double t539 = piecewise_functor_3( t65, 0.0, 0.4e1 / 0.9e1 * t531 * t532 + 0.4e1 / 0.3e1 * t66 * t535 );
    const double t540 = t529 + t539;
    const double t541 = t105 * t540;
    const double t542 = t541 * t108;
    const double t543 = t53 * t540;
    const double t544 = t543 * t84;
    const double t545 = t544 / 0.24e2;
    const double t546 = t218 * t229;
    const double t547 = t546 / 0.12e2;
    const double t549 = 0.12e2 * t75 * t79;
    const double t551 = 0.32e2 * t221 * t224;
    const double t553 = 0.1e1 / t78 / t77;
    const double t555 = 0.2e2 * t76 * t553;
    const double t558 = t74 * ( -t549 + t551 - t555 ) * t83;
    const double t559 = t70 * t558;
    const double t560 = t559 / 0.24e2;
    const double t561 = t204 * t229;
    const double t562 = t561 / 0.12e2;
    const double t564 = t4 * t319 * t37;
    const double t566 = t111 * t167;
    const double t571 = 0.1e1 / t166 / t36;
    const double t572 = t9 * t571;
    const double t573 = t170 * t170;
    const double t579 = t335 - 0.62837222222222222223e-1 * t345 + 0.12567444444444444445e0 * t348;
    const double t585 = ( t564 / 0.9e1 + t116 * t566 * t170 / 0.6e1 + t116 * t572 * t573 / 0.2e1 - t116 * t168 * t579 / 0.4e1 ) * t133 * t135;
    const double t588 = t360 * t36;
    const double t591 = t137 * t170;
    const double t594 = t180 * t42;
    const double t596 = 0.1e1 / t594 * t1;
    const double t597 = t596 * t3;
    const double t602 = t181 * t337 * t133;
    const double t611 = t180 * t180;
    const double t613 = 0.1e1 / t611 / t42;
    const double t614 = t613 * t1;
    const double t615 = t614 * t3;
    const double t616 = t185 * t185;
    const double t617 = 0.1e1 / t616;
    const double t622 = t47 * t167;
    const double t623 = t622 * t123;
    const double t624 = t111 * t170;
    const double t628 = t191 * t337;
    const double t633 = t48 * t571;
    const double t637 = t564 / 0.72e2 + t623 * t124 * t624 / 0.3e1 - t628 * t404 / 0.9e1 + 0.2e1 / 0.9e1 * t192 * t334 + 0.2e1 * t633 * t573 - t195 * t579;
    const double t638 = t637 * t198;
    const double t642 = 0.1e1 / t48 / t47;
    const double t643 = t197 * t642;
    const double t644 = t36 * t122;
    const double t645 = t643 * t644;
    const double t651 = t34 * ( t585 * t177 / 0.3e1 + t176 * t588 / 0.9e1 + t176 * t591 / 0.3e1 + 0.12572604010298724325e0 * t597 * t319 * t186 + 0.2514520802059744865e0 * t602 * t340 * t343 * t186 - 0.502904160411948973e0 * t183 * t124 * t318 * t186 - 0.63791733988157656508e1 * t615 * t319 * t617 + 0.41403379428206274608e-3 * t638 * t36 + 0.69005632380343791013e-4 * t645 * t120 + 0.41403379428206274608e-3 * t199 * t170 );
    const double t652 = t651 * t69;
    const double t653 = t652 * t84;
    const double t654 = t653 / 0.24e2;
    const double t655 = t203 * t217;
    const double t656 = t655 * t84;
    const double t657 = t656 / 0.12e2;
    const double t658 = t515 + t542 - t545 - t547 - t560 - t562 + t453 - t483 - t654 - t657 + t450 + t456 + t463;
    const double t659 = t272 * t277;
    const double t660 = 0.8e1 * t659;
    const double t661 = t272 * t280;
    const double t662 = 0.8e1 * t661;
    const double t663 = t274 * t277;
    const double t664 = 0.8e1 * t663;
    const double t665 = t274 * t280;
    const double t666 = 0.8e1 * t665;
    const double t667 = t74 * t75;
    const double t668 = t667 * t79;
    const double t669 = t106 * t668;
    const double t670 = 0.12e2 * t669;
    const double t671 = t276 * t224;
    const double t672 = t106 * t671;
    const double t673 = 0.32e2 * t672;
    const double t674 = t107 * t553;
    const double t675 = t106 * t674;
    const double t676 = 0.2e2 * t675;
    const double t677 = t271 * t217;
    const double t678 = t677 * t108;
    const double t679 = 0.2e1 * t678;
    const double t680 = t503 + t512 + t510 + t469 - t473 + t660 - t662 + t664 - t666 + t670 - t673 + t676 + t679;
    const double t683 = t203 * t293;
    const double t684 = t683 * t84;
    const double t686 = t517 * t285;
    const double t689 = t61 * t54;
    const double t693 = piecewise_functor_3( t58, 0.0, 0.4e1 / 0.9e1 * t686 * t209 + 0.8e1 / 0.3e1 * t689 * t522 );
    const double t694 = t531 * t289;
    const double t697 = t66 * t54;
    const double t701 = piecewise_functor_3( t65, 0.0, 0.4e1 / 0.9e1 * t694 * t213 - 0.8e1 / 0.3e1 * t697 * t522 );
    const double t702 = t693 + t701;
    const double t703 = t53 * t702;
    const double t704 = t703 * t84;
    const double t706 = t294 * t229;
    const double t708 = t204 * t300;
    const double t710 = t218 * t300;
    const double t714 = t74 * ( t549 - t555 ) * t83;
    const double t715 = t70 * t714;
    const double t719 = t515 - t684 / 0.24e2 - t704 / 0.24e2 - t706 / 0.24e2 - t708 / 0.24e2 - t710 / 0.24e2 - t715 / 0.24e2 - t561 / 0.24e2 + t453 - t483 - t654 - t656 / 0.24e2 + t450 + t456 + t463;
    const double t720 = t303 * t277;
    const double t722 = t303 * t280;
    const double t724 = t105 * t702;
    const double t725 = t724 * t108;
    const double t726 = t271 * t293;
    const double t727 = t726 * t108;
    const double t730 = t503 + t512 + t510 + 0.4e1 * t720 - 0.4e1 * t722 + t469 - t473 + t725 + t727 - t662 - 0.4e1 * t663 - 0.4e1 * t665 - t670 + t676 + t678;
    const double t738 = t74 * ( -t549 - t551 - t555 ) * t83;
    const double t739 = t70 * t738;
    const double t740 = t739 / 0.24e2;
    const double t741 = t285 * t285;
    const double t745 = 0.2e1 * t207 + 0.2e1 * t523;
    const double t749 = piecewise_functor_3( t58, 0.0, 0.4e1 / 0.9e1 * t517 * t741 + 0.4e1 / 0.3e1 * t61 * t745 );
    const double t750 = t289 * t289;
    const double t753 = -t745;
    const double t757 = piecewise_functor_3( t65, 0.0, 0.4e1 / 0.9e1 * t531 * t750 + 0.4e1 / 0.3e1 * t66 * t753 );
    const double t758 = t749 + t757;
    const double t759 = t53 * t758;
    const double t760 = t759 * t84;
    const double t761 = t760 / 0.24e2;
    const double t762 = t294 * t300;
    const double t763 = t762 / 0.12e2;
    const double t764 = t684 / 0.12e2;
    const double t765 = t708 / 0.12e2;
    const double t766 = t515 - t740 - t761 - t763 - t764 - t765 + t453 - t483 - t654 + t450 + t456 + t463 + t503;
    const double t767 = t105 * t758;
    const double t768 = t767 * t108;
    const double t769 = 0.8e1 * t720;
    const double t770 = 0.8e1 * t722;
    const double t771 = 0.2e1 * t727;
    const double t772 = t512 + t510 + t768 - t769 - t770 + t469 - t473 + t771 - t660 - t662 + t670 + t673 + t676;


    v2rho2_aa = t307 + t308 + t309 - t310 - t219 / 0.12e2 - t230 / 0.12e2 + t313 + 0.2e1 * t275 + t315 - t316 + t7 * ( t658 + t680 );
    v2rho2_ab = t307 + t308 + t309 - t310 - t220 - t231 + t313 + t275 - t316 - t296 - t302 + t304 + t7 * ( t719 + t730 );
    v2rho2_bb = t307 + t308 + t309 - t310 - t295 / 0.12e2 - t301 / 0.12e2 + t313 + 0.2e1 * t304 - t315 - t316 + t7 * ( t766 + t772 );

  }

  BUILTIN_KERNEL_EVAL_RETURN
    eval_vxc_fxc_polar_impl( double rho_a, double rho_b, double& vrho_a, double& vrho_b, double& v2rho2_aa, double& v2rho2_ab, double& v2rho2_bb ) {

    constexpr double t1 = constants::m_cbrt_3;
    constexpr double t3 = constants::m_cbrt_one_ov_pi;
    constexpr double t5 = constants::m_cbrt_4;
    constexpr double t33 = constants::m_pi_sq;
    constexpr double t71 = constants::m_cbrt_2;
    constexpr double t4 = t1 * t3;
    constexpr double t6 = t5 * t5;
    constexpr double t34 = 0.1e1 / t33;
    constexpr double t72 = t71 - 0.1e1;
    constexpr double t74 = 0.1e1 / t72 / 0.2e1;
    constexpr double t83 = 0.9e1 * t72;
    constexpr double t116 = t4 * t6;
    constexpr double t124 = t3 * t6;
    constexpr double t133 = t1 * t1;
    constexpr double t135 = 0.1e1 / t3;
    constexpr double t339 = t3 * t3;
    constexpr double t340 = t339 * t5;
    constexpr double t402 = t133 * t339;


    const double t7 = rho_a + rho_b;
    const double t8 = safe_math::cbrt( t7 );
    const double t9 = 0.1e1 / t8;
    const double t10 = t6 * t9;
    const double t11 = t4 * t10;
    const double t12 = t11 / 0.4e1;
    const double t13 = safe_math::sqrt( t11 );
    const double t15 = t12 + 0.186372e1 * t13 + 0.129352e2;
    const double t16 = 0.1e1 / t15;
    const double t20 = safe_math::log( t4 * t10 * t16 / 0.4e1 );
    const double t21 = 0.310907e-1 * t20;
    const double t22 = t13 + 0.372744e1;
    const double t25 = safe_math::atan( 0.61519908197590802322e1 / t22 );
    const double t26 = 0.38783294878113014393e-1 * t25;
    const double t27 = t13 / 0.2e1;
    const double t28 = t27 + 0.10498e0;
    const double t29 = t28 * t28;
    const double t31 = safe_math::log( t29 * t16 );
    const double t32 = 0.96902277115443742139e-3 * t31;
    const double t36 = t12 + 0.565535e0 * t13 + 0.130045e2;
    const double t37 = 0.1e1 / t36;
    const double t41 = safe_math::log( t4 * t10 * t37 / 0.4e1 );
    const double t42 = t13 + 0.113107e1;
    const double t45 = safe_math::atan( 0.71231089178181179908e1 / t42 );
    const double t47 = t27 + 0.47584e-2;
    const double t48 = t47 * t47;
    const double t50 = safe_math::log( t48 * t37 );
    const double t53 = t34 * ( t41 + 0.317708004743941464e0 * t45 + 0.41403379428206274608e-3 * t50 );
    const double t54 = rho_a - rho_b;
    const double t55 = 0.1e1 / t7;
    const double t56 = t54 * t55;
    const double t57 = 0.1e1 + t56;
    const double t58 = t57 <= zeta_tol;
    const double t59 = safe_math::cbrt( zeta_tol );
    const double t60 = t59 * zeta_tol;
    const double t61 = safe_math::cbrt( t57 );
    const double t63 = piecewise_functor_3( t58, t60, t61 * t57 );
    const double t64 = 0.1e1 - t56;
    const double t65 = t64 <= zeta_tol;
    const double t66 = safe_math::cbrt( t64 );
    const double t68 = piecewise_functor_3( t65, t60, t66 * t64 );
    const double t69 = t63 + t68 - 0.2e1;
    const double t70 = t53 * t69;
    const double t75 = t54 * t54;
    const double t76 = t75 * t75;
    const double t77 = t7 * t7;
    const double t78 = t77 * t77;
    const double t79 = 0.1e1 / t78;
    const double t84 = t74 * ( -t76 * t79 + 0.1e1 ) * t83;
    const double t86 = t70 * t84 / 0.24e2;
    const double t88 = t12 + 0.353021e1 * t13 + 0.180578e2;
    const double t89 = 0.1e1 / t88;
    const double t93 = safe_math::log( t4 * t10 * t89 / 0.4e1 );
    const double t95 = t13 + 0.706042e1;
    const double t98 = safe_math::atan( 0.473092690956011283e1 / t95 );
    const double t100 = t27 + 0.325e0;
    const double t101 = t100 * t100;
    const double t103 = safe_math::log( t101 * t89 );
    const double t105 = 0.1554535e-1 * t93 + 0.52491393169780936218e-1 * t98 + 0.22478670955426118383e-2 * t103 - t21 - t26 - t32;
    const double t106 = t105 * t69;
    const double t107 = t74 * t76;
    const double t108 = t107 * t79;
    const double t109 = t106 * t108;
    const double t111 = 0.1e1 / t8 / t7;
    const double t112 = t6 * t111;
    const double t117 = t15 * t15;
    const double t118 = 0.1e1 / t117;
    const double t119 = t9 * t118;
    const double t120 = t4 * t112;
    const double t121 = t120 / 0.12e2;
    const double t122 = 0.1e1 / t13;
    const double t123 = t122 * t1;
    const double t126 = t123 * t124 * t111;
    const double t128 = -t121 - 0.31062e0 * t126;
    const double t136 = ( -t4 * t112 * t16 / 0.12e2 - t116 * t119 * t128 / 0.4e1 ) * t133 * t135;
    const double t137 = t5 * t8;
    const double t138 = t137 * t15;
    const double t139 = t136 * t138;
    const double t140 = 0.10363566666666666667e-1 * t139;
    const double t141 = t22 * t22;
    const double t142 = 0.1e1 / t141;
    const double t144 = t142 * t122 * t1;
    const double t146 = 0.378469910464e2 * t142 + 0.1e1;
    const double t147 = 0.1e1 / t146;
    const double t150 = t144 * t124 * t111 * t147;
    const double t151 = 0.39765745675026770179e-1 * t150;
    const double t152 = t28 * t16;
    const double t153 = t152 * t122;
    const double t156 = t29 * t118;
    const double t158 = -t153 * t120 / 0.6e1 - t156 * t128;
    const double t159 = 0.1e1 / t29;
    const double t160 = t158 * t159;
    const double t161 = t160 * t15;
    const double t162 = 0.96902277115443742139e-3 * t161;
    const double t166 = t36 * t36;
    const double t167 = 0.1e1 / t166;
    const double t168 = t9 * t167;
    const double t170 = -t121 - 0.94255833333333333334e-1 * t126;
    const double t176 = ( -t4 * t112 * t37 / 0.12e2 - t116 * t168 * t170 / 0.4e1 ) * t133 * t135;
    const double t177 = t137 * t36;
    const double t180 = t42 * t42;
    const double t181 = 0.1e1 / t180;
    const double t183 = t181 * t122 * t1;
    const double t185 = 0.50738680655100000001e2 * t181 + 0.1e1;
    const double t186 = 0.1e1 / t185;
    const double t191 = t47 * t37;
    const double t192 = t191 * t122;
    const double t195 = t48 * t167;
    const double t197 = -t192 * t120 / 0.6e1 - t195 * t170;
    const double t198 = 0.1e1 / t48;
    const double t199 = t197 * t198;
    const double t203 = t34 * ( t176 * t177 / 0.3e1 + 0.37717812030896172975e0 * t183 * t124 * t111 * t186 + 0.41403379428206274608e-3 * t199 * t36 );
    const double t204 = t203 * t69;
    const double t205 = t204 * t84;
    const double t206 = t205 / 0.24e2;
    const double t207 = 0.1e1 / t77;
    const double t208 = t54 * t207;
    const double t209 = t55 - t208;
    const double t212 = piecewise_functor_3( t58, 0.0, 0.4e1 / 0.3e1 * t61 * t209 );
    const double t213 = -t209;
    const double t216 = piecewise_functor_3( t65, 0.0, 0.4e1 / 0.3e1 * t66 * t213 );
    const double t217 = t212 + t216;
    const double t218 = t53 * t217;
    const double t219 = t218 * t84;
    const double t220 = t219 / 0.24e2;
    const double t221 = t75 * t54;
    const double t222 = t221 * t79;
    const double t223 = t78 * t7;
    const double t224 = 0.1e1 / t223;
    const double t225 = t76 * t224;
    const double t229 = t74 * ( -0.4e1 * t222 + 0.4e1 * t225 ) * t83;
    const double t230 = t70 * t229;
    const double t231 = t230 / 0.24e2;
    const double t235 = t88 * t88;
    const double t236 = 0.1e1 / t235;
    const double t237 = t9 * t236;
    const double t239 = -t121 - 0.58836833333333333333e0 * t126;
    const double t245 = ( -t4 * t112 * t89 / 0.12e2 - t116 * t237 * t239 / 0.4e1 ) * t133 * t135;
    const double t246 = t137 * t88;
    const double t249 = t95 * t95;
    const double t250 = 0.1e1 / t249;
    const double t252 = t250 * t122 * t1;
    const double t254 = 0.223816694236e2 * t250 + 0.1e1;
    const double t255 = 0.1e1 / t254;
    const double t260 = t100 * t89;
    const double t261 = t260 * t122;
    const double t264 = t101 * t236;
    const double t266 = -t261 * t120 / 0.6e1 - t264 * t239;
    const double t267 = 0.1e1 / t101;
    const double t268 = t266 * t267;
    const double t271 = 0.51817833333333333333e-2 * t245 * t246 + 0.41388824077869423261e-1 * t252 * t124 * t111 * t255 + 0.22478670955426118383e-2 * t268 * t88 - t140 - t151 - t162;
    const double t272 = t271 * t69;
    const double t273 = t272 * t108;
    const double t274 = t105 * t217;
    const double t275 = t274 * t108;
    const double t276 = t74 * t221;
    const double t277 = t276 * t79;
    const double t278 = t106 * t277;
    const double t279 = 0.4e1 * t278;
    const double t280 = t107 * t224;
    const double t281 = t106 * t280;
    const double t282 = 0.4e1 * t281;
    const double t285 = -t55 - t208;
    const double t288 = piecewise_functor_3( t58, 0.0, 0.4e1 / 0.3e1 * t61 * t285 );
    const double t289 = -t285;
    const double t292 = piecewise_functor_3( t65, 0.0, 0.4e1 / 0.3e1 * t66 * t289 );
    const double t293 = t288 + t292;
    const double t294 = t53 * t293;
    const double t295 = t294 * t84;
    const double t296 = t295 / 0.24e2;
    const double t300 = t74 * ( 0.4e1 * t222 + 0.4e1 * t225 ) * t83;
    const double t301 = t70 * t300;
    const double t302 = t301 / 0.24e2;
    const double t303 = t105 * t293;
    const double t304 = t303 * t108;
    const double t307 = 0.20727133333333333334e-1 * t139;
    const double t308 = 0.79531491350053540358e-1 * t150;
    const double t309 = 0.19380455423088748428e-2 * t161;
    const double t310 = t205 / 0.12e2;
    const double t313 = 0.2e1 * t273;
    const double t315 = 0.8e1 * t278;
    const double t316 = 0.8e1 * t281;
    const double t318 = 0.1e1 / t8 / t77;
    const double t319 = t6 * t318;
    const double t321 = t4 * t319 * t89;
    const double t323 = t111 * t236;
    const double t328 = 0.1e1 / t235 / t88;
    const double t329 = t9 * t328;
    const double t330 = t239 * t239;
    const double t334 = t4 * t319;
    const double t335 = t334 / 0.9e1;
    const double t337 = 0.1e1 / t13 / t11;
    const double t338 = t337 * t133;
    const double t341 = t8 * t8;
    const double t343 = 0.1e1 / t341 / t77;
    const double t345 = t338 * t340 * t343;
    const double t348 = t123 * t124 * t318;
    const double t350 = t335 - 0.39224555555555555555e0 * t345 + 0.7844911111111111111e0 * t348;
    const double t356 = ( t321 / 0.9e1 + t116 * t323 * t239 / 0.6e1 + t116 * t329 * t330 / 0.2e1 - t116 * t237 * t350 / 0.4e1 ) * t133 * t135;
    const double t360 = t5 / t341;
    const double t361 = t360 * t88;
    const double t364 = t137 * t239;
    const double t367 = t249 * t95;
    const double t368 = 0.1e1 / t367;
    const double t369 = t368 * t1;
    const double t370 = t369 * t3;
    const double t375 = t250 * t337 * t133;
    const double t384 = t249 * t249;
    const double t386 = 0.1e1 / t384 / t95;
    const double t387 = t386 * t1;
    const double t388 = t387 * t3;
    const double t389 = t254 * t254;
    const double t390 = 0.1e1 / t389;
    const double t395 = t100 * t236;
    const double t396 = t395 * t123;
    const double t397 = t111 * t239;
    const double t401 = t260 * t337;
    const double t403 = t5 * t343;
    const double t404 = t402 * t403;
    const double t409 = t101 * t328;
    const double t413 = t321 / 0.72e2 + t396 * t124 * t397 / 0.3e1 - t401 * t404 / 0.9e1 + 0.2e1 / 0.9e1 * t261 * t334 + 0.2e1 * t409 * t330 - t264 * t350;
    const double t414 = t413 * t267;
    const double t418 = 0.1e1 / t101 / t100;
    const double t419 = t266 * t418;
    const double t420 = t88 * t122;
    const double t421 = t419 * t420;
    const double t427 = t4 * t319 * t16;
    const double t429 = t111 * t118;
    const double t434 = 0.1e1 / t117 / t15;
    const double t435 = t9 * t434;
    const double t436 = t128 * t128;
    const double t442 = t335 - 0.20708e0 * t345 + 0.41416e0 * t348;
    const double t448 = ( t427 / 0.9e1 + t116 * t429 * t128 / 0.6e1 + t116 * t435 * t436 / 0.2e1 - t116 * t119 * t442 / 0.4e1 ) * t133 * t135;
    const double t449 = t448 * t138;
    const double t450 = 0.10363566666666666667e-1 * t449;
    const double t451 = t360 * t15;
    const double t452 = t136 * t451;
    const double t453 = 0.34545222222222222223e-2 * t452;
    const double t454 = t137 * t128;
    const double t455 = t136 * t454;
    const double t456 = 0.10363566666666666667e-1 * t455;
    const double t457 = t141 * t22;
    const double t458 = 0.1e1 / t457;
    const double t459 = t458 * t1;
    const double t460 = t459 * t3;
    const double t462 = t460 * t319 * t147;
    const double t463 = 0.13255248558342256726e-1 * t462;
    const double t465 = t142 * t337 * t133;
    const double t468 = t465 * t340 * t343 * t147;
    const double t469 = 0.26510497116684513453e-1 * t468;
    const double t472 = t144 * t124 * t318 * t147;
    const double t473 = 0.53020994233369026905e-1 * t472;
    const double t474 = t141 * t141;
    const double t476 = 0.1e1 / t474 / t22;
    const double t477 = t476 * t1;
    const double t478 = t477 * t3;
    const double t479 = t146 * t146;
    const double t480 = 0.1e1 / t479;
    const double t482 = t478 * t319 * t480;
    const double t483 = 0.50167127350538589834e0 * t482;
    const double t485 = t28 * t118;
    const double t486 = t485 * t123;
    const double t487 = t111 * t128;
    const double t491 = t152 * t337;
    const double t496 = t29 * t434;
    const double t500 = t427 / 0.72e2 + t486 * t124 * t487 / 0.3e1 - t491 * t404 / 0.9e1 + 0.2e1 / 0.9e1 * t153 * t334 + 0.2e1 * t496 * t436 - t156 * t442;
    const double t501 = t500 * t159;
    const double t502 = t501 * t15;
    const double t503 = 0.96902277115443742139e-3 * t502;
    const double t505 = 0.1e1 / t29 / t28;
    const double t506 = t158 * t505;
    const double t507 = t15 * t122;
    const double t508 = t506 * t507;
    const double t509 = t508 * t120;
    const double t510 = 0.1615037951924062369e-3 * t509;
    const double t511 = t160 * t128;
    const double t512 = 0.96902277115443742139e-3 * t511;
    const double t513 = 0.51817833333333333333e-2 * t356 * t246 + 0.17272611111111111111e-2 * t245 * t361 + 0.51817833333333333333e-2 * t245 * t364 + 0.13796274692623141087e-1 * t370 * t319 * t255 + 0.27592549385246282174e-1 * t375 * t340 * t343 * t255 - 0.55185098770492564348e-1 * t252 * t124 * t318 * t255 - 0.30878365944746984535e0 * t388 * t319 * t390 + 0.22478670955426118383e-2 * t414 * t88 + 0.37464451592376863972e-3 * t421 * t120 + 0.22478670955426118383e-2 * t268 * t239 - t450 - t453 - t456 - t463 - t469 + t473 + t483 - t503 - t510 - t512;
    const double t514 = t513 * t69;
    const double t515 = t514 * t108;
    const double t516 = t61 * t61;
    const double t517 = 0.1e1 / t516;
    const double t518 = t209 * t209;
    const double t521 = t77 * t7;
    const double t522 = 0.1e1 / t521;
    const double t523 = t54 * t522;
    const double t525 = -0.2e1 * t207 + 0.2e1 * t523;
    const double t529 = piecewise_functor_3( t58, 0.0, 0.4e1 / 0.9e1 * t517 * t518 + 0.4e1 / 0.3e1 * t61 * t525 );
    const double t530 = t66 * t66;
    const double t531 = 0.1e1 / t530;
    const double t532 = t213 * t213;
    const double t535 = -t525;
    const double t539 = piecewise_functor_3( t65, 0.0, 0.4e1 / 0.9e1 * t531 * t532 + 0.4e1 / 0.3e1 * t66 * t535 );
    const double t540 = t529 + t539;
    const double t541 = t105 * t540;
    const double t542 = t541 * t108;
    const double t543 = t53 * t540;
    const double t544 = t543 * t84;
    const double t545 = t544 / 0.24e2;
    const double t546 = t218 * t229;
    const double t547 = t546 / 0.12e2;
    const double t549 = 0.12e2 * t75 * t79;
    const double t551 = 0.32e2 * t221 * t224;
    const double t553 = 0.1e1 / t78 / t77;
    const double t555 = 0.2e2 * t76 * t553;
    const double t558 = t74 * ( -t549 + t551 - t555 ) * t83;
    const double t559 = t70 * t558;
    const double t560 = t559 / 0.24e2;
    const double t561 = t204 * t229;
    const double t562 = t561 / 0.12e2;
    const double t564 = t4 * t319 * t37;
    const double t566 = t111 * t167;
    const double t571 = 0.1e1 / t166 / t36;
    const double t572 = t9 * t571;
    const double t573 = t170 * t170;
    const double t579 = t335 - 0.62837222222222222223e-1 * t345 + 0.12567444444444444445e0 * t348;
    const double t585 = ( t564 / 0.9e1 + t116 * t566 * t170 / 0.6e1 + t116 * t572 * t573 / 0.2e1 - t116 * t168 * t579 / 0.4e1 ) * t133 * t135;
    const double t588 = t360 * t36;
    const double t591 = t137 * t170;
    const double t594 = t180 * t42;
    const double t596 = 0.1e1 / t594 * t1;
    const double t597 = t596 * t3;
    const double t602 = t181 * t337 * t133;
    const double t611 = t180 * t180;
    const double t613 = 0.1e1 / t611 / t42;
    const double t614 = t613 * t1;
    const double t615 = t614 * t3;
    const double t616 = t185 * t185;
    const double t617 = 0.1e1 / t616;
    const double t622 = t47 * t167;
    const double t623 = t622 * t123;
    const double t624 = t111 * t170;
    const double t628 = t191 * t337;
    const double t633 = t48 * t571;
    const double t637 = t564 / 0.72e2 + t623 * t124 * t624 / 0.3e1 - t628 * t404 / 0.9e1 + 0.2e1 / 0.9e1 * t192 * t334 + 0.2e1 * t633 * t573 - t195 * t579;
    const double t638 = t637 * t198;
    const double t642 = 0.1e1 / t48 / t47;
    const double t643 = t197 * t642;
    const double t644 = t36 * t122;
    const double t645 = t643 * t644;
    const double t651 = t34 * ( t585 * t177 / 0.3e1 + t176 * t588 / 0.9e1 + t176 * t591 / 0.3e1 + 0.12572604010298724325e0 * t597 * t319 * t186 + 0.2514520802059744865e0 * t602 * t340 * t343 * t186 - 0.502904160411948973e0 * t183 * t124 * t318 * t186 - 0.63791733988157656508e1 * t615 * t319 * t617 + 0.41403379428206274608e-3 * t638 * t36 + 0.69005632380343791013e-4 * t645 * t120 + 0.41403379428206274608e-3 * t199 * t170 );
    const double t652 = t651 * t69;
    const double t653 = t652 * t84;
    const double t654 = t653 / 0.24e2;
    const double t655 = t203 * t217;
    const double t656 = t655 * t84;
    const double t657 = t656 / 0.12e2;
    const double t658 = t515 + t542 - t545 - t547 - t560 - t562 + t453 - t483 - t654 - t657 + t450 + t456 + t463;
    const double t659 = t272 * t277;
    const double t660 = 0.8e1 * t659;
    const double t661 = t272 * t280;
    const double t662 = 0.8e1 * t661;
    const double t663 = t274 * t277;
    const double t664 = 0.8e1 * t663;
    const double t665 = t274 * t280;
    const double t666 = 0.8e1 * t665;
    const double t667 = t74 * t75;
    const double t668 = t667 * t79;
    const double t669 = t106 * t668;
    const double t670 = 0.12e2 * t669;
    const double t671 = t276 * t224;
    const double t672 = t106 * t671;
    const double t673 = 0.32e2 * t672;
    const double t674 = t107 * t553;
    const double t675 = t106 * t674;
    const double t676 = 0.2e2 * t675;
    const double t677 = t271 * t217;
    const double t678 = t677 * t108;
    const double t679 = 0.2e1 * t678;
    const double t680 = t503 + t512 + t510 + t469 - t473 + t660 - t662 + t664 - t666 + t670 - t673 + t676 + t679;
    const double t683 = t203 * t293;
    const double t684 = t683 * t84;
    const double t686 = t517 * t285;
    const double t689 = t61 * t54;
    const double t693 = piecewise_functor_3( t58, 0.0, 0.4e1 / 0.9e1 * t686 * t209 + 0.8e1 / 0.3e1 * t689 * t522 );
    const double t694 = t531 * t289;
    const double t697 = t66 * t54;
    const double t701 = piecewise_functor_3( t65, 0.0, 0.4e1 / 0.9e1 * t694 * t213 - 0.8e1 / 0.3e1 * t697 * t522 );
    const double t702 = t693 + t701;
    const double t703 = t53 * t702;
    const double t704 = t703 * t84;
    const double t706 = t294 * t229;
    const double t708 = t204 * t300;
    const double t710 = t218 * t300;
    const double t714 = t74 * ( t549 - t555 ) * t83;
    const double t715 = t70 * t714;
    const double t719 = t515 - t684 / 0.24e2 - t704 / 0.24e2 - t706 / 0.24e2 - t708 / 0.24e2 - t710 / 0.24e2 - t715 / 0.24e2 - t561 / 0.24e2 + t453 - t483 - t654 - t656 / 0.24e2 + t450 + t456 + t463;
    const double t720 = t303 * t277;
    const double t722 = t303 * t280;
    const double t724 = t105 * t702;
    const double t725 = t724 * t108;
    const double t726 = t271 * t293;
    const double t727 = t726 * t108;
    const double t730 = t503 + t512 + t510 + 0.4e1 * t720 - 0.4e1 * t722 + t469 - t473 + t725 + t727 - t662 - 0.4e1 * t663 - 0.4e1 * t665 - t670 + t676 + t678;
    const double t738 = t74 * ( -t549 - t551 - t555 ) * t83;
    const double t739 = t70 * t738;
    const double t740 = t739 / 0.24e2;
    const double t741 = t285 * t285;
    const double t745 = 0.2e1 * t207 + 0.2e1 * t523;
    const double t749 = piecewise_functor_3( t58, 0.0, 0.4e1 / 0.9e1 * t517 * t741 + 0.4e1 / 0.3e1 * t61 * t745 );
    const double t750 = t289 * t289;
    const double t753 = -t745;
    const double t757 = piecewise_functor_3( t65, 0.0, 0.4e1 / 0.9e1 * t531 * t750 + 0.4e1 / 0.3e1 * t66 * t753 );
    const double t758 = t749 + t757;
    const double t759 = t53 * t758;
    const double t760 = t759 * t84;
    const double t761 = t760 / 0.24e2;
    const double t762 = t294 * t300;
    const double t763 = t762 / 0.12e2;
    const double t764 = t684 / 0.12e2;
    const double t765 = t708 / 0.12e2;
    const double t766 = t515 - t740 - t761 - t763 - t764 - t765 + t453 - t483 - t654 + t450 + t456 + t463 + t503;
    const double t767 = t105 * t758;
    const double t768 = t767 * t108;
    const double t769 = 0.8e1 * t720;
    const double t770 = 0.8e1 * t722;
    const double t771 = 0.2e1 * t727;
    const double t772 = t512 + t510 + t768 - t769 - t770 + t469 - t473 + t771 - t660 - t662 + t670 + t673 + t676;


    vrho_a = t21 + t26 + t32 - t86 + t109 + t7 * ( t140 + t151 + t162 - t206 - t220 - t231 + t273 + t275 + t279 - t282 );
    vrho_b = t21 + t26 + t32 - t86 + t109 + t7 * ( t140 + t151 + t162 - t206 - t296 - t302 + t273 + t304 - t279 - t282 );
    v2rho2_aa = t307 + t308 + t309 - t310 - t219 / 0.12e2 - t230 / 0.12e2 + t313 + 0.2e1 * t275 + t315 - t316 + t7 * ( t658 + t680 );
    v2rho2_ab = t307 + t308 + t309 - t310 - t220 - t231 + t313 + t275 - t316 - t296 - t302 + t304 + t7 * ( t719 + t730 );
    v2rho2_bb = t307 + t308 + t309 - t310 - t295 / 0.12e2 - t301 / 0.12e2 + t313 + 0.2e1 * t304 - t315 - t316 + t7 * ( t766 + t772 );

  }


};

struct BuiltinVWN : detail::BuiltinKernelImpl< BuiltinVWN > {

  BuiltinVWN( Spin p ) :
    detail::BuiltinKernelImpl< BuiltinVWN >(p) { }
  
  virtual ~BuiltinVWN() = default;

};



} // namespace ExchCXX
