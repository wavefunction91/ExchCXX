/**
 * ExchCXX 
 *
 * Copyright (c) Microsoft Corporation.
 *
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 
 * (1) Redistributions of source code must retain the above copyright notice,
 * this list of conditions and the following disclaimer.
 * 
 * (2) Redistributions in binary form must reproduce the above copyright
 * notice, this list of conditions and the following disclaimer in the
 * documentation and/or other materials provided with the distribution.
 * 
 * (3) Neither the name of the University of California, Lawrence Berkeley
 * National Laboratory, U.S. Dept. of Energy nor the names of its contributors
 * may be used to endorse or promote products derived from this software
 * without specific prior written permission.
 * 
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 * 
 * You are under no obligation whatsoever to provide any bug fixes, patches,
 * or upgrades to the features, functionality or performance of the source
 * code ("Enhancements") to anyone; however, if you choose to make your
 * Enhancements available either publicly, or directly to Lawrence Berkeley
 * National Laboratory, without imposing a separate written license agreement
 * for such Enhancements, then you hereby grant the following license: a
 * non-exclusive, royalty-free perpetual license to install, use, modify,
 * prepare derivative works, incorporate into other computer software,
 * distribute, and sublicense such enhancements or derivative works thereof,
 * in binary and source code form.
 */


#pragma once
#include <cmath>

#include <exchcxx/impl/builtin/fwd.hpp>
#include <exchcxx/impl/builtin/constants.hpp>
#include <exchcxx/impl/builtin/kernel_type.hpp>
#include <exchcxx/impl/builtin/util.hpp>

#include <exchcxx/impl/builtin/kernels/screening_interface.hpp>



namespace ExchCXX {

template <>
struct kernel_traits< BuiltinP86_C > :
  public gga_screening_interface< BuiltinP86_C > {

  static constexpr bool is_lda  = false;
  static constexpr bool is_gga  = true;
  static constexpr bool is_mgga = false;
  static constexpr bool needs_laplacian = false;
  static constexpr bool is_kedf = false;
  static constexpr bool is_epc  = false;

  static constexpr double dens_tol  = 1e-15;
  static constexpr double zeta_tol  = 1e-15;
  static constexpr double sigma_tol  = 1.0000000000000027e-20;
  static constexpr double tau_tol = is_kedf ? 0.0 : 1e-20;


  static constexpr double malpha = 0.023266;
  static constexpr double mbeta = 7.389e-6;
  static constexpr double mgamma = 8.723;
  static constexpr double mdelta = 0.472;
  static constexpr double aa = 0.001667;
  static constexpr double bb = 0.002568;
  static constexpr double ftilde = 0.19195;

  BUILTIN_KERNEL_EVAL_RETURN
    eval_exc_unpolar_impl( double rho, double sigma, double& eps ) {

    constexpr double t1 = constants::m_cbrt_3;
    constexpr double t3 = constants::m_cbrt_one_ov_pi;
    constexpr double t5 = constants::m_cbrt_4;
    constexpr double t45 = constants::m_cbrt_2;
    constexpr double t4 = t1 * t3;
    constexpr double t6 = t5 * t5;
    constexpr double t54 = aa + bb;
    constexpr double t55 = ftilde * t54;
    constexpr double t56 = malpha * t1;
    constexpr double t57 = t3 * t6;
    constexpr double t61 = t1 * t1;
    constexpr double t62 = mbeta * t61;
    constexpr double t63 = t3 * t3;
    constexpr double t64 = t63 * t5;
    constexpr double t71 = mgamma * t1;
    constexpr double t74 = mdelta * t61;


    const double t7 = safe_math::cbrt( rho );
    const double t8 = 0.1e1 / t7;
    const double t9 = t6 * t8;
    const double t10 = t4 * t9;
    const double t11 = t10 / 0.4e1;
    const double t12 = 0.1e1 <= t11;
    const double t13 = safe_math::sqrt( t10 );
    const double t16 = 0.1e1 + 0.52645e0 * t13 + 0.8335e-1 * t10;
    const double t19 = safe_math::log( t11 );
    const double t22 = t4 * t9 * t19;
    const double t26 = piecewise_functor_3( t12, -0.1423e0 / t16, 0.311e-1 * t19 - 0.48e-1 + 0.5e-3 * t22 - 0.29e-2 * t10 );
    const double t29 = 0.1e1 + 0.69905e0 * t13 + 0.65275e-1 * t10;
    const double t36 = piecewise_functor_3( t12, -0.843e-1 / t29, 0.1555e-1 * t19 - 0.269e-1 + 0.175e-3 * t22 - 0.12e-2 * t10 );
    const double t38 = 0.1e1 <= zeta_tol;
    const double t39 = safe_math::cbrt( zeta_tol );
    const double t41 = piecewise_functor_3( t38, t39 * zeta_tol, 1.0 );
    const double t43 = 0.2e1 * t41 - 0.2e1;
    const double t48 = 0.1e1 / ( 0.2e1 * t45 - 0.2e1 );
    const double t49 = ( t36 - t26 ) * t43 * t48;
    const double t50 = rho * rho;
    const double t52 = 0.1e1 / t7 / t50;
    const double t53 = sigma * t52;
    const double t58 = t57 * t8;
    const double t65 = t7 * t7;
    const double t66 = 0.1e1 / t65;
    const double t67 = t64 * t66;
    const double t70 = bb + t56 * t58 / 0.4e1 + t62 * t67 / 0.4e1;
    const double t77 = 0.1e1 / rho;
    const double t80 = 0.1e1 + t71 * t58 / 0.4e1 + t74 * t67 / 0.4e1 + 0.23873241463784300365e4 * mbeta * t77;
    const double t81 = 0.1e1 / t80;
    const double t83 = t70 * t81 + aa;
    const double t84 = 0.1e1 / t83;
    const double t85 = safe_math::sqrt( sigma );
    const double t86 = t84 * t85;
    const double t87 = safe_math::pow( rho, 0.1e1 / 0.6e1 );
    const double t89 = 0.1e1 / t87 / rho;
    const double t92 = safe_math::exp( -t55 * t86 * t89 );
    const double t94 = t39 * t39;
    const double t96 = piecewise_functor_3( t38, t94 * zeta_tol, 1.0 );
    const double t97 = safe_math::sqrt( t96 );
    const double t98 = 0.1e1 / t97;
    const double t99 = t92 * t83 * t98;
    const double t100 = t53 * t99;


    eps = t26 + t49 + t100;

  }

  BUILTIN_KERNEL_EVAL_RETURN
    eval_exc_vxc_unpolar_impl( double rho, double sigma, double& eps, double& vrho, double& vsigma ) {

    constexpr double t1 = constants::m_cbrt_3;
    constexpr double t3 = constants::m_cbrt_one_ov_pi;
    constexpr double t5 = constants::m_cbrt_4;
    constexpr double t45 = constants::m_cbrt_2;
    constexpr double t4 = t1 * t3;
    constexpr double t6 = t5 * t5;
    constexpr double t54 = aa + bb;
    constexpr double t55 = ftilde * t54;
    constexpr double t56 = malpha * t1;
    constexpr double t57 = t3 * t6;
    constexpr double t61 = t1 * t1;
    constexpr double t62 = mbeta * t61;
    constexpr double t63 = t3 * t3;
    constexpr double t64 = t63 * t5;
    constexpr double t71 = mgamma * t1;
    constexpr double t74 = mdelta * t61;


    const double t7 = safe_math::cbrt( rho );
    const double t8 = 0.1e1 / t7;
    const double t9 = t6 * t8;
    const double t10 = t4 * t9;
    const double t11 = t10 / 0.4e1;
    const double t12 = 0.1e1 <= t11;
    const double t13 = safe_math::sqrt( t10 );
    const double t16 = 0.1e1 + 0.52645e0 * t13 + 0.8335e-1 * t10;
    const double t19 = safe_math::log( t11 );
    const double t22 = t4 * t9 * t19;
    const double t26 = piecewise_functor_3( t12, -0.1423e0 / t16, 0.311e-1 * t19 - 0.48e-1 + 0.5e-3 * t22 - 0.29e-2 * t10 );
    const double t29 = 0.1e1 + 0.69905e0 * t13 + 0.65275e-1 * t10;
    const double t36 = piecewise_functor_3( t12, -0.843e-1 / t29, 0.1555e-1 * t19 - 0.269e-1 + 0.175e-3 * t22 - 0.12e-2 * t10 );
    const double t38 = 0.1e1 <= zeta_tol;
    const double t39 = safe_math::cbrt( zeta_tol );
    const double t41 = piecewise_functor_3( t38, t39 * zeta_tol, 1.0 );
    const double t43 = 0.2e1 * t41 - 0.2e1;
    const double t48 = 0.1e1 / ( 0.2e1 * t45 - 0.2e1 );
    const double t49 = ( t36 - t26 ) * t43 * t48;
    const double t50 = rho * rho;
    const double t52 = 0.1e1 / t7 / t50;
    const double t53 = sigma * t52;
    const double t58 = t57 * t8;
    const double t65 = t7 * t7;
    const double t66 = 0.1e1 / t65;
    const double t67 = t64 * t66;
    const double t70 = bb + t56 * t58 / 0.4e1 + t62 * t67 / 0.4e1;
    const double t77 = 0.1e1 / rho;
    const double t80 = 0.1e1 + t71 * t58 / 0.4e1 + t74 * t67 / 0.4e1 + 0.23873241463784300365e4 * mbeta * t77;
    const double t81 = 0.1e1 / t80;
    const double t83 = t70 * t81 + aa;
    const double t84 = 0.1e1 / t83;
    const double t85 = safe_math::sqrt( sigma );
    const double t86 = t84 * t85;
    const double t87 = safe_math::pow( rho, 0.1e1 / 0.6e1 );
    const double t89 = 0.1e1 / t87 / rho;
    const double t92 = safe_math::exp( -t55 * t86 * t89 );
    const double t94 = t39 * t39;
    const double t96 = piecewise_functor_3( t38, t94 * zeta_tol, 1.0 );
    const double t97 = safe_math::sqrt( t96 );
    const double t98 = 0.1e1 / t97;
    const double t99 = t92 * t83 * t98;
    const double t100 = t53 * t99;
    const double t101 = t16 * t16;
    const double t102 = 0.1e1 / t101;
    const double t104 = 0.1e1 / t13 * t1;
    const double t106 = 0.1e1 / t7 / rho;
    const double t107 = t57 * t106;
    const double t108 = t104 * t107;
    const double t110 = t6 * t106;
    const double t111 = t4 * t110;
    const double t113 = -0.87741666666666666667e-1 * t108 - 0.27783333333333333333e-1 * t111;
    const double t118 = t4 * t110 * t19;
    const double t122 = piecewise_functor_3( t12, 0.1423e0 * t102 * t113, -0.10366666666666666667e-1 * t77 - 0.16666666666666666667e-3 * t118 + 0.8e-3 * t111 );
    const double t123 = t29 * t29;
    const double t124 = 0.1e1 / t123;
    const double t127 = -0.11650833333333333333e0 * t108 - 0.21758333333333333333e-1 * t111;
    const double t134 = piecewise_functor_3( t12, 0.843e-1 * t124 * t127, -0.51833333333333333333e-2 * t77 - 0.58333333333333333333e-4 * t118 + 0.34166666666666666667e-3 * t111 );
    const double t137 = ( t134 - t122 ) * t43 * t48;
    const double t138 = t50 * rho;
    const double t140 = 0.1e1 / t7 / t138;
    const double t141 = sigma * t140;
    const double t142 = t141 * t99;
    const double t144 = t83 * t83;
    const double t145 = 0.1e1 / t144;
    const double t146 = t55 * t145;
    const double t147 = t85 * t89;
    const double t152 = t64 / t65 / rho;
    const double t155 = -t56 * t107 / 0.12e2 - t62 * t152 / 0.6e1;
    const double t157 = t80 * t80;
    const double t158 = 0.1e1 / t157;
    const double t159 = t70 * t158;
    const double t164 = 0.1e1 / t50;
    const double t167 = -t71 * t107 / 0.12e2 - t74 * t152 / 0.6e1 - 0.23873241463784300365e4 * mbeta * t164;
    const double t169 = t155 * t81 - t159 * t167;
    const double t173 = 0.1e1 / t87 / t50;
    const double t177 = t146 * t147 * t169 + 0.7e1 / 0.6e1 * t55 * t86 * t173;
    const double t178 = t53 * t177;
    const double t179 = t178 * t99;
    const double t181 = t92 * t169 * t98;
    const double t182 = t53 * t181;
    const double t185 = t52 * t92;
    const double t186 = t83 * t98;
    const double t187 = t185 * t186;
    const double t188 = safe_math::sqrt( rho );
    const double t190 = 0.1e1 / t188 / t138;
    const double t191 = t85 * t190;
    const double t192 = t191 * ftilde;
    const double t194 = t54 * t92 * t98;
    const double t196 = t192 * t194 / 0.2e1;


    eps = t26 + t49 + t100;
    vrho = t26 + t49 + t100 + rho * ( t122 + t137 - 0.7e1 / 0.3e1 * t142 + t179 + t182 );
    vsigma = rho * ( t187 - t196 );

  }

  BUILTIN_KERNEL_EVAL_RETURN
    eval_fxc_unpolar_impl( double rho, double sigma, double& v2rho2, double& v2rhosigma, double& v2sigma2 ) {

    constexpr double t1 = constants::m_cbrt_3;
    constexpr double t3 = constants::m_cbrt_one_ov_pi;
    constexpr double t5 = constants::m_cbrt_4;
    constexpr double t45 = constants::m_cbrt_2;
    constexpr double t4 = t1 * t3;
    constexpr double t6 = t5 * t5;
    constexpr double t54 = aa + bb;
    constexpr double t55 = ftilde * t54;
    constexpr double t56 = malpha * t1;
    constexpr double t57 = t3 * t6;
    constexpr double t61 = t1 * t1;
    constexpr double t62 = mbeta * t61;
    constexpr double t63 = t3 * t3;
    constexpr double t64 = t63 * t5;
    constexpr double t71 = mgamma * t1;
    constexpr double t74 = mdelta * t61;
    constexpr double t349 = ftilde * ftilde;
    constexpr double t351 = t54 * t54;


    const double t7 = safe_math::cbrt( rho );
    const double t8 = 0.1e1 / t7;
    const double t9 = t6 * t8;
    const double t10 = t4 * t9;
    const double t11 = t10 / 0.4e1;
    const double t12 = 0.1e1 <= t11;
    const double t13 = safe_math::sqrt( t10 );
    const double t16 = 0.1e1 + 0.52645e0 * t13 + 0.8335e-1 * t10;
    const double t19 = safe_math::log( t11 );
    const double t29 = 0.1e1 + 0.69905e0 * t13 + 0.65275e-1 * t10;
    const double t38 = 0.1e1 <= zeta_tol;
    const double t39 = safe_math::cbrt( zeta_tol );
    const double t41 = piecewise_functor_3( t38, t39 * zeta_tol, 1.0 );
    const double t43 = 0.2e1 * t41 - 0.2e1;
    const double t48 = 0.1e1 / ( 0.2e1 * t45 - 0.2e1 );
    const double t50 = rho * rho;
    const double t52 = 0.1e1 / t7 / t50;
    const double t53 = sigma * t52;
    const double t58 = t57 * t8;
    const double t65 = t7 * t7;
    const double t66 = 0.1e1 / t65;
    const double t67 = t64 * t66;
    const double t70 = bb + t56 * t58 / 0.4e1 + t62 * t67 / 0.4e1;
    const double t77 = 0.1e1 / rho;
    const double t80 = 0.1e1 + t71 * t58 / 0.4e1 + t74 * t67 / 0.4e1 + 0.23873241463784300365e4 * mbeta * t77;
    const double t81 = 0.1e1 / t80;
    const double t83 = t70 * t81 + aa;
    const double t84 = 0.1e1 / t83;
    const double t85 = safe_math::sqrt( sigma );
    const double t86 = t84 * t85;
    const double t87 = safe_math::pow( rho, 0.1e1 / 0.6e1 );
    const double t89 = 0.1e1 / t87 / rho;
    const double t92 = safe_math::exp( -t55 * t86 * t89 );
    const double t94 = t39 * t39;
    const double t96 = piecewise_functor_3( t38, t94 * zeta_tol, 1.0 );
    const double t97 = safe_math::sqrt( t96 );
    const double t98 = 0.1e1 / t97;
    const double t99 = t92 * t83 * t98;
    const double t101 = t16 * t16;
    const double t102 = 0.1e1 / t101;
    const double t104 = 0.1e1 / t13 * t1;
    const double t106 = 0.1e1 / t7 / rho;
    const double t107 = t57 * t106;
    const double t108 = t104 * t107;
    const double t110 = t6 * t106;
    const double t111 = t4 * t110;
    const double t113 = -0.87741666666666666667e-1 * t108 - 0.27783333333333333333e-1 * t111;
    const double t118 = t4 * t110 * t19;
    const double t122 = piecewise_functor_3( t12, 0.1423e0 * t102 * t113, -0.10366666666666666667e-1 * t77 - 0.16666666666666666667e-3 * t118 + 0.8e-3 * t111 );
    const double t123 = t29 * t29;
    const double t124 = 0.1e1 / t123;
    const double t127 = -0.11650833333333333333e0 * t108 - 0.21758333333333333333e-1 * t111;
    const double t134 = piecewise_functor_3( t12, 0.843e-1 * t124 * t127, -0.51833333333333333333e-2 * t77 - 0.58333333333333333333e-4 * t118 + 0.34166666666666666667e-3 * t111 );
    const double t137 = ( t134 - t122 ) * t43 * t48;
    const double t138 = t50 * rho;
    const double t140 = 0.1e1 / t7 / t138;
    const double t141 = sigma * t140;
    const double t142 = t141 * t99;
    const double t144 = t83 * t83;
    const double t145 = 0.1e1 / t144;
    const double t146 = t55 * t145;
    const double t147 = t85 * t89;
    const double t152 = t64 / t65 / rho;
    const double t155 = -t56 * t107 / 0.12e2 - t62 * t152 / 0.6e1;
    const double t157 = t80 * t80;
    const double t158 = 0.1e1 / t157;
    const double t159 = t70 * t158;
    const double t164 = 0.1e1 / t50;
    const double t167 = -t71 * t107 / 0.12e2 - t74 * t152 / 0.6e1 - 0.23873241463784300365e4 * mbeta * t164;
    const double t169 = t155 * t81 - t159 * t167;
    const double t173 = 0.1e1 / t87 / t50;
    const double t177 = t146 * t147 * t169 + 0.7e1 / 0.6e1 * t55 * t86 * t173;
    const double t178 = t53 * t177;
    const double t179 = t178 * t99;
    const double t181 = t92 * t169 * t98;
    const double t182 = t53 * t181;
    const double t185 = t52 * t92;
    const double t186 = t83 * t98;
    const double t187 = t185 * t186;
    const double t188 = safe_math::sqrt( rho );
    const double t190 = 0.1e1 / t188 / t138;
    const double t191 = t85 * t190;
    const double t192 = t191 * ftilde;
    const double t194 = t54 * t92 * t98;
    const double t196 = t192 * t194 / 0.2e1;
    const double t204 = 0.1e1 / t101 / t16;
    const double t205 = t113 * t113;
    const double t210 = 0.1e1 / t13 / t10 * t61;
    const double t213 = t64 / t65 / t50;
    const double t214 = t210 * t213;
    const double t216 = t57 * t52;
    const double t217 = t104 * t216;
    const double t219 = t6 * t52;
    const double t220 = t4 * t219;
    const double t222 = -0.58494444444444444445e-1 * t214 + 0.11698888888888888889e0 * t217 + 0.37044444444444444444e-1 * t220;
    const double t228 = t4 * t219 * t19;
    const double t232 = piecewise_functor_3( t12, -0.2846e0 * t204 * t205 + 0.1423e0 * t102 * t222, 0.10366666666666666667e-1 * t164 + 0.22222222222222222223e-3 * t228 - 0.10111111111111111111e-2 * t220 );
    const double t234 = 0.1e1 / t123 / t29;
    const double t235 = t127 * t127;
    const double t241 = -0.7767222222222222222e-1 * t214 + 0.15534444444444444444e0 * t217 + 0.29011111111111111111e-1 * t220;
    const double t249 = piecewise_functor_3( t12, -0.1686e0 * t234 * t235 + 0.843e-1 * t124 * t241, 0.51833333333333333333e-2 * t164 + 0.77777777777777777777e-4 * t228 - 0.43611111111111111112e-3 * t220 );
    const double t252 = ( t249 - t232 ) * t43 * t48;
    const double t253 = t50 * t50;
    const double t255 = 0.1e1 / t7 / t253;
    const double t256 = sigma * t255;
    const double t257 = t256 * t99;
    const double t259 = t141 * t177;
    const double t260 = t259 * t99;
    const double t262 = t141 * t181;
    const double t265 = 0.1e1 / t144 / t83;
    const double t266 = t55 * t265;
    const double t267 = t169 * t169;
    const double t271 = t85 * t173;
    const double t279 = t56 * t216 / 0.9e1 + 0.5e1 / 0.18e2 * t62 * t213;
    const double t281 = t155 * t158;
    const double t285 = 0.1e1 / t157 / t80;
    const double t286 = t70 * t285;
    const double t287 = t167 * t167;
    const double t294 = 0.1e1 / t138;
    const double t297 = t71 * t216 / 0.9e1 + 0.5e1 / 0.18e2 * t74 * t213 + 0.4774648292756860073e4 * mbeta * t294;
    const double t299 = -t159 * t297 - 0.2e1 * t281 * t167 + t279 * t81 + 0.2e1 * t286 * t287;
    const double t303 = 0.1e1 / t87 / t138;
    const double t307 = -0.2e1 * t266 * t147 * t267 - 0.7e1 / 0.3e1 * t146 * t271 * t169 + t146 * t147 * t299 - 0.91e2 / 0.36e2 * t55 * t86 * t303;
    const double t308 = t53 * t307;
    const double t309 = t308 * t99;
    const double t310 = t177 * t177;
    const double t311 = t53 * t310;
    const double t312 = t311 * t99;
    const double t313 = t178 * t181;
    const double t316 = t92 * t299 * t98;
    const double t317 = t53 * t316;
    const double t320 = t140 * t92;
    const double t321 = t320 * t186;
    const double t323 = t52 * t177;
    const double t324 = t323 * t99;
    const double t325 = t169 * t98;
    const double t326 = t185 * t325;
    const double t328 = 0.1e1 / t188 / t253;
    const double t330 = t85 * t328 * ftilde;
    const double t331 = t330 * t194;
    const double t334 = t92 * t98;
    const double t335 = t54 * t177 * t334;
    const double t336 = t192 * t335;
    const double t341 = t190 * ftilde * t54;
    const double t342 = 0.1e1 / t85;
    const double t343 = t342 * t92;
    const double t344 = t343 * t98;
    const double t346 = 0.3e1 / 0.4e1 * t341 * t344;
    const double t348 = 0.1e1 / t65 / t253;
    const double t350 = t348 * t349;
    const double t352 = t350 * t351;
    const double t354 = t84 * t92 * t98;
    const double t356 = t352 * t354 / 0.4e1;


    v2rho2 = 0.2e1 * t122 + 0.2e1 * t137 - 0.14e2 / 0.3e1 * t142 + 0.2e1 * t179 + 0.2e1 * t182 + rho * ( t232 + t252 + 0.7e2 / 0.9e1 * t257 - 0.14e2 / 0.3e1 * t260 - 0.14e2 / 0.3e1 * t262 + t309 + t312 + 0.2e1 * t313 + t317 );
    v2rhosigma = t187 - t196 + rho * ( -0.7e1 / 0.3e1 * t321 + t324 + t326 + 0.7e1 / 0.4e1 * t331 - t336 / 0.2e1 );
    v2sigma2 = rho * ( -t346 + t356 );

  }

  BUILTIN_KERNEL_EVAL_RETURN
    eval_vxc_fxc_unpolar_impl( double rho, double sigma, double& vrho, double& vsigma, double& v2rho2, double& v2rhosigma, double& v2sigma2 ) {

    constexpr double t1 = constants::m_cbrt_3;
    constexpr double t3 = constants::m_cbrt_one_ov_pi;
    constexpr double t5 = constants::m_cbrt_4;
    constexpr double t45 = constants::m_cbrt_2;
    constexpr double t4 = t1 * t3;
    constexpr double t6 = t5 * t5;
    constexpr double t54 = aa + bb;
    constexpr double t55 = ftilde * t54;
    constexpr double t56 = malpha * t1;
    constexpr double t57 = t3 * t6;
    constexpr double t61 = t1 * t1;
    constexpr double t62 = mbeta * t61;
    constexpr double t63 = t3 * t3;
    constexpr double t64 = t63 * t5;
    constexpr double t71 = mgamma * t1;
    constexpr double t74 = mdelta * t61;
    constexpr double t349 = ftilde * ftilde;
    constexpr double t351 = t54 * t54;


    const double t7 = safe_math::cbrt( rho );
    const double t8 = 0.1e1 / t7;
    const double t9 = t6 * t8;
    const double t10 = t4 * t9;
    const double t11 = t10 / 0.4e1;
    const double t12 = 0.1e1 <= t11;
    const double t13 = safe_math::sqrt( t10 );
    const double t16 = 0.1e1 + 0.52645e0 * t13 + 0.8335e-1 * t10;
    const double t19 = safe_math::log( t11 );
    const double t22 = t4 * t9 * t19;
    const double t26 = piecewise_functor_3( t12, -0.1423e0 / t16, 0.311e-1 * t19 - 0.48e-1 + 0.5e-3 * t22 - 0.29e-2 * t10 );
    const double t29 = 0.1e1 + 0.69905e0 * t13 + 0.65275e-1 * t10;
    const double t36 = piecewise_functor_3( t12, -0.843e-1 / t29, 0.1555e-1 * t19 - 0.269e-1 + 0.175e-3 * t22 - 0.12e-2 * t10 );
    const double t38 = 0.1e1 <= zeta_tol;
    const double t39 = safe_math::cbrt( zeta_tol );
    const double t41 = piecewise_functor_3( t38, t39 * zeta_tol, 1.0 );
    const double t43 = 0.2e1 * t41 - 0.2e1;
    const double t48 = 0.1e1 / ( 0.2e1 * t45 - 0.2e1 );
    const double t49 = ( t36 - t26 ) * t43 * t48;
    const double t50 = rho * rho;
    const double t52 = 0.1e1 / t7 / t50;
    const double t53 = sigma * t52;
    const double t58 = t57 * t8;
    const double t65 = t7 * t7;
    const double t66 = 0.1e1 / t65;
    const double t67 = t64 * t66;
    const double t70 = bb + t56 * t58 / 0.4e1 + t62 * t67 / 0.4e1;
    const double t77 = 0.1e1 / rho;
    const double t80 = 0.1e1 + t71 * t58 / 0.4e1 + t74 * t67 / 0.4e1 + 0.23873241463784300365e4 * mbeta * t77;
    const double t81 = 0.1e1 / t80;
    const double t83 = t70 * t81 + aa;
    const double t84 = 0.1e1 / t83;
    const double t85 = safe_math::sqrt( sigma );
    const double t86 = t84 * t85;
    const double t87 = safe_math::pow( rho, 0.1e1 / 0.6e1 );
    const double t89 = 0.1e1 / t87 / rho;
    const double t92 = safe_math::exp( -t55 * t86 * t89 );
    const double t94 = t39 * t39;
    const double t96 = piecewise_functor_3( t38, t94 * zeta_tol, 1.0 );
    const double t97 = safe_math::sqrt( t96 );
    const double t98 = 0.1e1 / t97;
    const double t99 = t92 * t83 * t98;
    const double t100 = t53 * t99;
    const double t101 = t16 * t16;
    const double t102 = 0.1e1 / t101;
    const double t104 = 0.1e1 / t13 * t1;
    const double t106 = 0.1e1 / t7 / rho;
    const double t107 = t57 * t106;
    const double t108 = t104 * t107;
    const double t110 = t6 * t106;
    const double t111 = t4 * t110;
    const double t113 = -0.87741666666666666667e-1 * t108 - 0.27783333333333333333e-1 * t111;
    const double t118 = t4 * t110 * t19;
    const double t122 = piecewise_functor_3( t12, 0.1423e0 * t102 * t113, -0.10366666666666666667e-1 * t77 - 0.16666666666666666667e-3 * t118 + 0.8e-3 * t111 );
    const double t123 = t29 * t29;
    const double t124 = 0.1e1 / t123;
    const double t127 = -0.11650833333333333333e0 * t108 - 0.21758333333333333333e-1 * t111;
    const double t134 = piecewise_functor_3( t12, 0.843e-1 * t124 * t127, -0.51833333333333333333e-2 * t77 - 0.58333333333333333333e-4 * t118 + 0.34166666666666666667e-3 * t111 );
    const double t137 = ( t134 - t122 ) * t43 * t48;
    const double t138 = t50 * rho;
    const double t140 = 0.1e1 / t7 / t138;
    const double t141 = sigma * t140;
    const double t142 = t141 * t99;
    const double t144 = t83 * t83;
    const double t145 = 0.1e1 / t144;
    const double t146 = t55 * t145;
    const double t147 = t85 * t89;
    const double t152 = t64 / t65 / rho;
    const double t155 = -t56 * t107 / 0.12e2 - t62 * t152 / 0.6e1;
    const double t157 = t80 * t80;
    const double t158 = 0.1e1 / t157;
    const double t159 = t70 * t158;
    const double t164 = 0.1e1 / t50;
    const double t167 = -t71 * t107 / 0.12e2 - t74 * t152 / 0.6e1 - 0.23873241463784300365e4 * mbeta * t164;
    const double t169 = t155 * t81 - t159 * t167;
    const double t173 = 0.1e1 / t87 / t50;
    const double t177 = t146 * t147 * t169 + 0.7e1 / 0.6e1 * t55 * t86 * t173;
    const double t178 = t53 * t177;
    const double t179 = t178 * t99;
    const double t181 = t92 * t169 * t98;
    const double t182 = t53 * t181;
    const double t185 = t52 * t92;
    const double t186 = t83 * t98;
    const double t187 = t185 * t186;
    const double t188 = safe_math::sqrt( rho );
    const double t190 = 0.1e1 / t188 / t138;
    const double t191 = t85 * t190;
    const double t192 = t191 * ftilde;
    const double t194 = t54 * t92 * t98;
    const double t196 = t192 * t194 / 0.2e1;
    const double t204 = 0.1e1 / t101 / t16;
    const double t205 = t113 * t113;
    const double t210 = 0.1e1 / t13 / t10 * t61;
    const double t213 = t64 / t65 / t50;
    const double t214 = t210 * t213;
    const double t216 = t57 * t52;
    const double t217 = t104 * t216;
    const double t219 = t6 * t52;
    const double t220 = t4 * t219;
    const double t222 = -0.58494444444444444445e-1 * t214 + 0.11698888888888888889e0 * t217 + 0.37044444444444444444e-1 * t220;
    const double t228 = t4 * t219 * t19;
    const double t232 = piecewise_functor_3( t12, -0.2846e0 * t204 * t205 + 0.1423e0 * t102 * t222, 0.10366666666666666667e-1 * t164 + 0.22222222222222222223e-3 * t228 - 0.10111111111111111111e-2 * t220 );
    const double t234 = 0.1e1 / t123 / t29;
    const double t235 = t127 * t127;
    const double t241 = -0.7767222222222222222e-1 * t214 + 0.15534444444444444444e0 * t217 + 0.29011111111111111111e-1 * t220;
    const double t249 = piecewise_functor_3( t12, -0.1686e0 * t234 * t235 + 0.843e-1 * t124 * t241, 0.51833333333333333333e-2 * t164 + 0.77777777777777777777e-4 * t228 - 0.43611111111111111112e-3 * t220 );
    const double t252 = ( t249 - t232 ) * t43 * t48;
    const double t253 = t50 * t50;
    const double t255 = 0.1e1 / t7 / t253;
    const double t256 = sigma * t255;
    const double t257 = t256 * t99;
    const double t259 = t141 * t177;
    const double t260 = t259 * t99;
    const double t262 = t141 * t181;
    const double t265 = 0.1e1 / t144 / t83;
    const double t266 = t55 * t265;
    const double t267 = t169 * t169;
    const double t271 = t85 * t173;
    const double t279 = t56 * t216 / 0.9e1 + 0.5e1 / 0.18e2 * t62 * t213;
    const double t281 = t155 * t158;
    const double t285 = 0.1e1 / t157 / t80;
    const double t286 = t70 * t285;
    const double t287 = t167 * t167;
    const double t294 = 0.1e1 / t138;
    const double t297 = t71 * t216 / 0.9e1 + 0.5e1 / 0.18e2 * t74 * t213 + 0.4774648292756860073e4 * mbeta * t294;
    const double t299 = -t159 * t297 - 0.2e1 * t281 * t167 + t279 * t81 + 0.2e1 * t286 * t287;
    const double t303 = 0.1e1 / t87 / t138;
    const double t307 = -0.2e1 * t266 * t147 * t267 - 0.7e1 / 0.3e1 * t146 * t271 * t169 + t146 * t147 * t299 - 0.91e2 / 0.36e2 * t55 * t86 * t303;
    const double t308 = t53 * t307;
    const double t309 = t308 * t99;
    const double t310 = t177 * t177;
    const double t311 = t53 * t310;
    const double t312 = t311 * t99;
    const double t313 = t178 * t181;
    const double t316 = t92 * t299 * t98;
    const double t317 = t53 * t316;
    const double t320 = t140 * t92;
    const double t321 = t320 * t186;
    const double t323 = t52 * t177;
    const double t324 = t323 * t99;
    const double t325 = t169 * t98;
    const double t326 = t185 * t325;
    const double t328 = 0.1e1 / t188 / t253;
    const double t330 = t85 * t328 * ftilde;
    const double t331 = t330 * t194;
    const double t334 = t92 * t98;
    const double t335 = t54 * t177 * t334;
    const double t336 = t192 * t335;
    const double t341 = t190 * ftilde * t54;
    const double t342 = 0.1e1 / t85;
    const double t343 = t342 * t92;
    const double t344 = t343 * t98;
    const double t346 = 0.3e1 / 0.4e1 * t341 * t344;
    const double t348 = 0.1e1 / t65 / t253;
    const double t350 = t348 * t349;
    const double t352 = t350 * t351;
    const double t354 = t84 * t92 * t98;
    const double t356 = t352 * t354 / 0.4e1;


    vrho = t26 + t49 + t100 + rho * ( t122 + t137 - 0.7e1 / 0.3e1 * t142 + t179 + t182 );
    vsigma = rho * ( t187 - t196 );
    v2rho2 = 0.2e1 * t122 + 0.2e1 * t137 - 0.14e2 / 0.3e1 * t142 + 0.2e1 * t179 + 0.2e1 * t182 + rho * ( t232 + t252 + 0.7e2 / 0.9e1 * t257 - 0.14e2 / 0.3e1 * t260 - 0.14e2 / 0.3e1 * t262 + t309 + t312 + 0.2e1 * t313 + t317 );
    v2rhosigma = t187 - t196 + rho * ( -0.7e1 / 0.3e1 * t321 + t324 + t326 + 0.7e1 / 0.4e1 * t331 - t336 / 0.2e1 );
    v2sigma2 = rho * ( -t346 + t356 );

  }

  BUILTIN_KERNEL_EVAL_RETURN
    eval_exc_polar_impl( double rho_a, double rho_b, double sigma_aa, double sigma_ab, double sigma_bb, double& eps ) {

    constexpr double t1 = constants::m_cbrt_3;
    constexpr double t3 = constants::m_cbrt_one_ov_pi;
    constexpr double t5 = constants::m_cbrt_4;
    constexpr double t56 = constants::m_cbrt_2;
    constexpr double t4 = t1 * t3;
    constexpr double t6 = t5 * t5;
    constexpr double t67 = aa + bb;
    constexpr double t68 = ftilde * t67;
    constexpr double t69 = malpha * t1;
    constexpr double t70 = t3 * t6;
    constexpr double t74 = t1 * t1;
    constexpr double t75 = mbeta * t74;
    constexpr double t76 = t3 * t3;
    constexpr double t77 = t76 * t5;
    constexpr double t84 = mgamma * t1;
    constexpr double t87 = mdelta * t74;


    const double t7 = rho_a + rho_b;
    const double t8 = safe_math::cbrt( t7 );
    const double t9 = 0.1e1 / t8;
    const double t10 = t6 * t9;
    const double t11 = t4 * t10;
    const double t12 = t11 / 0.4e1;
    const double t13 = 0.1e1 <= t12;
    const double t14 = safe_math::sqrt( t11 );
    const double t17 = 0.1e1 + 0.52645e0 * t14 + 0.8335e-1 * t11;
    const double t20 = safe_math::log( t12 );
    const double t23 = t4 * t10 * t20;
    const double t27 = piecewise_functor_3( t13, -0.1423e0 / t17, 0.311e-1 * t20 - 0.48e-1 + 0.5e-3 * t23 - 0.29e-2 * t11 );
    const double t30 = 0.1e1 + 0.69905e0 * t14 + 0.65275e-1 * t11;
    const double t37 = piecewise_functor_3( t13, -0.843e-1 / t30, 0.1555e-1 * t20 - 0.269e-1 + 0.175e-3 * t23 - 0.12e-2 * t11 );
    const double t38 = t37 - t27;
    const double t39 = rho_a - rho_b;
    const double t40 = 0.1e1 / t7;
    const double t41 = t39 * t40;
    const double t42 = 0.1e1 + t41;
    const double t43 = t42 <= zeta_tol;
    const double t44 = safe_math::cbrt( zeta_tol );
    const double t45 = t44 * zeta_tol;
    const double t46 = safe_math::cbrt( t42 );
    const double t47 = t46 * t42;
    const double t48 = piecewise_functor_3( t43, t45, t47 );
    const double t49 = 0.1e1 - t41;
    const double t50 = t49 <= zeta_tol;
    const double t51 = safe_math::cbrt( t49 );
    const double t52 = t51 * t49;
    const double t53 = piecewise_functor_3( t50, t45, t52 );
    const double t54 = t48 + t53 - 0.2e1;
    const double t59 = 0.1e1 / ( 0.2e1 * t56 - 0.2e1 );
    const double t60 = t38 * t54 * t59;
    const double t62 = sigma_aa + 0.2e1 * sigma_ab + sigma_bb;
    const double t63 = t7 * t7;
    const double t65 = 0.1e1 / t8 / t63;
    const double t66 = t62 * t65;
    const double t71 = t70 * t9;
    const double t78 = t8 * t8;
    const double t79 = 0.1e1 / t78;
    const double t80 = t77 * t79;
    const double t83 = bb + t69 * t71 / 0.4e1 + t75 * t80 / 0.4e1;
    const double t92 = 0.1e1 + t84 * t71 / 0.4e1 + t87 * t80 / 0.4e1 + 0.23873241463784300365e4 * mbeta * t40;
    const double t93 = 0.1e1 / t92;
    const double t95 = t83 * t93 + aa;
    const double t96 = 0.1e1 / t95;
    const double t97 = safe_math::sqrt( t62 );
    const double t98 = t96 * t97;
    const double t99 = safe_math::pow( t7, 0.1e1 / 0.6e1 );
    const double t101 = 0.1e1 / t99 / t7;
    const double t104 = safe_math::exp( -t68 * t98 * t101 );
    const double t105 = t66 * t104;
    const double t106 = t44 * t44;
    const double t107 = t106 * zeta_tol;
    const double t108 = t46 * t46;
    const double t109 = t108 * t42;
    const double t110 = piecewise_functor_3( t43, t107, t109 );
    const double t111 = t51 * t51;
    const double t112 = t111 * t49;
    const double t113 = piecewise_functor_3( t50, t107, t112 );
    const double t114 = t110 + t113;
    const double t115 = safe_math::sqrt( t114 );
    const double t116 = 0.1e1 / t115;
    const double t118 = M_SQRT2;
    const double t119 = t95 * t116 * t118;
    const double t120 = t105 * t119;


    eps = t27 + t60 + t120;

  }

  BUILTIN_KERNEL_EVAL_RETURN
    eval_exc_vxc_polar_impl( double rho_a, double rho_b, double sigma_aa, double sigma_ab, double sigma_bb, double& eps, double& vrho_a, double& vrho_b, double& vsigma_aa, double& vsigma_ab, double& vsigma_bb ) {

    constexpr double t1 = constants::m_cbrt_3;
    constexpr double t3 = constants::m_cbrt_one_ov_pi;
    constexpr double t5 = constants::m_cbrt_4;
    constexpr double t56 = constants::m_cbrt_2;
    constexpr double t4 = t1 * t3;
    constexpr double t6 = t5 * t5;
    constexpr double t67 = aa + bb;
    constexpr double t68 = ftilde * t67;
    constexpr double t69 = malpha * t1;
    constexpr double t70 = t3 * t6;
    constexpr double t74 = t1 * t1;
    constexpr double t75 = mbeta * t74;
    constexpr double t76 = t3 * t3;
    constexpr double t77 = t76 * t5;
    constexpr double t84 = mgamma * t1;
    constexpr double t87 = mdelta * t74;


    const double t7 = rho_a + rho_b;
    const double t8 = safe_math::cbrt( t7 );
    const double t9 = 0.1e1 / t8;
    const double t10 = t6 * t9;
    const double t11 = t4 * t10;
    const double t12 = t11 / 0.4e1;
    const double t13 = 0.1e1 <= t12;
    const double t14 = safe_math::sqrt( t11 );
    const double t17 = 0.1e1 + 0.52645e0 * t14 + 0.8335e-1 * t11;
    const double t20 = safe_math::log( t12 );
    const double t23 = t4 * t10 * t20;
    const double t27 = piecewise_functor_3( t13, -0.1423e0 / t17, 0.311e-1 * t20 - 0.48e-1 + 0.5e-3 * t23 - 0.29e-2 * t11 );
    const double t30 = 0.1e1 + 0.69905e0 * t14 + 0.65275e-1 * t11;
    const double t37 = piecewise_functor_3( t13, -0.843e-1 / t30, 0.1555e-1 * t20 - 0.269e-1 + 0.175e-3 * t23 - 0.12e-2 * t11 );
    const double t38 = t37 - t27;
    const double t39 = rho_a - rho_b;
    const double t40 = 0.1e1 / t7;
    const double t41 = t39 * t40;
    const double t42 = 0.1e1 + t41;
    const double t43 = t42 <= zeta_tol;
    const double t44 = safe_math::cbrt( zeta_tol );
    const double t45 = t44 * zeta_tol;
    const double t46 = safe_math::cbrt( t42 );
    const double t47 = t46 * t42;
    const double t48 = piecewise_functor_3( t43, t45, t47 );
    const double t49 = 0.1e1 - t41;
    const double t50 = t49 <= zeta_tol;
    const double t51 = safe_math::cbrt( t49 );
    const double t52 = t51 * t49;
    const double t53 = piecewise_functor_3( t50, t45, t52 );
    const double t54 = t48 + t53 - 0.2e1;
    const double t59 = 0.1e1 / ( 0.2e1 * t56 - 0.2e1 );
    const double t60 = t38 * t54 * t59;
    const double t62 = sigma_aa + 0.2e1 * sigma_ab + sigma_bb;
    const double t63 = t7 * t7;
    const double t65 = 0.1e1 / t8 / t63;
    const double t66 = t62 * t65;
    const double t71 = t70 * t9;
    const double t78 = t8 * t8;
    const double t79 = 0.1e1 / t78;
    const double t80 = t77 * t79;
    const double t83 = bb + t69 * t71 / 0.4e1 + t75 * t80 / 0.4e1;
    const double t92 = 0.1e1 + t84 * t71 / 0.4e1 + t87 * t80 / 0.4e1 + 0.23873241463784300365e4 * mbeta * t40;
    const double t93 = 0.1e1 / t92;
    const double t95 = t83 * t93 + aa;
    const double t96 = 0.1e1 / t95;
    const double t97 = safe_math::sqrt( t62 );
    const double t98 = t96 * t97;
    const double t99 = safe_math::pow( t7, 0.1e1 / 0.6e1 );
    const double t101 = 0.1e1 / t99 / t7;
    const double t104 = safe_math::exp( -t68 * t98 * t101 );
    const double t105 = t66 * t104;
    const double t106 = t44 * t44;
    const double t107 = t106 * zeta_tol;
    const double t108 = t46 * t46;
    const double t109 = t108 * t42;
    const double t110 = piecewise_functor_3( t43, t107, t109 );
    const double t111 = t51 * t51;
    const double t112 = t111 * t49;
    const double t113 = piecewise_functor_3( t50, t107, t112 );
    const double t114 = t110 + t113;
    const double t115 = safe_math::sqrt( t114 );
    const double t116 = 0.1e1 / t115;
    const double t118 = M_SQRT2;
    const double t119 = t95 * t116 * t118;
    const double t120 = t105 * t119;
    const double t121 = t17 * t17;
    const double t122 = 0.1e1 / t121;
    const double t124 = 0.1e1 / t14 * t1;
    const double t126 = 0.1e1 / t8 / t7;
    const double t127 = t70 * t126;
    const double t128 = t124 * t127;
    const double t130 = t6 * t126;
    const double t131 = t4 * t130;
    const double t133 = -0.87741666666666666667e-1 * t128 - 0.27783333333333333333e-1 * t131;
    const double t138 = t4 * t130 * t20;
    const double t142 = piecewise_functor_3( t13, 0.1423e0 * t122 * t133, -0.10366666666666666667e-1 * t40 - 0.16666666666666666667e-3 * t138 + 0.8e-3 * t131 );
    const double t143 = t30 * t30;
    const double t144 = 0.1e1 / t143;
    const double t147 = -0.11650833333333333333e0 * t128 - 0.21758333333333333333e-1 * t131;
    const double t154 = piecewise_functor_3( t13, 0.843e-1 * t144 * t147, -0.51833333333333333333e-2 * t40 - 0.58333333333333333333e-4 * t138 + 0.34166666666666666667e-3 * t131 );
    const double t155 = t154 - t142;
    const double t157 = t155 * t54 * t59;
    const double t158 = 0.1e1 / t63;
    const double t159 = t39 * t158;
    const double t160 = t40 - t159;
    const double t163 = piecewise_functor_3( t43, 0.0, 0.4e1 / 0.3e1 * t46 * t160 );
    const double t164 = -t160;
    const double t167 = piecewise_functor_3( t50, 0.0, 0.4e1 / 0.3e1 * t51 * t164 );
    const double t168 = t163 + t167;
    const double t170 = t38 * t168 * t59;
    const double t171 = t63 * t7;
    const double t173 = 0.1e1 / t8 / t171;
    const double t174 = t62 * t173;
    const double t175 = t174 * t104;
    const double t176 = t175 * t119;
    const double t177 = 0.7e1 / 0.3e1 * t176;
    const double t178 = t95 * t95;
    const double t179 = 0.1e1 / t178;
    const double t180 = t68 * t179;
    const double t181 = t97 * t101;
    const double t186 = t77 / t78 / t7;
    const double t189 = -t69 * t127 / 0.12e2 - t75 * t186 / 0.6e1;
    const double t191 = t92 * t92;
    const double t192 = 0.1e1 / t191;
    const double t193 = t83 * t192;
    const double t200 = -t84 * t127 / 0.12e2 - t87 * t186 / 0.6e1 - 0.23873241463784300365e4 * mbeta * t158;
    const double t202 = t189 * t93 - t193 * t200;
    const double t206 = 0.1e1 / t99 / t63;
    const double t210 = t180 * t181 * t202 + 0.7e1 / 0.6e1 * t68 * t98 * t206;
    const double t211 = t66 * t210;
    const double t212 = t104 * t95;
    const double t213 = t116 * t118;
    const double t214 = t212 * t213;
    const double t215 = t211 * t214;
    const double t216 = t202 * t116;
    const double t217 = t216 * t118;
    const double t218 = t105 * t217;
    const double t220 = 0.1e1 / t115 / t114;
    const double t221 = t95 * t220;
    const double t224 = piecewise_functor_3( t43, 0.0, 0.5e1 / 0.3e1 * t108 * t160 );
    const double t227 = piecewise_functor_3( t50, 0.0, 0.5e1 / 0.3e1 * t111 * t164 );
    const double t228 = t224 + t227;
    const double t229 = t118 * t228;
    const double t230 = t221 * t229;
    const double t231 = t105 * t230;
    const double t232 = t231 / 0.2e1;
    const double t235 = -t40 - t159;
    const double t238 = piecewise_functor_3( t43, 0.0, 0.4e1 / 0.3e1 * t46 * t235 );
    const double t239 = -t235;
    const double t242 = piecewise_functor_3( t50, 0.0, 0.4e1 / 0.3e1 * t51 * t239 );
    const double t243 = t238 + t242;
    const double t245 = t38 * t243 * t59;
    const double t248 = piecewise_functor_3( t43, 0.0, 0.5e1 / 0.3e1 * t108 * t235 );
    const double t251 = piecewise_functor_3( t50, 0.0, 0.5e1 / 0.3e1 * t111 * t239 );
    const double t252 = t248 + t251;
    const double t253 = t118 * t252;
    const double t254 = t221 * t253;
    const double t255 = t105 * t254;
    const double t256 = t255 / 0.2e1;
    const double t259 = t65 * t104;
    const double t260 = t259 * t119;
    const double t261 = safe_math::sqrt( t7 );
    const double t263 = 0.1e1 / t261 / t171;
    const double t264 = t97 * t263;
    const double t267 = t67 * t104 * t213;
    const double t268 = t264 * ftilde * t267;
    const double t269 = t268 / 0.2e1;
    const double t271 = 0.2e1 * t260;


    eps = t27 + t60 + t120;
    vrho_a = t27 + t60 + t120 + t7 * ( t142 + t157 + t170 - t177 + t215 + t218 - t232 );
    vrho_b = t27 + t60 + t120 + t7 * ( t142 + t157 + t245 - t177 + t215 + t218 - t256 );
    vsigma_aa = t7 * ( t260 - t269 );
    vsigma_ab = t7 * ( t271 - t268 );
    vsigma_bb = vsigma_aa;

  }

  BUILTIN_KERNEL_EVAL_RETURN
    eval_fxc_polar_impl( double rho_a, double rho_b, double sigma_aa, double sigma_ab, double sigma_bb, double& v2rho2_aa, double& v2rho2_ab, double& v2rho2_bb, double& v2rhosigma_a_aa, double& v2rhosigma_a_ab, double& v2rhosigma_a_bb, double& v2rhosigma_b_aa, double& v2rhosigma_b_ab, double& v2rhosigma_b_bb, double& v2sigma2_aa_aa, double& v2sigma2_aa_ab, double& v2sigma2_aa_bb, double& v2sigma2_ab_ab, double& v2sigma2_ab_bb, double& v2sigma2_bb_bb ) {

    constexpr double t1 = constants::m_cbrt_3;
    constexpr double t3 = constants::m_cbrt_one_ov_pi;
    constexpr double t5 = constants::m_cbrt_4;
    constexpr double t56 = constants::m_cbrt_2;
    constexpr double t4 = t1 * t3;
    constexpr double t6 = t5 * t5;
    constexpr double t67 = aa + bb;
    constexpr double t68 = ftilde * t67;
    constexpr double t69 = malpha * t1;
    constexpr double t70 = t3 * t6;
    constexpr double t74 = t1 * t1;
    constexpr double t75 = mbeta * t74;
    constexpr double t76 = t3 * t3;
    constexpr double t77 = t76 * t5;
    constexpr double t84 = mgamma * t1;
    constexpr double t87 = mdelta * t74;
    constexpr double t623 = ftilde * ftilde;
    constexpr double t625 = t67 * t67;


    const double t7 = rho_a + rho_b;
    const double t8 = safe_math::cbrt( t7 );
    const double t9 = 0.1e1 / t8;
    const double t10 = t6 * t9;
    const double t11 = t4 * t10;
    const double t12 = t11 / 0.4e1;
    const double t13 = 0.1e1 <= t12;
    const double t14 = safe_math::sqrt( t11 );
    const double t17 = 0.1e1 + 0.52645e0 * t14 + 0.8335e-1 * t11;
    const double t20 = safe_math::log( t12 );
    const double t23 = t4 * t10 * t20;
    const double t27 = piecewise_functor_3( t13, -0.1423e0 / t17, 0.311e-1 * t20 - 0.48e-1 + 0.5e-3 * t23 - 0.29e-2 * t11 );
    const double t30 = 0.1e1 + 0.69905e0 * t14 + 0.65275e-1 * t11;
    const double t37 = piecewise_functor_3( t13, -0.843e-1 / t30, 0.1555e-1 * t20 - 0.269e-1 + 0.175e-3 * t23 - 0.12e-2 * t11 );
    const double t38 = t37 - t27;
    const double t39 = rho_a - rho_b;
    const double t40 = 0.1e1 / t7;
    const double t41 = t39 * t40;
    const double t42 = 0.1e1 + t41;
    const double t43 = t42 <= zeta_tol;
    const double t44 = safe_math::cbrt( zeta_tol );
    const double t45 = t44 * zeta_tol;
    const double t46 = safe_math::cbrt( t42 );
    const double t47 = t46 * t42;
    const double t48 = piecewise_functor_3( t43, t45, t47 );
    const double t49 = 0.1e1 - t41;
    const double t50 = t49 <= zeta_tol;
    const double t51 = safe_math::cbrt( t49 );
    const double t52 = t51 * t49;
    const double t53 = piecewise_functor_3( t50, t45, t52 );
    const double t54 = t48 + t53 - 0.2e1;
    const double t59 = 0.1e1 / ( 0.2e1 * t56 - 0.2e1 );
    const double t62 = sigma_aa + 0.2e1 * sigma_ab + sigma_bb;
    const double t63 = t7 * t7;
    const double t65 = 0.1e1 / t8 / t63;
    const double t66 = t62 * t65;
    const double t71 = t70 * t9;
    const double t78 = t8 * t8;
    const double t79 = 0.1e1 / t78;
    const double t80 = t77 * t79;
    const double t83 = bb + t69 * t71 / 0.4e1 + t75 * t80 / 0.4e1;
    const double t92 = 0.1e1 + t84 * t71 / 0.4e1 + t87 * t80 / 0.4e1 + 0.23873241463784300365e4 * mbeta * t40;
    const double t93 = 0.1e1 / t92;
    const double t95 = t83 * t93 + aa;
    const double t96 = 0.1e1 / t95;
    const double t97 = safe_math::sqrt( t62 );
    const double t98 = t96 * t97;
    const double t99 = safe_math::pow( t7, 0.1e1 / 0.6e1 );
    const double t101 = 0.1e1 / t99 / t7;
    const double t104 = safe_math::exp( -t68 * t98 * t101 );
    const double t105 = t66 * t104;
    const double t106 = t44 * t44;
    const double t107 = t106 * zeta_tol;
    const double t108 = t46 * t46;
    const double t109 = t108 * t42;
    const double t110 = piecewise_functor_3( t43, t107, t109 );
    const double t111 = t51 * t51;
    const double t112 = t111 * t49;
    const double t113 = piecewise_functor_3( t50, t107, t112 );
    const double t114 = t110 + t113;
    const double t115 = safe_math::sqrt( t114 );
    const double t116 = 0.1e1 / t115;
    const double t118 = M_SQRT2;
    const double t119 = t95 * t116 * t118;
    const double t121 = t17 * t17;
    const double t122 = 0.1e1 / t121;
    const double t124 = 0.1e1 / t14 * t1;
    const double t126 = 0.1e1 / t8 / t7;
    const double t127 = t70 * t126;
    const double t128 = t124 * t127;
    const double t130 = t6 * t126;
    const double t131 = t4 * t130;
    const double t133 = -0.87741666666666666667e-1 * t128 - 0.27783333333333333333e-1 * t131;
    const double t138 = t4 * t130 * t20;
    const double t142 = piecewise_functor_3( t13, 0.1423e0 * t122 * t133, -0.10366666666666666667e-1 * t40 - 0.16666666666666666667e-3 * t138 + 0.8e-3 * t131 );
    const double t143 = t30 * t30;
    const double t144 = 0.1e1 / t143;
    const double t147 = -0.11650833333333333333e0 * t128 - 0.21758333333333333333e-1 * t131;
    const double t154 = piecewise_functor_3( t13, 0.843e-1 * t144 * t147, -0.51833333333333333333e-2 * t40 - 0.58333333333333333333e-4 * t138 + 0.34166666666666666667e-3 * t131 );
    const double t155 = t154 - t142;
    const double t157 = t155 * t54 * t59;
    const double t158 = 0.1e1 / t63;
    const double t159 = t39 * t158;
    const double t160 = t40 - t159;
    const double t163 = piecewise_functor_3( t43, 0.0, 0.4e1 / 0.3e1 * t46 * t160 );
    const double t164 = -t160;
    const double t167 = piecewise_functor_3( t50, 0.0, 0.4e1 / 0.3e1 * t51 * t164 );
    const double t168 = t163 + t167;
    const double t170 = t38 * t168 * t59;
    const double t171 = t63 * t7;
    const double t173 = 0.1e1 / t8 / t171;
    const double t174 = t62 * t173;
    const double t175 = t174 * t104;
    const double t176 = t175 * t119;
    const double t178 = t95 * t95;
    const double t179 = 0.1e1 / t178;
    const double t180 = t68 * t179;
    const double t181 = t97 * t101;
    const double t186 = t77 / t78 / t7;
    const double t189 = -t69 * t127 / 0.12e2 - t75 * t186 / 0.6e1;
    const double t191 = t92 * t92;
    const double t192 = 0.1e1 / t191;
    const double t193 = t83 * t192;
    const double t200 = -t84 * t127 / 0.12e2 - t87 * t186 / 0.6e1 - 0.23873241463784300365e4 * mbeta * t158;
    const double t202 = t189 * t93 - t193 * t200;
    const double t206 = 0.1e1 / t99 / t63;
    const double t210 = t180 * t181 * t202 + 0.7e1 / 0.6e1 * t68 * t98 * t206;
    const double t211 = t66 * t210;
    const double t212 = t104 * t95;
    const double t213 = t116 * t118;
    const double t214 = t212 * t213;
    const double t215 = t211 * t214;
    const double t216 = t202 * t116;
    const double t217 = t216 * t118;
    const double t218 = t105 * t217;
    const double t220 = 0.1e1 / t115 / t114;
    const double t221 = t95 * t220;
    const double t224 = piecewise_functor_3( t43, 0.0, 0.5e1 / 0.3e1 * t108 * t160 );
    const double t227 = piecewise_functor_3( t50, 0.0, 0.5e1 / 0.3e1 * t111 * t164 );
    const double t228 = t224 + t227;
    const double t229 = t118 * t228;
    const double t230 = t221 * t229;
    const double t231 = t105 * t230;
    const double t232 = t231 / 0.2e1;
    const double t235 = -t40 - t159;
    const double t238 = piecewise_functor_3( t43, 0.0, 0.4e1 / 0.3e1 * t46 * t235 );
    const double t239 = -t235;
    const double t242 = piecewise_functor_3( t50, 0.0, 0.4e1 / 0.3e1 * t51 * t239 );
    const double t243 = t238 + t242;
    const double t245 = t38 * t243 * t59;
    const double t248 = piecewise_functor_3( t43, 0.0, 0.5e1 / 0.3e1 * t108 * t235 );
    const double t251 = piecewise_functor_3( t50, 0.0, 0.5e1 / 0.3e1 * t111 * t239 );
    const double t252 = t248 + t251;
    const double t253 = t118 * t252;
    const double t254 = t221 * t253;
    const double t255 = t105 * t254;
    const double t256 = t255 / 0.2e1;
    const double t259 = t65 * t104;
    const double t260 = t259 * t119;
    const double t261 = safe_math::sqrt( t7 );
    const double t263 = 0.1e1 / t261 / t171;
    const double t264 = t97 * t263;
    const double t267 = t67 * t104 * t213;
    const double t268 = t264 * ftilde * t267;
    const double t269 = t268 / 0.2e1;
    const double t271 = 0.2e1 * t260;
    const double t273 = 0.2e1 * t142;
    const double t274 = 0.2e1 * t157;
    const double t276 = 0.14e2 / 0.3e1 * t176;
    const double t277 = 0.2e1 * t215;
    const double t278 = 0.2e1 * t218;
    const double t280 = 0.1e1 / t121 / t17;
    const double t281 = t133 * t133;
    const double t286 = 0.1e1 / t14 / t11 * t74;
    const double t289 = t77 / t78 / t63;
    const double t290 = t286 * t289;
    const double t292 = t70 * t65;
    const double t293 = t124 * t292;
    const double t295 = t6 * t65;
    const double t296 = t4 * t295;
    const double t298 = -0.58494444444444444445e-1 * t290 + 0.11698888888888888889e0 * t293 + 0.37044444444444444444e-1 * t296;
    const double t304 = t4 * t295 * t20;
    const double t308 = piecewise_functor_3( t13, -0.2846e0 * t280 * t281 + 0.1423e0 * t122 * t298, 0.10366666666666666667e-1 * t158 + 0.22222222222222222223e-3 * t304 - 0.10111111111111111111e-2 * t296 );
    const double t310 = 0.1e1 / t143 / t30;
    const double t311 = t147 * t147;
    const double t317 = -0.7767222222222222222e-1 * t290 + 0.15534444444444444444e0 * t293 + 0.29011111111111111111e-1 * t296;
    const double t325 = piecewise_functor_3( t13, -0.1686e0 * t310 * t311 + 0.843e-1 * t144 * t317, 0.51833333333333333333e-2 * t158 + 0.77777777777777777777e-4 * t304 - 0.43611111111111111112e-3 * t296 );
    const double t326 = t325 - t308;
    const double t328 = t326 * t54 * t59;
    const double t330 = t155 * t168 * t59;
    const double t331 = 0.2e1 * t330;
    const double t332 = 0.1e1 / t108;
    const double t333 = t160 * t160;
    const double t336 = 0.1e1 / t171;
    const double t337 = t39 * t336;
    const double t339 = -0.2e1 * t158 + 0.2e1 * t337;
    const double t343 = piecewise_functor_3( t43, 0.0, 0.4e1 / 0.9e1 * t332 * t333 + 0.4e1 / 0.3e1 * t46 * t339 );
    const double t344 = 0.1e1 / t111;
    const double t345 = t164 * t164;
    const double t348 = -t339;
    const double t352 = piecewise_functor_3( t50, 0.0, 0.4e1 / 0.9e1 * t344 * t345 + 0.4e1 / 0.3e1 * t51 * t348 );
    const double t353 = t343 + t352;
    const double t355 = t38 * t353 * t59;
    const double t356 = t63 * t63;
    const double t358 = 0.1e1 / t8 / t356;
    const double t359 = t62 * t358;
    const double t360 = t359 * t104;
    const double t361 = t360 * t119;
    const double t362 = 0.7e2 / 0.9e1 * t361;
    const double t363 = t174 * t210;
    const double t364 = t363 * t214;
    const double t365 = 0.14e2 / 0.3e1 * t364;
    const double t366 = t175 * t217;
    const double t367 = 0.14e2 / 0.3e1 * t366;
    const double t368 = t175 * t230;
    const double t369 = 0.7e1 / 0.3e1 * t368;
    const double t371 = 0.1e1 / t178 / t95;
    const double t372 = t68 * t371;
    const double t373 = t202 * t202;
    const double t377 = t97 * t206;
    const double t385 = t69 * t292 / 0.9e1 + 0.5e1 / 0.18e2 * t75 * t289;
    const double t387 = t189 * t192;
    const double t391 = 0.1e1 / t191 / t92;
    const double t392 = t83 * t391;
    const double t393 = t200 * t200;
    const double t402 = t84 * t292 / 0.9e1 + 0.5e1 / 0.18e2 * t87 * t289 + 0.4774648292756860073e4 * mbeta * t336;
    const double t404 = -t193 * t402 - 0.2e1 * t387 * t200 + t385 * t93 + 0.2e1 * t392 * t393;
    const double t408 = 0.1e1 / t99 / t171;
    const double t412 = -0.2e1 * t372 * t181 * t373 - 0.7e1 / 0.3e1 * t180 * t377 * t202 + t180 * t181 * t404 - 0.91e2 / 0.36e2 * t68 * t98 * t408;
    const double t413 = t66 * t412;
    const double t414 = t413 * t214;
    const double t415 = t210 * t210;
    const double t416 = t66 * t415;
    const double t417 = t416 * t214;
    const double t418 = t104 * t202;
    const double t419 = t418 * t213;
    const double t420 = t211 * t419;
    const double t421 = 0.2e1 * t420;
    const double t422 = t210 * t104;
    const double t423 = t66 * t422;
    const double t424 = t423 * t230;
    const double t426 = t404 * t116 * t118;
    const double t427 = t105 * t426;
    const double t428 = t202 * t220;
    const double t429 = t428 * t229;
    const double t430 = t105 * t429;
    const double t431 = t114 * t114;
    const double t433 = 0.1e1 / t115 / t431;
    const double t434 = t95 * t433;
    const double t435 = t228 * t228;
    const double t436 = t118 * t435;
    const double t437 = t434 * t436;
    const double t438 = t105 * t437;
    const double t439 = 0.3e1 / 0.4e1 * t438;
    const double t440 = 0.1e1 / t46;
    const double t446 = piecewise_functor_3( t43, 0.0, 0.1e2 / 0.9e1 * t440 * t333 + 0.5e1 / 0.3e1 * t108 * t339 );
    const double t447 = 0.1e1 / t51;
    const double t453 = piecewise_functor_3( t50, 0.0, 0.1e2 / 0.9e1 * t447 * t345 + 0.5e1 / 0.3e1 * t111 * t348 );
    const double t454 = t446 + t453;
    const double t455 = t118 * t454;
    const double t456 = t221 * t455;
    const double t457 = t105 * t456;
    const double t458 = t457 / 0.2e1;
    const double t459 = t308 + t328 + t331 + t355 + t362 - t365 - t367 + t369 + t414 + t417 + t421 - t424 + t427 - t430 + t439 - t458;
    const double t462 = t155 * t243 * t59;
    const double t463 = t332 * t235;
    const double t466 = t46 * t39;
    const double t470 = piecewise_functor_3( t43, 0.0, 0.4e1 / 0.9e1 * t463 * t160 + 0.8e1 / 0.3e1 * t466 * t336 );
    const double t471 = t344 * t239;
    const double t474 = t51 * t39;
    const double t478 = piecewise_functor_3( t50, 0.0, 0.4e1 / 0.9e1 * t471 * t164 - 0.8e1 / 0.3e1 * t474 * t336 );
    const double t479 = t470 + t478;
    const double t481 = t38 * t479 * t59;
    const double t485 = t175 * t254;
    const double t487 = t423 * t254;
    const double t489 = t428 * t253;
    const double t490 = t105 * t489;
    const double t492 = t66 * t212;
    const double t493 = t433 * t118;
    const double t494 = t252 * t228;
    const double t495 = t493 * t494;
    const double t496 = t492 * t495;
    const double t498 = t440 * t235;
    const double t501 = t108 * t39;
    const double t505 = piecewise_functor_3( t43, 0.0, 0.1e2 / 0.9e1 * t498 * t160 + 0.1e2 / 0.3e1 * t501 * t336 );
    const double t506 = t447 * t239;
    const double t509 = t111 * t39;
    const double t513 = piecewise_functor_3( t50, 0.0, 0.1e2 / 0.9e1 * t506 * t164 - 0.1e2 / 0.3e1 * t509 * t336 );
    const double t514 = t505 + t513;
    const double t515 = t118 * t514;
    const double t516 = t221 * t515;
    const double t517 = t105 * t516;
    const double t519 = t308 + t328 + t330 + t462 + t481 + t362 - t365 - t367 + 0.7e1 / 0.6e1 * t368 + t414 + t417 + t421 - t424 / 0.2e1 + t427 - t430 / 0.2e1 + 0.7e1 / 0.6e1 * t485 - t487 / 0.2e1 - t490 / 0.2e1 + 0.3e1 / 0.4e1 * t496 - t517 / 0.2e1;
    const double t522 = 0.2e1 * t462;
    const double t523 = t235 * t235;
    const double t527 = 0.2e1 * t158 + 0.2e1 * t337;
    const double t531 = piecewise_functor_3( t43, 0.0, 0.4e1 / 0.9e1 * t332 * t523 + 0.4e1 / 0.3e1 * t46 * t527 );
    const double t532 = t239 * t239;
    const double t535 = -t527;
    const double t539 = piecewise_functor_3( t50, 0.0, 0.4e1 / 0.9e1 * t344 * t532 + 0.4e1 / 0.3e1 * t51 * t535 );
    const double t540 = t531 + t539;
    const double t542 = t38 * t540 * t59;
    const double t543 = 0.7e1 / 0.3e1 * t485;
    const double t544 = t252 * t252;
    const double t545 = t118 * t544;
    const double t546 = t434 * t545;
    const double t547 = t105 * t546;
    const double t548 = 0.3e1 / 0.4e1 * t547;
    const double t554 = piecewise_functor_3( t43, 0.0, 0.1e2 / 0.9e1 * t440 * t523 + 0.5e1 / 0.3e1 * t108 * t527 );
    const double t560 = piecewise_functor_3( t50, 0.0, 0.1e2 / 0.9e1 * t447 * t532 + 0.5e1 / 0.3e1 * t111 * t535 );
    const double t561 = t554 + t560;
    const double t562 = t118 * t561;
    const double t563 = t221 * t562;
    const double t564 = t105 * t563;
    const double t565 = t564 / 0.2e1;
    const double t566 = t308 + t328 + t522 + t542 + t362 - t365 - t367 + t543 + t414 + t417 + t421 - t487 + t427 - t490 + t548 - t565;
    const double t568 = t173 * t104;
    const double t569 = t568 * t119;
    const double t570 = 0.7e1 / 0.3e1 * t569;
    const double t571 = t65 * t210;
    const double t572 = t571 * t104;
    const double t573 = t572 * t119;
    const double t574 = t259 * t217;
    const double t575 = t259 * t95;
    const double t576 = t220 * t118;
    const double t577 = t576 * t228;
    const double t578 = t575 * t577;
    const double t579 = t578 / 0.2e1;
    const double t581 = 0.1e1 / t261 / t356;
    const double t582 = t97 * t581;
    const double t584 = t582 * ftilde * t267;
    const double t585 = 0.7e1 / 0.4e1 * t584;
    const double t586 = t264 * t68;
    const double t587 = t422 * t213;
    const double t588 = t586 * t587;
    const double t589 = t588 / 0.2e1;
    const double t590 = t104 * t220;
    const double t591 = t590 * t229;
    const double t592 = t586 * t591;
    const double t593 = t592 / 0.4e1;
    const double t596 = 0.14e2 / 0.3e1 * t569;
    const double t597 = 0.2e1 * t573;
    const double t598 = 0.2e1 * t574;
    const double t599 = 0.7e1 / 0.2e1 * t584;
    const double t600 = t592 / 0.2e1;
    const double t603 = t576 * t252;
    const double t604 = t575 * t603;
    const double t605 = t604 / 0.2e1;
    const double t606 = t590 * t253;
    const double t607 = t586 * t606;
    const double t608 = t607 / 0.4e1;
    const double t611 = t607 / 0.2e1;
    const double t614 = t263 * ftilde;
    const double t615 = t614 * t67;
    const double t616 = 0.1e1 / t97;
    const double t617 = t616 * t104;
    const double t618 = t617 * t213;
    const double t619 = t615 * t618;
    const double t620 = 0.3e1 / 0.4e1 * t619;
    const double t622 = 0.1e1 / t78 / t356;
    const double t624 = t622 * t623;
    const double t627 = t96 * t104;
    const double t628 = t627 * t213;
    const double t629 = t624 * t625 * t628;
    const double t630 = t629 / 0.4e1;
    const double t632 = 0.3e1 / 0.2e1 * t619;
    const double t633 = t629 / 0.2e1;
    const double t635 = 0.3e1 * t619;


    v2rho2_aa = t7 * t459 + 0.2e1 * t170 - t231 + t273 + t274 - t276 + t277 + t278;
    v2rho2_ab = t7 * t519 + t170 - t232 + t245 - t256 + t273 + t274 - t276 + t277 + t278;
    v2rho2_bb = t7 * t566 + 0.2e1 * t245 - t255 + t273 + t274 - t276 + t277 + t278;
    v2rhosigma_a_aa = t260 - t269 + t7 * ( -t570 + t573 + t574 - t579 + t585 - t589 + t593 );
    v2rhosigma_a_ab = t271 - t268 + t7 * ( -t596 + t597 + t598 - t578 + t599 - t588 + t600 );
    v2rhosigma_a_bb = v2rhosigma_a_aa;
    v2rhosigma_b_aa = t260 - t269 + t7 * ( -t570 + t573 + t574 - t605 + t585 - t589 + t608 );
    v2rhosigma_b_ab = t271 - t268 + t7 * ( -t596 + t597 + t598 - t604 + t599 - t588 + t611 );
    v2rhosigma_b_bb = v2rhosigma_b_aa;
    v2sigma2_aa_aa = t7 * ( -t620 + t630 );
    v2sigma2_aa_ab = t7 * ( -t632 + t633 );
    v2sigma2_aa_bb = v2sigma2_aa_aa;
    v2sigma2_ab_ab = t7 * ( -t635 + t629 );
    v2sigma2_ab_bb = v2sigma2_aa_ab;
    v2sigma2_bb_bb = v2sigma2_aa_bb;

  }

  BUILTIN_KERNEL_EVAL_RETURN
    eval_vxc_fxc_polar_impl( double rho_a, double rho_b, double sigma_aa, double sigma_ab, double sigma_bb, double& vrho_a, double& vrho_b, double& vsigma_aa, double& vsigma_ab, double& vsigma_bb, double& v2rho2_aa, double& v2rho2_ab, double& v2rho2_bb, double& v2rhosigma_a_aa, double& v2rhosigma_a_ab, double& v2rhosigma_a_bb, double& v2rhosigma_b_aa, double& v2rhosigma_b_ab, double& v2rhosigma_b_bb, double& v2sigma2_aa_aa, double& v2sigma2_aa_ab, double& v2sigma2_aa_bb, double& v2sigma2_ab_ab, double& v2sigma2_ab_bb, double& v2sigma2_bb_bb ) {

    constexpr double t1 = constants::m_cbrt_3;
    constexpr double t3 = constants::m_cbrt_one_ov_pi;
    constexpr double t5 = constants::m_cbrt_4;
    constexpr double t56 = constants::m_cbrt_2;
    constexpr double t4 = t1 * t3;
    constexpr double t6 = t5 * t5;
    constexpr double t67 = aa + bb;
    constexpr double t68 = ftilde * t67;
    constexpr double t69 = malpha * t1;
    constexpr double t70 = t3 * t6;
    constexpr double t74 = t1 * t1;
    constexpr double t75 = mbeta * t74;
    constexpr double t76 = t3 * t3;
    constexpr double t77 = t76 * t5;
    constexpr double t84 = mgamma * t1;
    constexpr double t87 = mdelta * t74;
    constexpr double t623 = ftilde * ftilde;
    constexpr double t625 = t67 * t67;


    const double t7 = rho_a + rho_b;
    const double t8 = safe_math::cbrt( t7 );
    const double t9 = 0.1e1 / t8;
    const double t10 = t6 * t9;
    const double t11 = t4 * t10;
    const double t12 = t11 / 0.4e1;
    const double t13 = 0.1e1 <= t12;
    const double t14 = safe_math::sqrt( t11 );
    const double t17 = 0.1e1 + 0.52645e0 * t14 + 0.8335e-1 * t11;
    const double t20 = safe_math::log( t12 );
    const double t23 = t4 * t10 * t20;
    const double t27 = piecewise_functor_3( t13, -0.1423e0 / t17, 0.311e-1 * t20 - 0.48e-1 + 0.5e-3 * t23 - 0.29e-2 * t11 );
    const double t30 = 0.1e1 + 0.69905e0 * t14 + 0.65275e-1 * t11;
    const double t37 = piecewise_functor_3( t13, -0.843e-1 / t30, 0.1555e-1 * t20 - 0.269e-1 + 0.175e-3 * t23 - 0.12e-2 * t11 );
    const double t38 = t37 - t27;
    const double t39 = rho_a - rho_b;
    const double t40 = 0.1e1 / t7;
    const double t41 = t39 * t40;
    const double t42 = 0.1e1 + t41;
    const double t43 = t42 <= zeta_tol;
    const double t44 = safe_math::cbrt( zeta_tol );
    const double t45 = t44 * zeta_tol;
    const double t46 = safe_math::cbrt( t42 );
    const double t47 = t46 * t42;
    const double t48 = piecewise_functor_3( t43, t45, t47 );
    const double t49 = 0.1e1 - t41;
    const double t50 = t49 <= zeta_tol;
    const double t51 = safe_math::cbrt( t49 );
    const double t52 = t51 * t49;
    const double t53 = piecewise_functor_3( t50, t45, t52 );
    const double t54 = t48 + t53 - 0.2e1;
    const double t59 = 0.1e1 / ( 0.2e1 * t56 - 0.2e1 );
    const double t60 = t38 * t54 * t59;
    const double t62 = sigma_aa + 0.2e1 * sigma_ab + sigma_bb;
    const double t63 = t7 * t7;
    const double t65 = 0.1e1 / t8 / t63;
    const double t66 = t62 * t65;
    const double t71 = t70 * t9;
    const double t78 = t8 * t8;
    const double t79 = 0.1e1 / t78;
    const double t80 = t77 * t79;
    const double t83 = bb + t69 * t71 / 0.4e1 + t75 * t80 / 0.4e1;
    const double t92 = 0.1e1 + t84 * t71 / 0.4e1 + t87 * t80 / 0.4e1 + 0.23873241463784300365e4 * mbeta * t40;
    const double t93 = 0.1e1 / t92;
    const double t95 = t83 * t93 + aa;
    const double t96 = 0.1e1 / t95;
    const double t97 = safe_math::sqrt( t62 );
    const double t98 = t96 * t97;
    const double t99 = safe_math::pow( t7, 0.1e1 / 0.6e1 );
    const double t101 = 0.1e1 / t99 / t7;
    const double t104 = safe_math::exp( -t68 * t98 * t101 );
    const double t105 = t66 * t104;
    const double t106 = t44 * t44;
    const double t107 = t106 * zeta_tol;
    const double t108 = t46 * t46;
    const double t109 = t108 * t42;
    const double t110 = piecewise_functor_3( t43, t107, t109 );
    const double t111 = t51 * t51;
    const double t112 = t111 * t49;
    const double t113 = piecewise_functor_3( t50, t107, t112 );
    const double t114 = t110 + t113;
    const double t115 = safe_math::sqrt( t114 );
    const double t116 = 0.1e1 / t115;
    const double t118 = M_SQRT2;
    const double t119 = t95 * t116 * t118;
    const double t120 = t105 * t119;
    const double t121 = t17 * t17;
    const double t122 = 0.1e1 / t121;
    const double t124 = 0.1e1 / t14 * t1;
    const double t126 = 0.1e1 / t8 / t7;
    const double t127 = t70 * t126;
    const double t128 = t124 * t127;
    const double t130 = t6 * t126;
    const double t131 = t4 * t130;
    const double t133 = -0.87741666666666666667e-1 * t128 - 0.27783333333333333333e-1 * t131;
    const double t138 = t4 * t130 * t20;
    const double t142 = piecewise_functor_3( t13, 0.1423e0 * t122 * t133, -0.10366666666666666667e-1 * t40 - 0.16666666666666666667e-3 * t138 + 0.8e-3 * t131 );
    const double t143 = t30 * t30;
    const double t144 = 0.1e1 / t143;
    const double t147 = -0.11650833333333333333e0 * t128 - 0.21758333333333333333e-1 * t131;
    const double t154 = piecewise_functor_3( t13, 0.843e-1 * t144 * t147, -0.51833333333333333333e-2 * t40 - 0.58333333333333333333e-4 * t138 + 0.34166666666666666667e-3 * t131 );
    const double t155 = t154 - t142;
    const double t157 = t155 * t54 * t59;
    const double t158 = 0.1e1 / t63;
    const double t159 = t39 * t158;
    const double t160 = t40 - t159;
    const double t163 = piecewise_functor_3( t43, 0.0, 0.4e1 / 0.3e1 * t46 * t160 );
    const double t164 = -t160;
    const double t167 = piecewise_functor_3( t50, 0.0, 0.4e1 / 0.3e1 * t51 * t164 );
    const double t168 = t163 + t167;
    const double t170 = t38 * t168 * t59;
    const double t171 = t63 * t7;
    const double t173 = 0.1e1 / t8 / t171;
    const double t174 = t62 * t173;
    const double t175 = t174 * t104;
    const double t176 = t175 * t119;
    const double t177 = 0.7e1 / 0.3e1 * t176;
    const double t178 = t95 * t95;
    const double t179 = 0.1e1 / t178;
    const double t180 = t68 * t179;
    const double t181 = t97 * t101;
    const double t186 = t77 / t78 / t7;
    const double t189 = -t69 * t127 / 0.12e2 - t75 * t186 / 0.6e1;
    const double t191 = t92 * t92;
    const double t192 = 0.1e1 / t191;
    const double t193 = t83 * t192;
    const double t200 = -t84 * t127 / 0.12e2 - t87 * t186 / 0.6e1 - 0.23873241463784300365e4 * mbeta * t158;
    const double t202 = t189 * t93 - t193 * t200;
    const double t206 = 0.1e1 / t99 / t63;
    const double t210 = t180 * t181 * t202 + 0.7e1 / 0.6e1 * t68 * t98 * t206;
    const double t211 = t66 * t210;
    const double t212 = t104 * t95;
    const double t213 = t116 * t118;
    const double t214 = t212 * t213;
    const double t215 = t211 * t214;
    const double t216 = t202 * t116;
    const double t217 = t216 * t118;
    const double t218 = t105 * t217;
    const double t220 = 0.1e1 / t115 / t114;
    const double t221 = t95 * t220;
    const double t224 = piecewise_functor_3( t43, 0.0, 0.5e1 / 0.3e1 * t108 * t160 );
    const double t227 = piecewise_functor_3( t50, 0.0, 0.5e1 / 0.3e1 * t111 * t164 );
    const double t228 = t224 + t227;
    const double t229 = t118 * t228;
    const double t230 = t221 * t229;
    const double t231 = t105 * t230;
    const double t232 = t231 / 0.2e1;
    const double t235 = -t40 - t159;
    const double t238 = piecewise_functor_3( t43, 0.0, 0.4e1 / 0.3e1 * t46 * t235 );
    const double t239 = -t235;
    const double t242 = piecewise_functor_3( t50, 0.0, 0.4e1 / 0.3e1 * t51 * t239 );
    const double t243 = t238 + t242;
    const double t245 = t38 * t243 * t59;
    const double t248 = piecewise_functor_3( t43, 0.0, 0.5e1 / 0.3e1 * t108 * t235 );
    const double t251 = piecewise_functor_3( t50, 0.0, 0.5e1 / 0.3e1 * t111 * t239 );
    const double t252 = t248 + t251;
    const double t253 = t118 * t252;
    const double t254 = t221 * t253;
    const double t255 = t105 * t254;
    const double t256 = t255 / 0.2e1;
    const double t259 = t65 * t104;
    const double t260 = t259 * t119;
    const double t261 = safe_math::sqrt( t7 );
    const double t263 = 0.1e1 / t261 / t171;
    const double t264 = t97 * t263;
    const double t267 = t67 * t104 * t213;
    const double t268 = t264 * ftilde * t267;
    const double t269 = t268 / 0.2e1;
    const double t271 = 0.2e1 * t260;
    const double t273 = 0.2e1 * t142;
    const double t274 = 0.2e1 * t157;
    const double t276 = 0.14e2 / 0.3e1 * t176;
    const double t277 = 0.2e1 * t215;
    const double t278 = 0.2e1 * t218;
    const double t280 = 0.1e1 / t121 / t17;
    const double t281 = t133 * t133;
    const double t286 = 0.1e1 / t14 / t11 * t74;
    const double t289 = t77 / t78 / t63;
    const double t290 = t286 * t289;
    const double t292 = t70 * t65;
    const double t293 = t124 * t292;
    const double t295 = t6 * t65;
    const double t296 = t4 * t295;
    const double t298 = -0.58494444444444444445e-1 * t290 + 0.11698888888888888889e0 * t293 + 0.37044444444444444444e-1 * t296;
    const double t304 = t4 * t295 * t20;
    const double t308 = piecewise_functor_3( t13, -0.2846e0 * t280 * t281 + 0.1423e0 * t122 * t298, 0.10366666666666666667e-1 * t158 + 0.22222222222222222223e-3 * t304 - 0.10111111111111111111e-2 * t296 );
    const double t310 = 0.1e1 / t143 / t30;
    const double t311 = t147 * t147;
    const double t317 = -0.7767222222222222222e-1 * t290 + 0.15534444444444444444e0 * t293 + 0.29011111111111111111e-1 * t296;
    const double t325 = piecewise_functor_3( t13, -0.1686e0 * t310 * t311 + 0.843e-1 * t144 * t317, 0.51833333333333333333e-2 * t158 + 0.77777777777777777777e-4 * t304 - 0.43611111111111111112e-3 * t296 );
    const double t326 = t325 - t308;
    const double t328 = t326 * t54 * t59;
    const double t330 = t155 * t168 * t59;
    const double t331 = 0.2e1 * t330;
    const double t332 = 0.1e1 / t108;
    const double t333 = t160 * t160;
    const double t336 = 0.1e1 / t171;
    const double t337 = t39 * t336;
    const double t339 = -0.2e1 * t158 + 0.2e1 * t337;
    const double t343 = piecewise_functor_3( t43, 0.0, 0.4e1 / 0.9e1 * t332 * t333 + 0.4e1 / 0.3e1 * t46 * t339 );
    const double t344 = 0.1e1 / t111;
    const double t345 = t164 * t164;
    const double t348 = -t339;
    const double t352 = piecewise_functor_3( t50, 0.0, 0.4e1 / 0.9e1 * t344 * t345 + 0.4e1 / 0.3e1 * t51 * t348 );
    const double t353 = t343 + t352;
    const double t355 = t38 * t353 * t59;
    const double t356 = t63 * t63;
    const double t358 = 0.1e1 / t8 / t356;
    const double t359 = t62 * t358;
    const double t360 = t359 * t104;
    const double t361 = t360 * t119;
    const double t362 = 0.7e2 / 0.9e1 * t361;
    const double t363 = t174 * t210;
    const double t364 = t363 * t214;
    const double t365 = 0.14e2 / 0.3e1 * t364;
    const double t366 = t175 * t217;
    const double t367 = 0.14e2 / 0.3e1 * t366;
    const double t368 = t175 * t230;
    const double t369 = 0.7e1 / 0.3e1 * t368;
    const double t371 = 0.1e1 / t178 / t95;
    const double t372 = t68 * t371;
    const double t373 = t202 * t202;
    const double t377 = t97 * t206;
    const double t385 = t69 * t292 / 0.9e1 + 0.5e1 / 0.18e2 * t75 * t289;
    const double t387 = t189 * t192;
    const double t391 = 0.1e1 / t191 / t92;
    const double t392 = t83 * t391;
    const double t393 = t200 * t200;
    const double t402 = t84 * t292 / 0.9e1 + 0.5e1 / 0.18e2 * t87 * t289 + 0.4774648292756860073e4 * mbeta * t336;
    const double t404 = -t193 * t402 - 0.2e1 * t387 * t200 + t385 * t93 + 0.2e1 * t392 * t393;
    const double t408 = 0.1e1 / t99 / t171;
    const double t412 = -0.2e1 * t372 * t181 * t373 - 0.7e1 / 0.3e1 * t180 * t377 * t202 + t180 * t181 * t404 - 0.91e2 / 0.36e2 * t68 * t98 * t408;
    const double t413 = t66 * t412;
    const double t414 = t413 * t214;
    const double t415 = t210 * t210;
    const double t416 = t66 * t415;
    const double t417 = t416 * t214;
    const double t418 = t104 * t202;
    const double t419 = t418 * t213;
    const double t420 = t211 * t419;
    const double t421 = 0.2e1 * t420;
    const double t422 = t210 * t104;
    const double t423 = t66 * t422;
    const double t424 = t423 * t230;
    const double t426 = t404 * t116 * t118;
    const double t427 = t105 * t426;
    const double t428 = t202 * t220;
    const double t429 = t428 * t229;
    const double t430 = t105 * t429;
    const double t431 = t114 * t114;
    const double t433 = 0.1e1 / t115 / t431;
    const double t434 = t95 * t433;
    const double t435 = t228 * t228;
    const double t436 = t118 * t435;
    const double t437 = t434 * t436;
    const double t438 = t105 * t437;
    const double t439 = 0.3e1 / 0.4e1 * t438;
    const double t440 = 0.1e1 / t46;
    const double t446 = piecewise_functor_3( t43, 0.0, 0.1e2 / 0.9e1 * t440 * t333 + 0.5e1 / 0.3e1 * t108 * t339 );
    const double t447 = 0.1e1 / t51;
    const double t453 = piecewise_functor_3( t50, 0.0, 0.1e2 / 0.9e1 * t447 * t345 + 0.5e1 / 0.3e1 * t111 * t348 );
    const double t454 = t446 + t453;
    const double t455 = t118 * t454;
    const double t456 = t221 * t455;
    const double t457 = t105 * t456;
    const double t458 = t457 / 0.2e1;
    const double t459 = t308 + t328 + t331 + t355 + t362 - t365 - t367 + t369 + t414 + t417 + t421 - t424 + t427 - t430 + t439 - t458;
    const double t462 = t155 * t243 * t59;
    const double t463 = t332 * t235;
    const double t466 = t46 * t39;
    const double t470 = piecewise_functor_3( t43, 0.0, 0.4e1 / 0.9e1 * t463 * t160 + 0.8e1 / 0.3e1 * t466 * t336 );
    const double t471 = t344 * t239;
    const double t474 = t51 * t39;
    const double t478 = piecewise_functor_3( t50, 0.0, 0.4e1 / 0.9e1 * t471 * t164 - 0.8e1 / 0.3e1 * t474 * t336 );
    const double t479 = t470 + t478;
    const double t481 = t38 * t479 * t59;
    const double t485 = t175 * t254;
    const double t487 = t423 * t254;
    const double t489 = t428 * t253;
    const double t490 = t105 * t489;
    const double t492 = t66 * t212;
    const double t493 = t433 * t118;
    const double t494 = t252 * t228;
    const double t495 = t493 * t494;
    const double t496 = t492 * t495;
    const double t498 = t440 * t235;
    const double t501 = t108 * t39;
    const double t505 = piecewise_functor_3( t43, 0.0, 0.1e2 / 0.9e1 * t498 * t160 + 0.1e2 / 0.3e1 * t501 * t336 );
    const double t506 = t447 * t239;
    const double t509 = t111 * t39;
    const double t513 = piecewise_functor_3( t50, 0.0, 0.1e2 / 0.9e1 * t506 * t164 - 0.1e2 / 0.3e1 * t509 * t336 );
    const double t514 = t505 + t513;
    const double t515 = t118 * t514;
    const double t516 = t221 * t515;
    const double t517 = t105 * t516;
    const double t519 = t308 + t328 + t330 + t462 + t481 + t362 - t365 - t367 + 0.7e1 / 0.6e1 * t368 + t414 + t417 + t421 - t424 / 0.2e1 + t427 - t430 / 0.2e1 + 0.7e1 / 0.6e1 * t485 - t487 / 0.2e1 - t490 / 0.2e1 + 0.3e1 / 0.4e1 * t496 - t517 / 0.2e1;
    const double t522 = 0.2e1 * t462;
    const double t523 = t235 * t235;
    const double t527 = 0.2e1 * t158 + 0.2e1 * t337;
    const double t531 = piecewise_functor_3( t43, 0.0, 0.4e1 / 0.9e1 * t332 * t523 + 0.4e1 / 0.3e1 * t46 * t527 );
    const double t532 = t239 * t239;
    const double t535 = -t527;
    const double t539 = piecewise_functor_3( t50, 0.0, 0.4e1 / 0.9e1 * t344 * t532 + 0.4e1 / 0.3e1 * t51 * t535 );
    const double t540 = t531 + t539;
    const double t542 = t38 * t540 * t59;
    const double t543 = 0.7e1 / 0.3e1 * t485;
    const double t544 = t252 * t252;
    const double t545 = t118 * t544;
    const double t546 = t434 * t545;
    const double t547 = t105 * t546;
    const double t548 = 0.3e1 / 0.4e1 * t547;
    const double t554 = piecewise_functor_3( t43, 0.0, 0.1e2 / 0.9e1 * t440 * t523 + 0.5e1 / 0.3e1 * t108 * t527 );
    const double t560 = piecewise_functor_3( t50, 0.0, 0.1e2 / 0.9e1 * t447 * t532 + 0.5e1 / 0.3e1 * t111 * t535 );
    const double t561 = t554 + t560;
    const double t562 = t118 * t561;
    const double t563 = t221 * t562;
    const double t564 = t105 * t563;
    const double t565 = t564 / 0.2e1;
    const double t566 = t308 + t328 + t522 + t542 + t362 - t365 - t367 + t543 + t414 + t417 + t421 - t487 + t427 - t490 + t548 - t565;
    const double t568 = t173 * t104;
    const double t569 = t568 * t119;
    const double t570 = 0.7e1 / 0.3e1 * t569;
    const double t571 = t65 * t210;
    const double t572 = t571 * t104;
    const double t573 = t572 * t119;
    const double t574 = t259 * t217;
    const double t575 = t259 * t95;
    const double t576 = t220 * t118;
    const double t577 = t576 * t228;
    const double t578 = t575 * t577;
    const double t579 = t578 / 0.2e1;
    const double t581 = 0.1e1 / t261 / t356;
    const double t582 = t97 * t581;
    const double t584 = t582 * ftilde * t267;
    const double t585 = 0.7e1 / 0.4e1 * t584;
    const double t586 = t264 * t68;
    const double t587 = t422 * t213;
    const double t588 = t586 * t587;
    const double t589 = t588 / 0.2e1;
    const double t590 = t104 * t220;
    const double t591 = t590 * t229;
    const double t592 = t586 * t591;
    const double t593 = t592 / 0.4e1;
    const double t596 = 0.14e2 / 0.3e1 * t569;
    const double t597 = 0.2e1 * t573;
    const double t598 = 0.2e1 * t574;
    const double t599 = 0.7e1 / 0.2e1 * t584;
    const double t600 = t592 / 0.2e1;
    const double t603 = t576 * t252;
    const double t604 = t575 * t603;
    const double t605 = t604 / 0.2e1;
    const double t606 = t590 * t253;
    const double t607 = t586 * t606;
    const double t608 = t607 / 0.4e1;
    const double t611 = t607 / 0.2e1;
    const double t614 = t263 * ftilde;
    const double t615 = t614 * t67;
    const double t616 = 0.1e1 / t97;
    const double t617 = t616 * t104;
    const double t618 = t617 * t213;
    const double t619 = t615 * t618;
    const double t620 = 0.3e1 / 0.4e1 * t619;
    const double t622 = 0.1e1 / t78 / t356;
    const double t624 = t622 * t623;
    const double t627 = t96 * t104;
    const double t628 = t627 * t213;
    const double t629 = t624 * t625 * t628;
    const double t630 = t629 / 0.4e1;
    const double t632 = 0.3e1 / 0.2e1 * t619;
    const double t633 = t629 / 0.2e1;
    const double t635 = 0.3e1 * t619;


    vrho_a = t27 + t60 + t120 + t7 * ( t142 + t157 + t170 - t177 + t215 + t218 - t232 );
    vrho_b = t27 + t60 + t120 + t7 * ( t142 + t157 + t245 - t177 + t215 + t218 - t256 );
    vsigma_aa = t7 * ( t260 - t269 );
    vsigma_ab = t7 * ( t271 - t268 );
    vsigma_bb = vsigma_aa;
    v2rho2_aa = t7 * t459 + 0.2e1 * t170 - t231 + t273 + t274 - t276 + t277 + t278;
    v2rho2_ab = t7 * t519 + t170 - t232 + t245 - t256 + t273 + t274 - t276 + t277 + t278;
    v2rho2_bb = t7 * t566 + 0.2e1 * t245 - t255 + t273 + t274 - t276 + t277 + t278;
    v2rhosigma_a_aa = t260 - t269 + t7 * ( -t570 + t573 + t574 - t579 + t585 - t589 + t593 );
    v2rhosigma_a_ab = t271 - t268 + t7 * ( -t596 + t597 + t598 - t578 + t599 - t588 + t600 );
    v2rhosigma_a_bb = v2rhosigma_a_aa;
    v2rhosigma_b_aa = t260 - t269 + t7 * ( -t570 + t573 + t574 - t605 + t585 - t589 + t608 );
    v2rhosigma_b_ab = t271 - t268 + t7 * ( -t596 + t597 + t598 - t604 + t599 - t588 + t611 );
    v2rhosigma_b_bb = v2rhosigma_b_aa;
    v2sigma2_aa_aa = t7 * ( -t620 + t630 );
    v2sigma2_aa_ab = t7 * ( -t632 + t633 );
    v2sigma2_aa_bb = v2sigma2_aa_aa;
    v2sigma2_ab_ab = t7 * ( -t635 + t629 );
    v2sigma2_ab_bb = v2sigma2_aa_ab;
    v2sigma2_bb_bb = v2sigma2_aa_bb;

  }


};

struct BuiltinP86_C : detail::BuiltinKernelImpl< BuiltinP86_C > {

  BuiltinP86_C( Spin p ) :
    detail::BuiltinKernelImpl< BuiltinP86_C >(p) { }
  
  virtual ~BuiltinP86_C() = default;

};



} // namespace ExchCXX
